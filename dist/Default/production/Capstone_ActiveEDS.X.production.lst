

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Mar 12 00:22:53 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           	psect	idataCOMRAM
    32  0175E6                     __pidataCOMRAM:
    33                           	opt stack 0
    34                           
    35                           ;initializer for _extendPos
    36  0175E6  0320               	dw	800
    37                           
    38                           ;initializer for _retractPos
    39  0175E8  00C8               	dw	200
    40  0000                     _RXFCON0bits	set	3540
    41  0000                     _RXB1CONbits	set	3920
    42  0000                     _RXB1D0	set	3926
    43  0000                     _RXB1D1	set	3927
    44  0000                     _RXB1D2	set	3928
    45  0000                     _RXB1D3	set	3929
    46  0000                     _RXB1D4	set	3930
    47  0000                     _RXB1D5	set	3931
    48  0000                     _RXB1D6	set	3932
    49  0000                     _RXB1D7	set	3933
    50  0000                     _RXB1SIDH	set	3921
    51  0000                     _RXB1SIDL	set	3922
    52  0000                     _RXF0SIDH	set	3840
    53  0000                     _RXF0SIDL	set	3841
    54  0000                     _RXF0SIDLbits	set	3841
    55  0000                     _RXM0SIDH	set	3864
    56  0000                     _RXM0SIDL	set	3865
    57  0000                     _TXB0CONbits	set	3904
    58  0000                     _TXB0D0	set	3910
    59  0000                     _TXB0D1	set	3911
    60  0000                     _TXB0D2	set	3912
    61  0000                     _TXB0D3	set	3913
    62  0000                     _TXB0D4	set	3914
    63  0000                     _TXB0D5	set	3915
    64  0000                     _TXB0D6	set	3916
    65  0000                     _TXB0D7	set	3917
    66  0000                     _TXB0DLC	set	3909
    67  0000                     _TXB0SIDH	set	3905
    68  0000                     _TXB0SIDL	set	3906
    69  0000                     _TXB0SIDLbits	set	3906
    70  0000                     _RXB1DLC	set	3925
    71  0000                     _ADCON0bits	set	4034
    72  0000                     _ADCON1bits	set	4033
    73  0000                     _ADCON2bits	set	4032
    74  0000                     _ADRESH	set	4036
    75  0000                     _ADRESL	set	4035
    76  0000                     _BRGCON1bits	set	3952
    77  0000                     _BRGCON2bits	set	3953
    78  0000                     _BRGCON3bits	set	3954
    79  0000                     _CANCONbits	set	3951
    80  0000                     _CANSTATbits	set	3950
    81  0000                     _CIOCONbits	set	3955
    82  0000                     _ECANCONbits	set	3959
    83  0000                     _INTCONbits	set	4082
    84  0000                     _LATAbits	set	3977
    85  0000                     _LATCbits	set	3979
    86  0000                     _LATDbits	set	3980
    87  0000                     _OSCCONbits	set	4051
    88  0000                     _OSCTUNEbits	set	3995
    89  0000                     _PIE3bits	set	4003
    90  0000                     _RCONbits	set	4048
    91  0000                     _RXB0CONbits	set	3936
    92  0000                     _RXB0D0	set	3942
    93  0000                     _RXB0D1	set	3943
    94  0000                     _RXB0D2	set	3944
    95  0000                     _RXB0D3	set	3945
    96  0000                     _RXB0D4	set	3946
    97  0000                     _RXB0D5	set	3947
    98  0000                     _RXB0D6	set	3948
    99  0000                     _RXB0D7	set	3949
   100  0000                     _RXB0SIDH	set	3937
   101  0000                     _RXB0SIDL	set	3938
   102  0000                     _TRISAbits	set	3986
   103  0000                     _TRISBbits	set	3987
   104  0000                     _TRISCbits	set	3988
   105  0000                     _TRISDbits	set	3989
   106  0000                     _TRISEbits	set	3990
   107  0000                     _RXB0DLC	set	3941
   108                           
   109                           ; #config settings
   110  0000                     
   111                           	psect	cinit
   112  017686                     __pcinit:
   113                           	opt stack 0
   114  017686                     start_initialization:
   115                           	opt stack 0
   116  017686                     __initialization:
   117                           	opt stack 0
   118                           
   119                           ; Clear objects allocated to COMRAM (18 bytes)
   120  017686  EE00  F02E         	lfsr	0,__pbssCOMRAM
   121  01768A  0E12               	movlw	18
   122  01768C                     clear_0:
   123  01768C  6AEE               	clrf	postinc0,c
   124  01768E  06E8               	decf	wreg,f,c
   125  017690  E1FD               	bnz	clear_0
   126                           
   127                           ; Initialize objects allocated to COMRAM (4 bytes)
   128                           ; load TBLPTR registers with __pidataCOMRAM
   129  017692  0EE6               	movlw	low __pidataCOMRAM
   130  017694  6EF6               	movwf	tblptrl,c
   131  017696  0E75               	movlw	high __pidataCOMRAM
   132  017698  6EF7               	movwf	tblptrh,c
   133  01769A  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   134  01769C  6EF8               	movwf	tblptru,c
   135  01769E  EE00  F040         	lfsr	0,__pdataCOMRAM
   136  0176A2  EE10 F004          	lfsr	1,4
   137  0176A6                     copy_data0:
   138  0176A6  0009               	tblrd		*+
   139  0176A8  CFF5 FFEE          	movff	tablat,postinc0
   140  0176AC  50E5               	movf	postdec1,w,c
   141  0176AE  50E1               	movf	fsr1l,w,c
   142  0176B0  E1FA               	bnz	copy_data0
   143  0176B2                     end_of_initialization:
   144                           	opt stack 0
   145  0176B2                     __end_of__initialization:
   146                           	opt stack 0
   147  0176B2  0100               	movlb	0
   148  0176B4  EF96  F0BD         	goto	_main	;jump to C main() function
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           postdec1	equ	0xFE5
   156                           fsr1l	equ	0xFE1
   157                           
   158                           	psect	bssCOMRAM
   159  00002E                     __pbssCOMRAM:
   160                           	opt stack 0
   161  00002E                     _margin7:
   162                           	opt stack 0
   163  00002E                     	ds	2
   164  000030                     _BACK:
   165                           	opt stack 0
   166  000030                     	ds	1
   167  000031                     _FORW:
   168                           	opt stack 0
   169  000031                     	ds	1
   170  000032                     _margin0:
   171                           	opt stack 0
   172  000032                     	ds	2
   173  000034                     _margin1:
   174                           	opt stack 0
   175  000034                     	ds	2
   176  000036                     _margin2:
   177                           	opt stack 0
   178  000036                     	ds	2
   179  000038                     _margin3:
   180                           	opt stack 0
   181  000038                     	ds	2
   182  00003A                     _margin4:
   183                           	opt stack 0
   184  00003A                     	ds	2
   185  00003C                     _margin5:
   186                           	opt stack 0
   187  00003C                     	ds	2
   188  00003E                     _margin6:
   189                           	opt stack 0
   190  00003E                     	ds	2
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           postdec1	equ	0xFE5
   198                           fsr1l	equ	0xFE1
   199                           
   200                           	psect	dataCOMRAM
   201  000040                     __pdataCOMRAM:
   202                           	opt stack 0
   203  000040                     _extendPos:
   204                           	opt stack 0
   205  000040                     	ds	2
   206  000042                     _retractPos:
   207                           	opt stack 0
   208  000042                     	ds	2
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1l	equ	0xFE1
   217                           
   218                           	psect	cstackCOMRAM
   219  000001                     __pcstackCOMRAM:
   220                           	opt stack 0
   221  000001                     ??_ecan_init:
   222  000001                     ?_readADC:
   223                           	opt stack 0
   224  000001                     ecan_receive_rxb0@mess:
   225                           	opt stack 0
   226  000001                     movement@current_pos:
   227                           	opt stack 0
   228  000001                     speedCheck@actuatorSlow:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x0
   232  000001                     	ds	2
   233  000003                     ??_ecan_receive_rxb0:
   234  000003                     readADC@digitalVal:
   235                           	opt stack 0
   236  000003                     ecan_init@sid0:
   237                           	opt stack 0
   238  000003                     movement@set_point:
   239                           	opt stack 0
   240  000003                     speedCheck@actuatorFast:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x2
   244  000003                     	ds	2
   245  000005                     ecan_init@mask0:
   246                           	opt stack 0
   247  000005                     movement@actuator:
   248                           	opt stack 0
   249  000005                     speedCheck@set_point:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x4
   253  000005                     	ds	2
   254  000007                     movement@margin:
   255                           	opt stack 0
   256  000007                     speedCheck@marginSlow:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x6
   260  000007                     	ds	2
   261  000009                     speedCheck@marginFast:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x8
   265  000009                     	ds	2
   266  00000B                     ??_speedCheck:
   267  00000B                     movement@move0:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0xA
   271  00000B                     	ds	2
   272  00000D                     movement@move1:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0xC
   276  00000D                     	ds	2
   277  00000F                     main@actuator7:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0xE
   281  00000F                     	ds	2
   282  000011                     main@actuator0:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x10
   286  000011                     	ds	2
   287  000013                     main@actuator2:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x12
   291  000013                     	ds	2
   292  000015                     main@actuator5:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x14
   296  000015                     	ds	2
   297  000017                     main@actuator1:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x16
   301  000017                     	ds	2
   302  000019                     main@actuator3:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x18
   306  000019                     	ds	2
   307  00001B                     main@actuator4:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x1A
   311  00001B                     	ds	2
   312  00001D                     main@actuator6:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x1C
   316  00001D                     	ds	2
   317  00001F                     main@retractPos:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x1E
   321  00001F                     	ds	2
   322  000021                     main@newMessage:
   323                           	opt stack 0
   324                           
   325                           ; 11 bytes @ 0x20
   326  000021                     	ds	11
   327  00002C                     main@extendPos:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x2B
   331  00002C                     	ds	2
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           postdec1	equ	0xFE5
   339                           fsr1l	equ	0xFE1
   340                           
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 53 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  newMessage     11   32[COMRAM] struct Message
   351 ;;  extendPos       2   43[COMRAM] unsigned int 
   352 ;;  retractPos      2   30[COMRAM] unsigned int 
   353 ;;  actuator6       2   28[COMRAM] unsigned int 
   354 ;;  actuator4       2   26[COMRAM] unsigned int 
   355 ;;  actuator3       2   24[COMRAM] unsigned int 
   356 ;;  actuator1       2   22[COMRAM] unsigned int 
   357 ;;  actuator5       2   20[COMRAM] unsigned int 
   358 ;;  actuator2       2   18[COMRAM] unsigned int 
   359 ;;  actuator0       2   16[COMRAM] unsigned int 
   360 ;;  actuator7       2   14[COMRAM] unsigned int 
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   371 ;;      Locals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   373 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   374 ;;Total ram usage:       31 bytes
   375 ;; Hardware stack levels required when called:    1
   376 ;; This function calls:
   377 ;;		_ConfigureOscillator
   378 ;;		_ecan_init
   379 ;;		_ecan_receive_rxb0
   380 ;;		_ecan_rxb0_clear
   381 ;;		_movement
   382 ;;		_readADC
   383 ;;		_selectAN0
   384 ;;		_selectAN1
   385 ;;		_selectAN2
   386 ;;		_selectAN3
   387 ;;		_selectAN4
   388 ;;		_selectAN5
   389 ;;		_selectAN6
   390 ;;		_selectAN7
   391 ;;		_setActuatorCntrl
   392 ;;		_setAnalogIn
   393 ;;		_speedCheck
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text0
   400  017B2C                     __ptext0:
   401                           	opt stack 0
   402  017B2C                     _main:
   403                           	opt stack 30
   404                           
   405                           ;main.c: 56: ConfigureOscillator();
   406                           
   407                           ;incstack = 0
   408  017B2C  EC1D  F0BB         	call	_ConfigureOscillator	;wreg free
   409                           
   410                           ;main.c: 57: ecan_init();
   411  017B30  EC76  F0BB         	call	_ecan_init	;wreg free
   412                           
   413                           ;main.c: 61: setAnalogIn();
   414  017B34  EC5C  F0BB         	call	_setAnalogIn	;wreg free
   415                           
   416                           ;main.c: 62: setActuatorCntrl();
   417  017B38  EC31  F0BB         	call	_setActuatorCntrl	;wreg free
   418                           
   419                           ;main.c: 63: unsigned int actuator0 = 0;
   420  017B3C  0E00               	movlw	0
   421  017B3E  6E12               	movwf	main@actuator0+1,c
   422  017B40  0E00               	movlw	0
   423  017B42  6E11               	movwf	main@actuator0,c
   424                           
   425                           ;main.c: 64: unsigned int actuator1 = 0;
   426  017B44  0E00               	movlw	0
   427  017B46  6E18               	movwf	main@actuator1+1,c
   428  017B48  0E00               	movlw	0
   429  017B4A  6E17               	movwf	main@actuator1,c
   430                           
   431                           ;main.c: 65: unsigned int actuator2 = 0;
   432  017B4C  0E00               	movlw	0
   433  017B4E  6E14               	movwf	main@actuator2+1,c
   434  017B50  0E00               	movlw	0
   435  017B52  6E13               	movwf	main@actuator2,c
   436                           
   437                           ;main.c: 66: unsigned int actuator3 = 0;
   438  017B54  0E00               	movlw	0
   439  017B56  6E1A               	movwf	main@actuator3+1,c
   440  017B58  0E00               	movlw	0
   441  017B5A  6E19               	movwf	main@actuator3,c
   442                           
   443                           ;main.c: 67: unsigned int actuator4 = 0;
   444  017B5C  0E00               	movlw	0
   445  017B5E  6E1C               	movwf	main@actuator4+1,c
   446  017B60  0E00               	movlw	0
   447  017B62  6E1B               	movwf	main@actuator4,c
   448                           
   449                           ;main.c: 68: unsigned int actuator5 = 0;
   450  017B64  0E00               	movlw	0
   451  017B66  6E16               	movwf	main@actuator5+1,c
   452  017B68  0E00               	movlw	0
   453  017B6A  6E15               	movwf	main@actuator5,c
   454                           
   455                           ;main.c: 69: unsigned int actuator6 = 0;
   456  017B6C  0E00               	movlw	0
   457  017B6E  6E1E               	movwf	main@actuator6+1,c
   458  017B70  0E00               	movlw	0
   459  017B72  6E1D               	movwf	main@actuator6,c
   460                           
   461                           ;main.c: 70: unsigned int actuator7 = 0;
   462  017B74  0E00               	movlw	0
   463  017B76  6E10               	movwf	main@actuator7+1,c
   464  017B78  0E00               	movlw	0
   465  017B7A  6E0F               	movwf	main@actuator7,c
   466                           
   467                           ;main.c: 73: unsigned int retractPos = 200;
   468  017B7C  0E00               	movlw	0
   469  017B7E  6E20               	movwf	main@retractPos+1,c
   470  017B80  0EC8               	movlw	200
   471  017B82  6E1F               	movwf	main@retractPos,c
   472                           
   473                           ;main.c: 74: unsigned int extendPos = 800;
   474  017B84  0E03               	movlw	3
   475  017B86  6E2D               	movwf	main@extendPos+1,c
   476  017B88  0E20               	movlw	32
   477  017B8A  6E2C               	movwf	main@extendPos,c
   478  017B8C                     l1657:
   479                           
   480                           ;main.c: 77: {
   481                           ;main.c: 78: if(RXB0CONbits.RXB0FUL)
   482  017B8C  AE60               	btfss	3936,7,c	;volatile
   483  017B8E  D03F               	goto	l1693
   484                           
   485                           ;main.c: 79: {
   486                           ;main.c: 80: Message newMessage;
   487                           ;main.c: 81: ecan_receive_rxb0(&newMessage);
   488  017B90  0E21               	movlw	low main@newMessage
   489  017B92  6E01               	movwf	ecan_receive_rxb0@mess,c
   490  017B94  0E00               	movlw	high main@newMessage
   491  017B96  6E02               	movwf	ecan_receive_rxb0@mess+1,c
   492  017B98  ECD5  F0BB         	call	_ecan_receive_rxb0	;wreg free
   493                           
   494                           ;main.c: 83: margin0 = 0;
   495  017B9C  0E00               	movlw	0
   496  017B9E  6E33               	movwf	_margin0+1,c
   497  017BA0  0E00               	movlw	0
   498  017BA2  6E32               	movwf	_margin0,c
   499                           
   500                           ;main.c: 84: margin1 = 0;
   501  017BA4  0E00               	movlw	0
   502  017BA6  6E35               	movwf	_margin1+1,c
   503  017BA8  0E00               	movlw	0
   504  017BAA  6E34               	movwf	_margin1,c
   505                           
   506                           ;main.c: 85: margin2 = 0;
   507  017BAC  0E00               	movlw	0
   508  017BAE  6E37               	movwf	_margin2+1,c
   509  017BB0  0E00               	movlw	0
   510  017BB2  6E36               	movwf	_margin2,c
   511                           
   512                           ;main.c: 86: margin3 = 0;
   513  017BB4  0E00               	movlw	0
   514  017BB6  6E39               	movwf	_margin3+1,c
   515  017BB8  0E00               	movlw	0
   516  017BBA  6E38               	movwf	_margin3,c
   517                           
   518                           ;main.c: 87: margin4 = 0;
   519  017BBC  0E00               	movlw	0
   520  017BBE  6E3B               	movwf	_margin4+1,c
   521  017BC0  0E00               	movlw	0
   522  017BC2  6E3A               	movwf	_margin4,c
   523                           
   524                           ;main.c: 88: margin5 = 0;
   525  017BC4  0E00               	movlw	0
   526  017BC6  6E3D               	movwf	_margin5+1,c
   527  017BC8  0E00               	movlw	0
   528  017BCA  6E3C               	movwf	_margin5,c
   529                           
   530                           ;main.c: 89: margin6 = 0;
   531  017BCC  0E00               	movlw	0
   532  017BCE  6E3F               	movwf	_margin6+1,c
   533  017BD0  0E00               	movlw	0
   534  017BD2  6E3E               	movwf	_margin6,c
   535                           
   536                           ;main.c: 90: margin7 = 0;
   537  017BD4  0E00               	movlw	0
   538  017BD6  6E2F               	movwf	_margin7+1,c
   539  017BD8  0E00               	movlw	0
   540  017BDA  6E2E               	movwf	_margin7,c
   541                           
   542                           ;main.c: 92: LATAbits.LATA7 ^= 1;
   543  017BDC  7E89               	btg	3977,7,c	;volatile
   544                           
   545                           ;main.c: 100: if (newMessage.data[0] == 0x00)
   546  017BDE  5021               	movf	main@newMessage,w,c
   547  017BE0  A4D8               	btfss	status,2,c
   548  017BE2  D004               	goto	l1683
   549                           
   550                           ;main.c: 101: {
   551                           ;main.c: 102: FORW = 0;
   552  017BE4  0E00               	movlw	0
   553  017BE6  6E31               	movwf	_FORW,c
   554                           
   555                           ;main.c: 103: BACK = 0;
   556  017BE8  0E00               	movlw	0
   557  017BEA  6E30               	movwf	_BACK,c
   558  017BEC                     l1683:
   559                           
   560                           ;main.c: 104: }
   561                           ;main.c: 105: if (newMessage.data[0] == 0x01)
   562  017BEC  0421               	decf	main@newMessage,w,c
   563  017BEE  A4D8               	btfss	status,2,c
   564  017BF0  D004               	goto	l1687
   565                           
   566                           ;main.c: 106: {
   567                           ;main.c: 107: FORW = 1;
   568  017BF2  0E01               	movlw	1
   569  017BF4  6E31               	movwf	_FORW,c
   570                           
   571                           ;main.c: 108: BACK = 0;
   572  017BF6  0E00               	movlw	0
   573  017BF8  6E30               	movwf	_BACK,c
   574  017BFA                     l1687:
   575                           
   576                           ;main.c: 109: }
   577                           ;main.c: 110: if (newMessage.data[0] == 0x02)
   578  017BFA  0E02               	movlw	2
   579  017BFC  1821               	xorwf	main@newMessage,w,c
   580  017BFE  A4D8               	btfss	status,2,c
   581  017C00  D004               	goto	l1691
   582                           
   583                           ;main.c: 111: {
   584                           ;main.c: 112: FORW = 0;
   585  017C02  0E00               	movlw	0
   586  017C04  6E31               	movwf	_FORW,c
   587                           
   588                           ;main.c: 113: BACK = 1;
   589  017C06  0E01               	movlw	1
   590  017C08  6E30               	movwf	_BACK,c
   591  017C0A                     l1691:
   592                           
   593                           ;main.c: 114: }
   594                           ;main.c: 116: ecan_rxb0_clear();
   595  017C0A  ECF1  F0BA         	call	_ecan_rxb0_clear	;wreg free
   596  017C0E                     l1693:
   597                           
   598                           ;main.c: 117: }
   599                           ;main.c: 125: selectAN0();
   600  017C0E  ECF5  F0BA         	call	_selectAN0	;wreg free
   601                           
   602                           ;main.c: 126: actuator0 = readADC();
   603  017C12  EC24  F0BB         	call	_readADC	;wreg free
   604  017C16  C001  F011         	movff	?_readADC,main@actuator0
   605  017C1A  C002  F012         	movff	?_readADC+1,main@actuator0+1
   606                           
   607                           ;main.c: 131: selectAN1();
   608  017C1E  ECFA  F0BA         	call	_selectAN1	;wreg free
   609                           
   610                           ;main.c: 132: actuator1 = readADC();
   611  017C22  EC24  F0BB         	call	_readADC	;wreg free
   612  017C26  C001  F017         	movff	?_readADC,main@actuator1
   613  017C2A  C002  F018         	movff	?_readADC+1,main@actuator1+1
   614                           
   615                           ;main.c: 137: selectAN2();
   616  017C2E  ECFF  F0BA         	call	_selectAN2	;wreg free
   617                           
   618                           ;main.c: 138: actuator2 = readADC();
   619  017C32  EC24  F0BB         	call	_readADC	;wreg free
   620  017C36  C001  F013         	movff	?_readADC,main@actuator2
   621  017C3A  C002  F014         	movff	?_readADC+1,main@actuator2+1
   622                           
   623                           ;main.c: 143: selectAN3();
   624  017C3E  EC04  F0BB         	call	_selectAN3	;wreg free
   625                           
   626                           ;main.c: 144: actuator3 = readADC();
   627  017C42  EC24  F0BB         	call	_readADC	;wreg free
   628  017C46  C001  F019         	movff	?_readADC,main@actuator3
   629  017C4A  C002  F01A         	movff	?_readADC+1,main@actuator3+1
   630                           
   631                           ;main.c: 150: selectAN4();
   632  017C4E  EC09  F0BB         	call	_selectAN4	;wreg free
   633                           
   634                           ;main.c: 151: actuator4 = readADC();
   635  017C52  EC24  F0BB         	call	_readADC	;wreg free
   636  017C56  C001  F01B         	movff	?_readADC,main@actuator4
   637  017C5A  C002  F01C         	movff	?_readADC+1,main@actuator4+1
   638                           
   639                           ;main.c: 156: selectAN5();
   640  017C5E  EC0E  F0BB         	call	_selectAN5	;wreg free
   641                           
   642                           ;main.c: 157: actuator5 = readADC();
   643  017C62  EC24  F0BB         	call	_readADC	;wreg free
   644  017C66  C001  F015         	movff	?_readADC,main@actuator5
   645  017C6A  C002  F016         	movff	?_readADC+1,main@actuator5+1
   646                           
   647                           ;main.c: 163: selectAN6();
   648  017C6E  EC13  F0BB         	call	_selectAN6	;wreg free
   649                           
   650                           ;main.c: 164: actuator6 = readADC();
   651  017C72  EC24  F0BB         	call	_readADC	;wreg free
   652  017C76  C001  F01D         	movff	?_readADC,main@actuator6
   653  017C7A  C002  F01E         	movff	?_readADC+1,main@actuator6+1
   654                           
   655                           ;main.c: 166: if(margin7 == 0)
   656  017C7E  502E               	movf	_margin7,w,c
   657  017C80  102F               	iorwf	_margin7+1,w,c
   658  017C82  A4D8               	btfss	status,2,c
   659  017C84  D008               	goto	l1725
   660                           
   661                           ;main.c: 167: {
   662                           ;main.c: 170: selectAN7();
   663  017C86  EC18  F0BB         	call	_selectAN7	;wreg free
   664                           
   665                           ;main.c: 171: actuator7 = readADC();
   666  017C8A  EC24  F0BB         	call	_readADC	;wreg free
   667  017C8E  C001  F00F         	movff	?_readADC,main@actuator7
   668  017C92  C002  F010         	movff	?_readADC+1,main@actuator7+1
   669  017C96                     l1725:
   670                           
   671                           ;main.c: 172: }
   672                           ;main.c: 175: if(FORW == 1 && BACK == 0)
   673  017C96  0431               	decf	_FORW,w,c
   674  017C98  A4D8               	btfss	status,2,c
   675  017C9A  D0AE               	goto	l1731
   676  017C9C  5030               	movf	_BACK,w,c
   677  017C9E  A4D8               	btfss	status,2,c
   678  017CA0  D0AB               	goto	l1731
   679                           
   680                           ;main.c: 176: {
   681                           ;main.c: 182: speedCheck(actuator3, actuator1, extendPos, &margin3, &margin1);
   682  017CA2  C019  F001         	movff	main@actuator3,speedCheck@actuatorSlow
   683  017CA6  C01A  F002         	movff	main@actuator3+1,speedCheck@actuatorSlow+1
   684  017CAA  C017  F003         	movff	main@actuator1,speedCheck@actuatorFast
   685  017CAE  C018  F004         	movff	main@actuator1+1,speedCheck@actuatorFast+1
   686  017CB2  C02C  F005         	movff	main@extendPos,speedCheck@set_point
   687  017CB6  C02D  F006         	movff	main@extendPos+1,speedCheck@set_point+1
   688  017CBA  0E38               	movlw	low _margin3
   689  017CBC  6E07               	movwf	speedCheck@marginSlow,c
   690  017CBE  0E00               	movlw	high _margin3
   691  017CC0  6E08               	movwf	speedCheck@marginSlow+1,c
   692  017CC2  0E34               	movlw	low _margin1
   693  017CC4  6E09               	movwf	speedCheck@marginFast,c
   694  017CC6  0E00               	movlw	high _margin1
   695  017CC8  6E0A               	movwf	speedCheck@marginFast+1,c
   696  017CCA  EC46  F0BC         	call	_speedCheck	;wreg free
   697                           
   698                           ;main.c: 183: speedCheck(actuator4, actuator6, extendPos, &margin4, &margin6);
   699  017CCE  C01B  F001         	movff	main@actuator4,speedCheck@actuatorSlow
   700  017CD2  C01C  F002         	movff	main@actuator4+1,speedCheck@actuatorSlow+1
   701  017CD6  C01D  F003         	movff	main@actuator6,speedCheck@actuatorFast
   702  017CDA  C01E  F004         	movff	main@actuator6+1,speedCheck@actuatorFast+1
   703  017CDE  C02C  F005         	movff	main@extendPos,speedCheck@set_point
   704  017CE2  C02D  F006         	movff	main@extendPos+1,speedCheck@set_point+1
   705  017CE6  0E3A               	movlw	low _margin4
   706  017CE8  6E07               	movwf	speedCheck@marginSlow,c
   707  017CEA  0E00               	movlw	high _margin4
   708  017CEC  6E08               	movwf	speedCheck@marginSlow+1,c
   709  017CEE  0E3E               	movlw	low _margin6
   710  017CF0  6E09               	movwf	speedCheck@marginFast,c
   711  017CF2  0E00               	movlw	high _margin6
   712  017CF4  6E0A               	movwf	speedCheck@marginFast+1,c
   713  017CF6  EC46  F0BC         	call	_speedCheck	;wreg free
   714                           
   715                           ;main.c: 189: movement(actuator0, retractPos, 0, &margin0);
   716  017CFA  C011  F001         	movff	main@actuator0,movement@current_pos
   717  017CFE  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   718  017D02  C01F  F003         	movff	main@retractPos,movement@set_point
   719  017D06  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   720  017D0A  0E00               	movlw	0
   721  017D0C  6E06               	movwf	movement@actuator+1,c
   722  017D0E  0E00               	movlw	0
   723  017D10  6E05               	movwf	movement@actuator,c
   724  017D12  0E32               	movlw	low _margin0
   725  017D14  6E07               	movwf	movement@margin,c
   726  017D16  0E00               	movlw	high _margin0
   727  017D18  6E08               	movwf	movement@margin+1,c
   728  017D1A  ECDD  F0BC         	call	_movement	;wreg free
   729                           
   730                           ;main.c: 190: movement(actuator1, extendPos, 1, &margin1);
   731  017D1E  C017  F001         	movff	main@actuator1,movement@current_pos
   732  017D22  C018  F002         	movff	main@actuator1+1,movement@current_pos+1
   733  017D26  C02C  F003         	movff	main@extendPos,movement@set_point
   734  017D2A  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   735  017D2E  0E00               	movlw	0
   736  017D30  6E06               	movwf	movement@actuator+1,c
   737  017D32  0E01               	movlw	1
   738  017D34  6E05               	movwf	movement@actuator,c
   739  017D36  0E34               	movlw	low _margin1
   740  017D38  6E07               	movwf	movement@margin,c
   741  017D3A  0E00               	movlw	high _margin1
   742  017D3C  6E08               	movwf	movement@margin+1,c
   743  017D3E  ECDD  F0BC         	call	_movement	;wreg free
   744                           
   745                           ;main.c: 191: movement(actuator2, retractPos, 2, &margin2);
   746  017D42  C013  F001         	movff	main@actuator2,movement@current_pos
   747  017D46  C014  F002         	movff	main@actuator2+1,movement@current_pos+1
   748  017D4A  C01F  F003         	movff	main@retractPos,movement@set_point
   749  017D4E  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   750  017D52  0E00               	movlw	0
   751  017D54  6E06               	movwf	movement@actuator+1,c
   752  017D56  0E02               	movlw	2
   753  017D58  6E05               	movwf	movement@actuator,c
   754  017D5A  0E36               	movlw	low _margin2
   755  017D5C  6E07               	movwf	movement@margin,c
   756  017D5E  0E00               	movlw	high _margin2
   757  017D60  6E08               	movwf	movement@margin+1,c
   758  017D62  ECDD  F0BC         	call	_movement	;wreg free
   759                           
   760                           ;main.c: 192: movement(actuator3, extendPos, 3, &margin3);
   761  017D66  C019  F001         	movff	main@actuator3,movement@current_pos
   762  017D6A  C01A  F002         	movff	main@actuator3+1,movement@current_pos+1
   763  017D6E  C02C  F003         	movff	main@extendPos,movement@set_point
   764  017D72  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   765  017D76  0E00               	movlw	0
   766  017D78  6E06               	movwf	movement@actuator+1,c
   767  017D7A  0E03               	movlw	3
   768  017D7C  6E05               	movwf	movement@actuator,c
   769  017D7E  0E38               	movlw	low _margin3
   770  017D80  6E07               	movwf	movement@margin,c
   771  017D82  0E00               	movlw	high _margin3
   772  017D84  6E08               	movwf	movement@margin+1,c
   773  017D86  ECDD  F0BC         	call	_movement	;wreg free
   774                           
   775                           ;main.c: 193: movement(actuator4, extendPos, 4, &margin4);
   776  017D8A  C01B  F001         	movff	main@actuator4,movement@current_pos
   777  017D8E  C01C  F002         	movff	main@actuator4+1,movement@current_pos+1
   778  017D92  C02C  F003         	movff	main@extendPos,movement@set_point
   779  017D96  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   780  017D9A  0E00               	movlw	0
   781  017D9C  6E06               	movwf	movement@actuator+1,c
   782  017D9E  0E04               	movlw	4
   783  017DA0  6E05               	movwf	movement@actuator,c
   784  017DA2  0E3A               	movlw	low _margin4
   785  017DA4  6E07               	movwf	movement@margin,c
   786  017DA6  0E00               	movlw	high _margin4
   787  017DA8  6E08               	movwf	movement@margin+1,c
   788  017DAA  ECDD  F0BC         	call	_movement	;wreg free
   789                           
   790                           ;main.c: 194: movement(actuator5, retractPos, 5, &margin5);
   791  017DAE  C015  F001         	movff	main@actuator5,movement@current_pos
   792  017DB2  C016  F002         	movff	main@actuator5+1,movement@current_pos+1
   793  017DB6  C01F  F003         	movff	main@retractPos,movement@set_point
   794  017DBA  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   795  017DBE  0E00               	movlw	0
   796  017DC0  6E06               	movwf	movement@actuator+1,c
   797  017DC2  0E05               	movlw	5
   798  017DC4  6E05               	movwf	movement@actuator,c
   799  017DC6  0E3C               	movlw	low _margin5
   800  017DC8  6E07               	movwf	movement@margin,c
   801  017DCA  0E00               	movlw	high _margin5
   802  017DCC  6E08               	movwf	movement@margin+1,c
   803  017DCE  ECDD  F0BC         	call	_movement	;wreg free
   804                           
   805                           ;main.c: 195: movement(actuator6, extendPos, 6, &margin6);
   806  017DD2  C01D  F001         	movff	main@actuator6,movement@current_pos
   807  017DD6  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
   808  017DDA  C02C  F003         	movff	main@extendPos,movement@set_point
   809  017DDE  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   810  017DE2  0E00               	movlw	0
   811  017DE4  6E06               	movwf	movement@actuator+1,c
   812  017DE6  0E06               	movlw	6
   813  017DE8  6E05               	movwf	movement@actuator,c
   814  017DEA  0E3E               	movlw	low _margin6
   815  017DEC  6E07               	movwf	movement@margin,c
   816  017DEE  0E00               	movlw	high _margin6
   817  017DF0  6E08               	movwf	movement@margin+1,c
   818  017DF2  ECDD  F0BC         	call	_movement	;wreg free
   819                           
   820                           ;main.c: 206: } else if(BACK == 1 && FORW == 0) {
   821  017DF6  D6CA               	goto	l1657
   822  017DF8                     l1731:
   823  017DF8  0430               	decf	_BACK,w,c
   824  017DFA  A4D8               	btfss	status,2,c
   825  017DFC  D082               	goto	l1737
   826  017DFE  5031               	movf	_FORW,w,c
   827  017E00  A4D8               	btfss	status,2,c
   828  017E02  D07F               	goto	l1737
   829                           
   830                           ;main.c: 213: movement(actuator0, extendPos, 0, &margin0);
   831  017E04  C011  F001         	movff	main@actuator0,movement@current_pos
   832  017E08  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   833  017E0C  C02C  F003         	movff	main@extendPos,movement@set_point
   834  017E10  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   835  017E14  0E00               	movlw	0
   836  017E16  6E06               	movwf	movement@actuator+1,c
   837  017E18  0E00               	movlw	0
   838  017E1A  6E05               	movwf	movement@actuator,c
   839  017E1C  0E32               	movlw	low _margin0
   840  017E1E  6E07               	movwf	movement@margin,c
   841  017E20  0E00               	movlw	high _margin0
   842  017E22  6E08               	movwf	movement@margin+1,c
   843  017E24  ECDD  F0BC         	call	_movement	;wreg free
   844                           
   845                           ;main.c: 214: movement(actuator1, retractPos, 1, &margin1);
   846  017E28  C017  F001         	movff	main@actuator1,movement@current_pos
   847  017E2C  C018  F002         	movff	main@actuator1+1,movement@current_pos+1
   848  017E30  C01F  F003         	movff	main@retractPos,movement@set_point
   849  017E34  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   850  017E38  0E00               	movlw	0
   851  017E3A  6E06               	movwf	movement@actuator+1,c
   852  017E3C  0E01               	movlw	1
   853  017E3E  6E05               	movwf	movement@actuator,c
   854  017E40  0E34               	movlw	low _margin1
   855  017E42  6E07               	movwf	movement@margin,c
   856  017E44  0E00               	movlw	high _margin1
   857  017E46  6E08               	movwf	movement@margin+1,c
   858  017E48  ECDD  F0BC         	call	_movement	;wreg free
   859                           
   860                           ;main.c: 215: movement(actuator2, extendPos, 2, &margin2);
   861  017E4C  C013  F001         	movff	main@actuator2,movement@current_pos
   862  017E50  C014  F002         	movff	main@actuator2+1,movement@current_pos+1
   863  017E54  C02C  F003         	movff	main@extendPos,movement@set_point
   864  017E58  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   865  017E5C  0E00               	movlw	0
   866  017E5E  6E06               	movwf	movement@actuator+1,c
   867  017E60  0E02               	movlw	2
   868  017E62  6E05               	movwf	movement@actuator,c
   869  017E64  0E36               	movlw	low _margin2
   870  017E66  6E07               	movwf	movement@margin,c
   871  017E68  0E00               	movlw	high _margin2
   872  017E6A  6E08               	movwf	movement@margin+1,c
   873  017E6C  ECDD  F0BC         	call	_movement	;wreg free
   874                           
   875                           ;main.c: 216: movement(actuator3, retractPos, 3, &margin3);
   876  017E70  C019  F001         	movff	main@actuator3,movement@current_pos
   877  017E74  C01A  F002         	movff	main@actuator3+1,movement@current_pos+1
   878  017E78  C01F  F003         	movff	main@retractPos,movement@set_point
   879  017E7C  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   880  017E80  0E00               	movlw	0
   881  017E82  6E06               	movwf	movement@actuator+1,c
   882  017E84  0E03               	movlw	3
   883  017E86  6E05               	movwf	movement@actuator,c
   884  017E88  0E38               	movlw	low _margin3
   885  017E8A  6E07               	movwf	movement@margin,c
   886  017E8C  0E00               	movlw	high _margin3
   887  017E8E  6E08               	movwf	movement@margin+1,c
   888  017E90  ECDD  F0BC         	call	_movement	;wreg free
   889                           
   890                           ;main.c: 217: movement(actuator4, retractPos, 4, &margin4);
   891  017E94  C01B  F001         	movff	main@actuator4,movement@current_pos
   892  017E98  C01C  F002         	movff	main@actuator4+1,movement@current_pos+1
   893  017E9C  C01F  F003         	movff	main@retractPos,movement@set_point
   894  017EA0  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   895  017EA4  0E00               	movlw	0
   896  017EA6  6E06               	movwf	movement@actuator+1,c
   897  017EA8  0E04               	movlw	4
   898  017EAA  6E05               	movwf	movement@actuator,c
   899  017EAC  0E3A               	movlw	low _margin4
   900  017EAE  6E07               	movwf	movement@margin,c
   901  017EB0  0E00               	movlw	high _margin4
   902  017EB2  6E08               	movwf	movement@margin+1,c
   903  017EB4  ECDD  F0BC         	call	_movement	;wreg free
   904                           
   905                           ;main.c: 218: movement(actuator5, extendPos, 5, &margin5);
   906  017EB8  C015  F001         	movff	main@actuator5,movement@current_pos
   907  017EBC  C016  F002         	movff	main@actuator5+1,movement@current_pos+1
   908  017EC0  C02C  F003         	movff	main@extendPos,movement@set_point
   909  017EC4  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   910  017EC8  0E00               	movlw	0
   911  017ECA  6E06               	movwf	movement@actuator+1,c
   912  017ECC  0E05               	movlw	5
   913  017ECE  6E05               	movwf	movement@actuator,c
   914  017ED0  0E3C               	movlw	low _margin5
   915  017ED2  6E07               	movwf	movement@margin,c
   916  017ED4  0E00               	movlw	high _margin5
   917  017ED6  6E08               	movwf	movement@margin+1,c
   918  017ED8  ECDD  F0BC         	call	_movement	;wreg free
   919                           
   920                           ;main.c: 219: movement(actuator6, retractPos, 6, &margin6);
   921  017EDC  C01D  F001         	movff	main@actuator6,movement@current_pos
   922  017EE0  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
   923  017EE4  C01F  F003         	movff	main@retractPos,movement@set_point
   924  017EE8  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   925  017EEC  0E00               	movlw	0
   926  017EEE  6E06               	movwf	movement@actuator+1,c
   927  017EF0  0E06               	movlw	6
   928  017EF2  6E05               	movwf	movement@actuator,c
   929  017EF4  0E3E               	movlw	low _margin6
   930  017EF6  6E07               	movwf	movement@margin,c
   931  017EF8  0E00               	movlw	high _margin6
   932  017EFA  6E08               	movwf	movement@margin+1,c
   933  017EFC  ECDD  F0BC         	call	_movement	;wreg free
   934                           
   935                           ;main.c: 226: } else {
   936  017F00  D645               	goto	l1657
   937  017F02                     l1737:
   938                           
   939                           ;main.c: 229: movement(actuator0, extendPos, 0, &margin0);
   940  017F02  C011  F001         	movff	main@actuator0,movement@current_pos
   941  017F06  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   942  017F0A  C02C  F003         	movff	main@extendPos,movement@set_point
   943  017F0E  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   944  017F12  0E00               	movlw	0
   945  017F14  6E06               	movwf	movement@actuator+1,c
   946  017F16  0E00               	movlw	0
   947  017F18  6E05               	movwf	movement@actuator,c
   948  017F1A  0E32               	movlw	low _margin0
   949  017F1C  6E07               	movwf	movement@margin,c
   950  017F1E  0E00               	movlw	high _margin0
   951  017F20  6E08               	movwf	movement@margin+1,c
   952  017F22  ECDD  F0BC         	call	_movement	;wreg free
   953                           
   954                           ;main.c: 230: movement(actuator1, extendPos, 1, &margin1);
   955  017F26  C017  F001         	movff	main@actuator1,movement@current_pos
   956  017F2A  C018  F002         	movff	main@actuator1+1,movement@current_pos+1
   957  017F2E  C02C  F003         	movff	main@extendPos,movement@set_point
   958  017F32  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   959  017F36  0E00               	movlw	0
   960  017F38  6E06               	movwf	movement@actuator+1,c
   961  017F3A  0E01               	movlw	1
   962  017F3C  6E05               	movwf	movement@actuator,c
   963  017F3E  0E34               	movlw	low _margin1
   964  017F40  6E07               	movwf	movement@margin,c
   965  017F42  0E00               	movlw	high _margin1
   966  017F44  6E08               	movwf	movement@margin+1,c
   967  017F46  ECDD  F0BC         	call	_movement	;wreg free
   968                           
   969                           ;main.c: 231: movement(actuator2, extendPos, 2, &margin2);
   970  017F4A  C013  F001         	movff	main@actuator2,movement@current_pos
   971  017F4E  C014  F002         	movff	main@actuator2+1,movement@current_pos+1
   972  017F52  C02C  F003         	movff	main@extendPos,movement@set_point
   973  017F56  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   974  017F5A  0E00               	movlw	0
   975  017F5C  6E06               	movwf	movement@actuator+1,c
   976  017F5E  0E02               	movlw	2
   977  017F60  6E05               	movwf	movement@actuator,c
   978  017F62  0E36               	movlw	low _margin2
   979  017F64  6E07               	movwf	movement@margin,c
   980  017F66  0E00               	movlw	high _margin2
   981  017F68  6E08               	movwf	movement@margin+1,c
   982  017F6A  ECDD  F0BC         	call	_movement	;wreg free
   983                           
   984                           ;main.c: 232: movement(actuator3, extendPos, 3, &margin3);
   985  017F6E  C019  F001         	movff	main@actuator3,movement@current_pos
   986  017F72  C01A  F002         	movff	main@actuator3+1,movement@current_pos+1
   987  017F76  C02C  F003         	movff	main@extendPos,movement@set_point
   988  017F7A  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   989  017F7E  0E00               	movlw	0
   990  017F80  6E06               	movwf	movement@actuator+1,c
   991  017F82  0E03               	movlw	3
   992  017F84  6E05               	movwf	movement@actuator,c
   993  017F86  0E38               	movlw	low _margin3
   994  017F88  6E07               	movwf	movement@margin,c
   995  017F8A  0E00               	movlw	high _margin3
   996  017F8C  6E08               	movwf	movement@margin+1,c
   997  017F8E  ECDD  F0BC         	call	_movement	;wreg free
   998                           
   999                           ;main.c: 233: movement(actuator4, extendPos, 4, &margin4);
  1000  017F92  C01B  F001         	movff	main@actuator4,movement@current_pos
  1001  017F96  C01C  F002         	movff	main@actuator4+1,movement@current_pos+1
  1002  017F9A  C02C  F003         	movff	main@extendPos,movement@set_point
  1003  017F9E  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
  1004  017FA2  0E00               	movlw	0
  1005  017FA4  6E06               	movwf	movement@actuator+1,c
  1006  017FA6  0E04               	movlw	4
  1007  017FA8  6E05               	movwf	movement@actuator,c
  1008  017FAA  0E3A               	movlw	low _margin4
  1009  017FAC  6E07               	movwf	movement@margin,c
  1010  017FAE  0E00               	movlw	high _margin4
  1011  017FB0  6E08               	movwf	movement@margin+1,c
  1012  017FB2  ECDD  F0BC         	call	_movement	;wreg free
  1013                           
  1014                           ;main.c: 234: movement(actuator5, extendPos, 5, &margin5);
  1015  017FB6  C015  F001         	movff	main@actuator5,movement@current_pos
  1016  017FBA  C016  F002         	movff	main@actuator5+1,movement@current_pos+1
  1017  017FBE  C02C  F003         	movff	main@extendPos,movement@set_point
  1018  017FC2  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
  1019  017FC6  0E00               	movlw	0
  1020  017FC8  6E06               	movwf	movement@actuator+1,c
  1021  017FCA  0E05               	movlw	5
  1022  017FCC  6E05               	movwf	movement@actuator,c
  1023  017FCE  0E3C               	movlw	low _margin5
  1024  017FD0  6E07               	movwf	movement@margin,c
  1025  017FD2  0E00               	movlw	high _margin5
  1026  017FD4  6E08               	movwf	movement@margin+1,c
  1027  017FD6  ECDD  F0BC         	call	_movement	;wreg free
  1028                           
  1029                           ;main.c: 235: movement(actuator6, extendPos, 6, &margin6);
  1030  017FDA  C01D  F001         	movff	main@actuator6,movement@current_pos
  1031  017FDE  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
  1032  017FE2  C02C  F003         	movff	main@extendPos,movement@set_point
  1033  017FE6  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
  1034  017FEA  0E00               	movlw	0
  1035  017FEC  6E06               	movwf	movement@actuator+1,c
  1036  017FEE  0E06               	movlw	6
  1037  017FF0  6E05               	movwf	movement@actuator,c
  1038  017FF2  0E3E               	movlw	low _margin6
  1039  017FF4  6E07               	movwf	movement@margin,c
  1040  017FF6  0E00               	movlw	high _margin6
  1041  017FF8  6E08               	movwf	movement@margin+1,c
  1042  017FFA  ECDD  F0BC         	call	_movement	;wreg free
  1043  017FFE  D5C6               	goto	l1657
  1044  018000                     __end_of_main:
  1045                           	opt stack 0
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1l	equ	0xFE1
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _speedCheck *****************
  1057 ;; Defined at:
  1058 ;;		line 591 in file "movements.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  actuatorSlow    2    0[COMRAM] unsigned int 
  1061 ;;  actuatorFast    2    2[COMRAM] unsigned int 
  1062 ;;  set_point       2    4[COMRAM] unsigned int 
  1063 ;;  marginSlow      2    6[COMRAM] PTR int 
  1064 ;;		 -> margin4(2), margin3(2), 
  1065 ;;  marginFast      2    8[COMRAM] PTR int 
  1066 ;;		 -> margin6(2), margin1(2), 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1078 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1081 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1082 ;;Total ram usage:       12 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text1
  1092  01788C                     __ptext1:
  1093                           	opt stack 0
  1094  01788C                     _speedCheck:
  1095                           	opt stack 30
  1096                           
  1097                           ;movements.c: 594: if(set_point == extendPos)
  1098                           
  1099                           ;incstack = 0
  1100  01788C  5040               	movf	_extendPos,w,c
  1101  01788E  1805               	xorwf	speedCheck@set_point,w,c
  1102  017890  E147               	bnz	l1571
  1103  017892  5041               	movf	_extendPos+1,w,c
  1104  017894  1806               	xorwf	speedCheck@set_point+1,w,c
  1105  017896  A4D8               	btfss	status,2,c
  1106  017898  D043               	goto	l1571
  1107                           
  1108                           ;movements.c: 595: {
  1109                           ;movements.c: 596: if((actuatorFast - actuatorSlow) == 10)
  1110  01789A  C001  F00B         	movff	speedCheck@actuatorSlow,??_speedCheck
  1111  01789E  C002  F00C         	movff	speedCheck@actuatorSlow+1,??_speedCheck+1
  1112  0178A2  1E0B               	comf	??_speedCheck,f,c
  1113  0178A4  1E0C               	comf	??_speedCheck+1,f,c
  1114  0178A6  4A0B               	infsnz	??_speedCheck,f,c
  1115  0178A8  2A0C               	incf	??_speedCheck+1,f,c
  1116  0178AA  5003               	movf	speedCheck@actuatorFast,w,c
  1117  0178AC  260B               	addwf	??_speedCheck,f,c
  1118  0178AE  5004               	movf	speedCheck@actuatorFast+1,w,c
  1119  0178B0  220C               	addwfc	??_speedCheck+1,f,c
  1120  0178B2  0E0A               	movlw	10
  1121  0178B4  180B               	xorwf	??_speedCheck,w,c
  1122  0178B6  100C               	iorwf	??_speedCheck+1,w,c
  1123  0178B8  A4D8               	btfss	status,2,c
  1124  0178BA  D010               	goto	l1567
  1125                           
  1126                           ;movements.c: 597: {
  1127                           ;movements.c: 598: *marginFast = 1;
  1128  0178BC  C009  FFD9         	movff	speedCheck@marginFast,fsr2l
  1129  0178C0  C00A  FFDA         	movff	speedCheck@marginFast+1,fsr2h
  1130  0178C4  0E01               	movlw	1
  1131  0178C6  6EDE               	movwf	postinc2,c
  1132  0178C8  0E00               	movlw	0
  1133  0178CA  6EDD               	movwf	postdec2,c
  1134                           
  1135                           ;movements.c: 599: *marginSlow = 0;
  1136  0178CC  C007  FFD9         	movff	speedCheck@marginSlow,fsr2l
  1137  0178D0  C008  FFDA         	movff	speedCheck@marginSlow+1,fsr2h
  1138  0178D4  0E00               	movlw	0
  1139  0178D6  6EDE               	movwf	postinc2,c
  1140  0178D8  0E00               	movlw	0
  1141  0178DA  6EDD               	movwf	postdec2,c
  1142  0178DC                     l1567:
  1143                           
  1144                           ;movements.c: 600: }
  1145                           ;movements.c: 601: if ((actuatorSlow - actuatorFast) == 10)
  1146  0178DC  C003  F00B         	movff	speedCheck@actuatorFast,??_speedCheck
  1147  0178E0  C004  F00C         	movff	speedCheck@actuatorFast+1,??_speedCheck+1
  1148  0178E4  1E0B               	comf	??_speedCheck,f,c
  1149  0178E6  1E0C               	comf	??_speedCheck+1,f,c
  1150  0178E8  4A0B               	infsnz	??_speedCheck,f,c
  1151  0178EA  2A0C               	incf	??_speedCheck+1,f,c
  1152  0178EC  5001               	movf	speedCheck@actuatorSlow,w,c
  1153  0178EE  260B               	addwf	??_speedCheck,f,c
  1154  0178F0  5002               	movf	speedCheck@actuatorSlow+1,w,c
  1155  0178F2  220C               	addwfc	??_speedCheck+1,f,c
  1156  0178F4  0E0A               	movlw	10
  1157  0178F6  180B               	xorwf	??_speedCheck,w,c
  1158  0178F8  100C               	iorwf	??_speedCheck+1,w,c
  1159  0178FA  A4D8               	btfss	status,2,c
  1160  0178FC  0012               	return	
  1161                           
  1162                           ;movements.c: 602: {
  1163                           ;movements.c: 603: *marginFast = 0;
  1164  0178FE  C009  FFD9         	movff	speedCheck@marginFast,fsr2l
  1165  017902  C00A  FFDA         	movff	speedCheck@marginFast+1,fsr2h
  1166  017906  0E00               	movlw	0
  1167  017908  6EDE               	movwf	postinc2,c
  1168  01790A  0E00               	movlw	0
  1169  01790C  6EDD               	movwf	postdec2,c
  1170                           
  1171                           ;movements.c: 604: *marginSlow = 1;
  1172  01790E  C007  FFD9         	movff	speedCheck@marginSlow,fsr2l
  1173  017912  C008  FFDA         	movff	speedCheck@marginSlow+1,fsr2h
  1174  017916  0E01               	movlw	1
  1175  017918  6EDE               	movwf	postinc2,c
  1176  01791A  0E00               	movlw	0
  1177  01791C  6EDD               	movwf	postdec2,c
  1178                           
  1179                           ;movements.c: 605: }
  1180                           ;movements.c: 606: } else if(set_point == retractPos)
  1181  01791E  0012               	return	
  1182  017920                     l1571:
  1183  017920  5042               	movf	_retractPos,w,c
  1184  017922  1805               	xorwf	speedCheck@set_point,w,c
  1185  017924  E149               	bnz	l439
  1186  017926  5043               	movf	_retractPos+1,w,c
  1187  017928  1806               	xorwf	speedCheck@set_point+1,w,c
  1188  01792A  A4D8               	btfss	status,2,c
  1189  01792C  0012               	return	
  1190                           
  1191                           ;movements.c: 607: {
  1192                           ;movements.c: 608: if((actuatorFast - actuatorSlow) == -10)
  1193  01792E  C001  F00B         	movff	speedCheck@actuatorSlow,??_speedCheck
  1194  017932  C002  F00C         	movff	speedCheck@actuatorSlow+1,??_speedCheck+1
  1195  017936  1E0B               	comf	??_speedCheck,f,c
  1196  017938  1E0C               	comf	??_speedCheck+1,f,c
  1197  01793A  4A0B               	infsnz	??_speedCheck,f,c
  1198  01793C  2A0C               	incf	??_speedCheck+1,f,c
  1199  01793E  5003               	movf	speedCheck@actuatorFast,w,c
  1200  017940  260B               	addwf	??_speedCheck,f,c
  1201  017942  5004               	movf	speedCheck@actuatorFast+1,w,c
  1202  017944  220C               	addwfc	??_speedCheck+1,f,c
  1203  017946  0EF6               	movlw	246
  1204  017948  180B               	xorwf	??_speedCheck,w,c
  1205  01794A  E113               	bnz	l1577
  1206  01794C  280C               	incf	??_speedCheck+1,w,c
  1207  01794E  A4D8               	btfss	status,2,c
  1208  017950  D010               	goto	l1577
  1209                           
  1210                           ;movements.c: 609: {
  1211                           ;movements.c: 610: *marginFast = 1;
  1212  017952  C009  FFD9         	movff	speedCheck@marginFast,fsr2l
  1213  017956  C00A  FFDA         	movff	speedCheck@marginFast+1,fsr2h
  1214  01795A  0E01               	movlw	1
  1215  01795C  6EDE               	movwf	postinc2,c
  1216  01795E  0E00               	movlw	0
  1217  017960  6EDD               	movwf	postdec2,c
  1218                           
  1219                           ;movements.c: 611: *marginSlow = 0;
  1220  017962  C007  FFD9         	movff	speedCheck@marginSlow,fsr2l
  1221  017966  C008  FFDA         	movff	speedCheck@marginSlow+1,fsr2h
  1222  01796A  0E00               	movlw	0
  1223  01796C  6EDE               	movwf	postinc2,c
  1224  01796E  0E00               	movlw	0
  1225  017970  6EDD               	movwf	postdec2,c
  1226  017972                     l1577:
  1227                           
  1228                           ;movements.c: 612: }
  1229                           ;movements.c: 613: if ((actuatorSlow - actuatorFast) == -10)
  1230  017972  C003  F00B         	movff	speedCheck@actuatorFast,??_speedCheck
  1231  017976  C004  F00C         	movff	speedCheck@actuatorFast+1,??_speedCheck+1
  1232  01797A  1E0B               	comf	??_speedCheck,f,c
  1233  01797C  1E0C               	comf	??_speedCheck+1,f,c
  1234  01797E  4A0B               	infsnz	??_speedCheck,f,c
  1235  017980  2A0C               	incf	??_speedCheck+1,f,c
  1236  017982  5001               	movf	speedCheck@actuatorSlow,w,c
  1237  017984  260B               	addwf	??_speedCheck,f,c
  1238  017986  5002               	movf	speedCheck@actuatorSlow+1,w,c
  1239  017988  220C               	addwfc	??_speedCheck+1,f,c
  1240  01798A  0EF6               	movlw	246
  1241  01798C  180B               	xorwf	??_speedCheck,w,c
  1242  01798E  E114               	bnz	l439
  1243  017990  280C               	incf	??_speedCheck+1,w,c
  1244  017992  A4D8               	btfss	status,2,c
  1245  017994  0012               	return	
  1246                           
  1247                           ;movements.c: 614: {
  1248                           ;movements.c: 615: *marginFast = 0;
  1249  017996  C009  FFD9         	movff	speedCheck@marginFast,fsr2l
  1250  01799A  C00A  FFDA         	movff	speedCheck@marginFast+1,fsr2h
  1251  01799E  0E00               	movlw	0
  1252  0179A0  6EDE               	movwf	postinc2,c
  1253  0179A2  0E00               	movlw	0
  1254  0179A4  6EDD               	movwf	postdec2,c
  1255                           
  1256                           ;movements.c: 616: *marginSlow = 1;
  1257  0179A6  C007  FFD9         	movff	speedCheck@marginSlow,fsr2l
  1258  0179AA  C008  FFDA         	movff	speedCheck@marginSlow+1,fsr2h
  1259  0179AE  0E01               	movlw	1
  1260  0179B0  6EDE               	movwf	postinc2,c
  1261  0179B2  0E00               	movlw	0
  1262  0179B4  6EDD               	movwf	postdec2,c
  1263  0179B6  0012               	return	
  1264  0179B8                     l439:
  1265  0179B8  0012               	return		;funcret
  1266  0179BA                     __end_of_speedCheck:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           postdec1	equ	0xFE5
  1275                           fsr1l	equ	0xFE1
  1276                           postinc2	equ	0xFDE
  1277                           postdec2	equ	0xFDD
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _setAnalogIn *****************
  1283 ;; Defined at:
  1284 ;;		line 24 in file "system.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		None
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text2
  1312  0176B8                     __ptext2:
  1313                           	opt stack 0
  1314  0176B8                     _setAnalogIn:
  1315                           	opt stack 30
  1316                           
  1317                           ;system.c: 27: ADCON1bits.PCFG = 0;
  1318                           
  1319                           ;incstack = 0
  1320  0176B8  90C1               	bcf	4033,0,c	;volatile
  1321  0176BA  92C1               	bcf	4033,1,c	;volatile
  1322  0176BC  94C1               	bcf	4033,2,c	;volatile
  1323  0176BE  96C1               	bcf	4033,3,c	;volatile
  1324                           
  1325                           ;system.c: 28: ADCON2bits.ADFM = 1;
  1326  0176C0  8EC0               	bsf	4032,7,c	;volatile
  1327                           
  1328                           ;system.c: 32: ADCON1bits.VCFG0 = 0;
  1329  0176C2  98C1               	bcf	4033,4,c	;volatile
  1330                           
  1331                           ;system.c: 33: ADCON1bits.VCFG1 = 0;
  1332  0176C4  9AC1               	bcf	4033,5,c	;volatile
  1333                           
  1334                           ;system.c: 36: ADCON2bits.ACQT2 = 0;
  1335  0176C6  9AC0               	bcf	4032,5,c	;volatile
  1336                           
  1337                           ;system.c: 37: ADCON2bits.ACQT1 = 1;
  1338  0176C8  88C0               	bsf	4032,4,c	;volatile
  1339                           
  1340                           ;system.c: 38: ADCON2bits.ACQT0 = 0;
  1341  0176CA  96C0               	bcf	4032,3,c	;volatile
  1342                           
  1343                           ;system.c: 41: ADCON2bits.ADCS2 = 0;
  1344  0176CC  94C0               	bcf	4032,2,c	;volatile
  1345                           
  1346                           ;system.c: 42: ADCON2bits.ADCS1 = 1;
  1347  0176CE  82C0               	bsf	4032,1,c	;volatile
  1348                           
  1349                           ;system.c: 43: ADCON2bits.ADCS0 = 0;
  1350  0176D0  90C0               	bcf	4032,0,c	;volatile
  1351                           
  1352                           ;system.c: 47: TRISAbits.TRISA0 = 1;
  1353  0176D2  8092               	bsf	3986,0,c	;volatile
  1354                           
  1355                           ;system.c: 48: TRISAbits.TRISA1 = 1;
  1356  0176D4  8292               	bsf	3986,1,c	;volatile
  1357                           
  1358                           ;system.c: 49: TRISAbits.TRISA2 = 1;
  1359  0176D6  8492               	bsf	3986,2,c	;volatile
  1360                           
  1361                           ;system.c: 50: TRISAbits.TRISA3 = 1;
  1362  0176D8  8692               	bsf	3986,3,c	;volatile
  1363                           
  1364                           ;system.c: 51: TRISAbits.TRISA5 = 1;
  1365  0176DA  8A92               	bsf	3986,5,c	;volatile
  1366                           
  1367                           ;system.c: 52: TRISEbits.TRISE0 = 1;
  1368  0176DC  8096               	bsf	3990,0,c	;volatile
  1369                           
  1370                           ;system.c: 53: TRISEbits.TRISE1 = 1;
  1371  0176DE  8296               	bsf	3990,1,c	;volatile
  1372                           
  1373                           ;system.c: 54: TRISEbits.TRISE2 = 1;
  1374  0176E0  8496               	bsf	3990,2,c	;volatile
  1375                           
  1376                           ;system.c: 55: TRISBbits.TRISB1 = 1;
  1377  0176E2  8293               	bsf	3987,1,c	;volatile
  1378                           
  1379                           ;system.c: 56: TRISBbits.TRISB4 = 1;
  1380  0176E4  8893               	bsf	3987,4,c	;volatile
  1381                           
  1382                           ;system.c: 57: TRISBbits.TRISB0 = 1;
  1383  0176E6  8093               	bsf	3987,0,c	;volatile
  1384                           
  1385                           ;system.c: 60: ADCON0bits.ADON = 1;
  1386  0176E8  80C2               	bsf	4034,0,c	;volatile
  1387  0176EA  0012               	return		;funcret
  1388  0176EC                     __end_of_setAnalogIn:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           postinc2	equ	0xFDE
  1399                           postdec2	equ	0xFDD
  1400                           fsr2h	equ	0xFDA
  1401                           fsr2l	equ	0xFD9
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _setActuatorCntrl *****************
  1405 ;; Defined at:
  1406 ;;		line 63 in file "system.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		None
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text3
  1434  017662                     __ptext3:
  1435                           	opt stack 0
  1436  017662                     _setActuatorCntrl:
  1437                           	opt stack 30
  1438                           
  1439                           ;system.c: 66: TRISDbits.TRISD0 = 0;
  1440                           
  1441                           ;incstack = 0
  1442  017662  9095               	bcf	3989,0,c	;volatile
  1443                           
  1444                           ;system.c: 67: TRISDbits.TRISD1 = 0;
  1445  017664  9295               	bcf	3989,1,c	;volatile
  1446                           
  1447                           ;system.c: 68: TRISDbits.TRISD2 = 0;
  1448  017666  9495               	bcf	3989,2,c	;volatile
  1449                           
  1450                           ;system.c: 69: TRISDbits.TRISD3 = 0;
  1451  017668  9695               	bcf	3989,3,c	;volatile
  1452                           
  1453                           ;system.c: 70: TRISDbits.TRISD4 = 0;
  1454  01766A  9895               	bcf	3989,4,c	;volatile
  1455                           
  1456                           ;system.c: 71: TRISDbits.TRISD5 = 0;
  1457  01766C  9A95               	bcf	3989,5,c	;volatile
  1458                           
  1459                           ;system.c: 72: TRISDbits.TRISD6 = 0;
  1460  01766E  9C95               	bcf	3989,6,c	;volatile
  1461                           
  1462                           ;system.c: 73: TRISDbits.TRISD7 = 0;
  1463  017670  9E95               	bcf	3989,7,c	;volatile
  1464                           
  1465                           ;system.c: 75: TRISCbits.TRISC0 = 0;
  1466  017672  9094               	bcf	3988,0,c	;volatile
  1467                           
  1468                           ;system.c: 76: TRISCbits.TRISC1 = 0;
  1469  017674  9294               	bcf	3988,1,c	;volatile
  1470                           
  1471                           ;system.c: 77: TRISCbits.TRISC2 = 0;
  1472  017676  9494               	bcf	3988,2,c	;volatile
  1473                           
  1474                           ;system.c: 78: TRISCbits.TRISC3 = 0;
  1475  017678  9694               	bcf	3988,3,c	;volatile
  1476                           
  1477                           ;system.c: 79: TRISCbits.TRISC4 = 0;
  1478  01767A  9894               	bcf	3988,4,c	;volatile
  1479                           
  1480                           ;system.c: 80: TRISCbits.TRISC5 = 0;
  1481  01767C  9A94               	bcf	3988,5,c	;volatile
  1482                           
  1483                           ;system.c: 81: TRISCbits.TRISC6 = 0;
  1484  01767E  9C94               	bcf	3988,6,c	;volatile
  1485                           
  1486                           ;system.c: 82: TRISCbits.TRISC7 = 0;
  1487  017680  9E94               	bcf	3988,7,c	;volatile
  1488                           
  1489                           ;system.c: 85: TRISAbits.TRISA7 = 0;
  1490  017682  9E92               	bcf	3986,7,c	;volatile
  1491  017684  0012               	return		;funcret
  1492  017686                     __end_of_setActuatorCntrl:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           postdec1	equ	0xFE5
  1501                           fsr1l	equ	0xFE1
  1502                           postinc2	equ	0xFDE
  1503                           postdec2	equ	0xFDD
  1504                           fsr2h	equ	0xFDA
  1505                           fsr2l	equ	0xFD9
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _selectAN7 *****************
  1509 ;; Defined at:
  1510 ;;		line 68 in file "ADC_Config.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text4
  1538  017630                     __ptext4:
  1539                           	opt stack 0
  1540  017630                     _selectAN7:
  1541                           	opt stack 30
  1542                           
  1543                           ;ADC_Config.c: 70: ADCON0bits.CHS = 0x07;
  1544                           
  1545                           ;incstack = 0
  1546  017630  50C2               	movf	4034,w,c	;volatile
  1547  017632  0BC3               	andlw	-61
  1548  017634  091C               	iorlw	28
  1549  017636  6EC2               	movwf	4034,c	;volatile
  1550  017638  0012               	return		;funcret
  1551  01763A                     __end_of_selectAN7:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           postdec1	equ	0xFE5
  1560                           fsr1l	equ	0xFE1
  1561                           postinc2	equ	0xFDE
  1562                           postdec2	equ	0xFDD
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _selectAN6 *****************
  1568 ;; Defined at:
  1569 ;;		line 62 in file "ADC_Config.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text5
  1597  017626                     __ptext5:
  1598                           	opt stack 0
  1599  017626                     _selectAN6:
  1600                           	opt stack 30
  1601                           
  1602                           ;ADC_Config.c: 64: ADCON0bits.CHS = 0x06;
  1603                           
  1604                           ;incstack = 0
  1605  017626  50C2               	movf	4034,w,c	;volatile
  1606  017628  0BC3               	andlw	-61
  1607  01762A  0918               	iorlw	24
  1608  01762C  6EC2               	movwf	4034,c	;volatile
  1609  01762E  0012               	return		;funcret
  1610  017630                     __end_of_selectAN6:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           fsr1l	equ	0xFE1
  1620                           postinc2	equ	0xFDE
  1621                           postdec2	equ	0xFDD
  1622                           fsr2h	equ	0xFDA
  1623                           fsr2l	equ	0xFD9
  1624                           status	equ	0xFD8
  1625                           
  1626 ;; *************** function _selectAN5 *****************
  1627 ;; Defined at:
  1628 ;;		line 56 in file "ADC_Config.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1646 ;;Total ram usage:        0 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text6
  1656  01761C                     __ptext6:
  1657                           	opt stack 0
  1658  01761C                     _selectAN5:
  1659                           	opt stack 30
  1660                           
  1661                           ;ADC_Config.c: 58: ADCON0bits.CHS = 0x05;
  1662                           
  1663                           ;incstack = 0
  1664  01761C  50C2               	movf	4034,w,c	;volatile
  1665  01761E  0BC3               	andlw	-61
  1666  017620  0914               	iorlw	20
  1667  017622  6EC2               	movwf	4034,c	;volatile
  1668  017624  0012               	return		;funcret
  1669  017626                     __end_of_selectAN5:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           postdec1	equ	0xFE5
  1678                           fsr1l	equ	0xFE1
  1679                           postinc2	equ	0xFDE
  1680                           postdec2	equ	0xFDD
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _selectAN4 *****************
  1686 ;; Defined at:
  1687 ;;		line 50 in file "ADC_Config.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text7
  1715  017612                     __ptext7:
  1716                           	opt stack 0
  1717  017612                     _selectAN4:
  1718                           	opt stack 30
  1719                           
  1720                           ;ADC_Config.c: 52: ADCON0bits.CHS = 0x04;
  1721                           
  1722                           ;incstack = 0
  1723  017612  50C2               	movf	4034,w,c	;volatile
  1724  017614  0BC3               	andlw	-61
  1725  017616  0910               	iorlw	16
  1726  017618  6EC2               	movwf	4034,c	;volatile
  1727  01761A  0012               	return		;funcret
  1728  01761C                     __end_of_selectAN4:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postdec1	equ	0xFE5
  1737                           fsr1l	equ	0xFE1
  1738                           postinc2	equ	0xFDE
  1739                           postdec2	equ	0xFDD
  1740                           fsr2h	equ	0xFDA
  1741                           fsr2l	equ	0xFD9
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _selectAN3 *****************
  1745 ;; Defined at:
  1746 ;;		line 44 in file "ADC_Config.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text8
  1774  017608                     __ptext8:
  1775                           	opt stack 0
  1776  017608                     _selectAN3:
  1777                           	opt stack 30
  1778                           
  1779                           ;ADC_Config.c: 46: ADCON0bits.CHS = 0x03;
  1780                           
  1781                           ;incstack = 0
  1782  017608  50C2               	movf	4034,w,c	;volatile
  1783  01760A  0BC3               	andlw	-61
  1784  01760C  090C               	iorlw	12
  1785  01760E  6EC2               	movwf	4034,c	;volatile
  1786  017610  0012               	return		;funcret
  1787  017612                     __end_of_selectAN3:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1l	equ	0xFE1
  1797                           postinc2	equ	0xFDE
  1798                           postdec2	equ	0xFDD
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _selectAN2 *****************
  1804 ;; Defined at:
  1805 ;;		line 38 in file "ADC_Config.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text9
  1833  0175FE                     __ptext9:
  1834                           	opt stack 0
  1835  0175FE                     _selectAN2:
  1836                           	opt stack 30
  1837                           
  1838                           ;ADC_Config.c: 40: ADCON0bits.CHS = 0x02;
  1839                           
  1840                           ;incstack = 0
  1841  0175FE  50C2               	movf	4034,w,c	;volatile
  1842  017600  0BC3               	andlw	-61
  1843  017602  0908               	iorlw	8
  1844  017604  6EC2               	movwf	4034,c	;volatile
  1845  017606  0012               	return		;funcret
  1846  017608                     __end_of_selectAN2:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           postdec1	equ	0xFE5
  1855                           fsr1l	equ	0xFE1
  1856                           postinc2	equ	0xFDE
  1857                           postdec2	equ	0xFDD
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _selectAN1 *****************
  1863 ;; Defined at:
  1864 ;;		line 32 in file "ADC_Config.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text10
  1892  0175F4                     __ptext10:
  1893                           	opt stack 0
  1894  0175F4                     _selectAN1:
  1895                           	opt stack 30
  1896                           
  1897                           ;ADC_Config.c: 34: ADCON0bits.CHS = 0x01;
  1898                           
  1899                           ;incstack = 0
  1900  0175F4  50C2               	movf	4034,w,c	;volatile
  1901  0175F6  0BC3               	andlw	-61
  1902  0175F8  0904               	iorlw	4
  1903  0175FA  6EC2               	movwf	4034,c	;volatile
  1904  0175FC  0012               	return		;funcret
  1905  0175FE                     __end_of_selectAN1:
  1906                           	opt stack 0
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1l	equ	0xFE1
  1915                           postinc2	equ	0xFDE
  1916                           postdec2	equ	0xFDD
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _selectAN0 *****************
  1922 ;; Defined at:
  1923 ;;		line 26 in file "ADC_Config.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		None
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text11
  1951  0175EA                     __ptext11:
  1952                           	opt stack 0
  1953  0175EA                     _selectAN0:
  1954                           	opt stack 30
  1955                           
  1956                           ;ADC_Config.c: 28: ADCON0bits.CHS = 0x00;
  1957                           
  1958                           ;incstack = 0
  1959  0175EA  94C2               	bcf	4034,2,c	;volatile
  1960  0175EC  96C2               	bcf	4034,3,c	;volatile
  1961  0175EE  98C2               	bcf	4034,4,c	;volatile
  1962  0175F0  9AC2               	bcf	4034,5,c	;volatile
  1963  0175F2  0012               	return		;funcret
  1964  0175F4                     __end_of_selectAN0:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           postdec1	equ	0xFE5
  1973                           fsr1l	equ	0xFE1
  1974                           postinc2	equ	0xFDE
  1975                           postdec2	equ	0xFDD
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980 ;; *************** function _readADC *****************
  1981 ;; Defined at:
  1982 ;;		line 73 in file "ADC_Config.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  digitalVal      2    2[COMRAM] unsigned int 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2    0[COMRAM] unsigned int 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;Total ram usage:        4 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text12
  2010  017648                     __ptext12:
  2011                           	opt stack 0
  2012  017648                     _readADC:
  2013                           	opt stack 30
  2014                           
  2015                           ;ADC_Config.c: 75: unsigned int digitalVal;
  2016                           ;ADC_Config.c: 77: ADCON0bits.GO_NOT_DONE = 1;
  2017                           
  2018                           ;incstack = 0
  2019  017648  82C2               	bsf	4034,1,c	;volatile
  2020  01764A                     l128:
  2021  01764A  B2C2               	btfsc	4034,1,c	;volatile
  2022  01764C  D7FE               	goto	l128
  2023                           
  2024                           ;ADC_Config.c: 83: digitalVal = ADRESL;
  2025  01764E  CFC3 F003          	movff	4035,readADC@digitalVal	;volatile
  2026  017652  6A04               	clrf	readADC@digitalVal+1,c
  2027                           
  2028                           ;ADC_Config.c: 84: digitalVal += ADRESH << 8;
  2029  017654  50C4               	movf	4036,w,c	;volatile
  2030  017656  2604               	addwf	readADC@digitalVal+1,f,c
  2031                           
  2032                           ;ADC_Config.c: 85: return digitalVal;
  2033  017658  C003  F001         	movff	readADC@digitalVal,?_readADC
  2034  01765C  C004  F002         	movff	readADC@digitalVal+1,?_readADC+1
  2035  017660  0012               	return	
  2036  017662                     __end_of_readADC:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postdec1	equ	0xFE5
  2045                           fsr1l	equ	0xFE1
  2046                           postinc2	equ	0xFDE
  2047                           postdec2	equ	0xFDD
  2048                           fsr2h	equ	0xFDA
  2049                           fsr2l	equ	0xFD9
  2050                           status	equ	0xFD8
  2051                           
  2052 ;; *************** function _movement *****************
  2053 ;; Defined at:
  2054 ;;		line 31 in file "movements.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  current_pos     2    0[COMRAM] unsigned int 
  2057 ;;  set_point       2    2[COMRAM] unsigned int 
  2058 ;;  actuator        2    4[COMRAM] int 
  2059 ;;  margin          2    6[COMRAM] PTR int 
  2060 ;;		 -> margin6(2), margin5(2), margin4(2), margin3(2), 
  2061 ;;		 -> margin2(2), margin1(2), margin0(2), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  move1           2   12[COMRAM] int 
  2064 ;;  move0           2   10[COMRAM] int 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2074 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;Total ram usage:       14 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text13
  2088  0179BA                     __ptext13:
  2089                           	opt stack 0
  2090  0179BA                     _movement:
  2091                           	opt stack 30
  2092                           
  2093                           ;movements.c: 33: int move0;
  2094                           ;movements.c: 34: int move1;
  2095                           ;movements.c: 36: if(*margin == 0)
  2096                           
  2097                           ;incstack = 0
  2098  0179BA  C007  FFD9         	movff	movement@margin,fsr2l
  2099  0179BE  C008  FFDA         	movff	movement@margin+1,fsr2h
  2100  0179C2  50DE               	movf	postinc2,w,c
  2101  0179C4  10DE               	iorwf	postinc2,w,c
  2102  0179C6  A4D8               	btfss	status,2,c
  2103  0179C8  D02B               	goto	l1595
  2104                           
  2105                           ;movements.c: 37: {
  2106                           ;movements.c: 38: if (current_pos < set_point)
  2107  0179CA  5003               	movf	movement@set_point,w,c
  2108  0179CC  5C01               	subwf	movement@current_pos,w,c
  2109  0179CE  5004               	movf	movement@set_point+1,w,c
  2110  0179D0  5802               	subwfb	movement@current_pos+1,w,c
  2111  0179D2  B0D8               	btfsc	status,0,c
  2112  0179D4  D008               	goto	l1587
  2113                           
  2114                           ;movements.c: 39: {
  2115                           ;movements.c: 40: move0 = 0;
  2116  0179D6  0E00               	movlw	0
  2117  0179D8  6E0C               	movwf	movement@move0+1,c
  2118  0179DA  0E00               	movlw	0
  2119  0179DC  6E0B               	movwf	movement@move0,c
  2120                           
  2121                           ;movements.c: 41: move1 = 1;
  2122  0179DE  0E00               	movlw	0
  2123  0179E0  6E0E               	movwf	movement@move1+1,c
  2124  0179E2  0E01               	movlw	1
  2125  0179E4  D00A               	goto	L1
  2126  0179E6                     l1587:
  2127  0179E6  5001               	movf	movement@current_pos,w,c
  2128  0179E8  5C03               	subwf	movement@set_point,w,c
  2129  0179EA  5002               	movf	movement@current_pos+1,w,c
  2130  0179EC  5804               	subwfb	movement@set_point+1,w,c
  2131  0179EE  B0D8               	btfsc	status,0,c
  2132  0179F0  D006               	goto	l1591
  2133                           
  2134                           ;movements.c: 43: {
  2135                           ;movements.c: 44: move0 = 1;
  2136  0179F2  0E00               	movlw	0
  2137  0179F4  6E0C               	movwf	movement@move0+1,c
  2138  0179F6  0E01               	movlw	1
  2139  0179F8  D016               	goto	L2
  2140  0179FA                     L1:
  2141  0179FA  6E0D               	movwf	movement@move1,c
  2142                           
  2143                           ;movements.c: 46: } else
  2144  0179FC  D019               	goto	l1597
  2145  0179FE                     l1591:
  2146                           
  2147                           ;movements.c: 47: {
  2148                           ;movements.c: 48: move0 = 0;
  2149  0179FE  0E00               	movlw	0
  2150  017A00  6E0C               	movwf	movement@move0+1,c
  2151  017A02  0E00               	movlw	0
  2152  017A04  6E0B               	movwf	movement@move0,c
  2153                           
  2154                           ;movements.c: 49: move1 = 0;
  2155  017A06  0E00               	movlw	0
  2156  017A08  6E0E               	movwf	movement@move1+1,c
  2157  017A0A  0E00               	movlw	0
  2158  017A0C  6E0D               	movwf	movement@move1,c
  2159                           
  2160                           ;movements.c: 50: *margin = 1;
  2161  017A0E  C007  FFD9         	movff	movement@margin,fsr2l
  2162  017A12  C008  FFDA         	movff	movement@margin+1,fsr2h
  2163  017A16  0E01               	movlw	1
  2164  017A18  6EDE               	movwf	postinc2,c
  2165  017A1A  0E00               	movlw	0
  2166  017A1C  6EDD               	movwf	postdec2,c
  2167                           
  2168                           ;movements.c: 51: }
  2169                           ;movements.c: 52: } else
  2170  017A1E  D008               	goto	l1597
  2171  017A20                     l1595:
  2172                           
  2173                           ;movements.c: 53: {
  2174                           ;movements.c: 54: move0 = 0;
  2175  017A20  0E00               	movlw	0
  2176  017A22  6E0C               	movwf	movement@move0+1,c
  2177  017A24  0E00               	movlw	0
  2178  017A26                     L2:
  2179  017A26  6E0B               	movwf	movement@move0,c
  2180                           
  2181                           ;movements.c: 55: move1 = 0;
  2182  017A28  0E00               	movlw	0
  2183  017A2A  6E0E               	movwf	movement@move1+1,c
  2184  017A2C  0E00               	movlw	0
  2185  017A2E  D7E5               	goto	L1
  2186  017A30                     l1597:
  2187                           
  2188                           ;movements.c: 56: }
  2189                           ;movements.c: 78: if(actuator == 0)
  2190  017A30  5005               	movf	movement@actuator,w,c
  2191  017A32  1006               	iorwf	movement@actuator+1,w,c
  2192  017A34  A4D8               	btfss	status,2,c
  2193  017A36  D00B               	goto	l1601
  2194                           
  2195                           ;movements.c: 79: {
  2196                           ;movements.c: 80: LATCbits.LATC0 = move0;
  2197  017A38  B00B               	btfsc	movement@move0,0,c
  2198  017A3A  D002               	bra	u1135
  2199  017A3C  908B               	bcf	3979,0,c	;volatile
  2200  017A3E  D001               	bra	u1136
  2201  017A40                     u1135:
  2202  017A40  808B               	bsf	3979,0,c	;volatile
  2203  017A42                     u1136:
  2204                           
  2205                           ;movements.c: 81: LATCbits.LATC1 = move1;
  2206  017A42  B00D               	btfsc	movement@move1,0,c
  2207  017A44  D002               	bra	u1145
  2208  017A46  928B               	bcf	3979,1,c	;volatile
  2209  017A48  D001               	bra	u1146
  2210  017A4A                     u1145:
  2211  017A4A  828B               	bsf	3979,1,c	;volatile
  2212  017A4C                     u1146:
  2213                           
  2214                           ;movements.c: 82: } else if (actuator == 1)
  2215  017A4C  0012               	return	
  2216  017A4E                     l1601:
  2217  017A4E  0405               	decf	movement@actuator,w,c
  2218  017A50  1006               	iorwf	movement@actuator+1,w,c
  2219  017A52  A4D8               	btfss	status,2,c
  2220  017A54  D00B               	goto	l1605
  2221                           
  2222                           ;movements.c: 83: {
  2223                           ;movements.c: 84: LATCbits.LATC2 = move0;
  2224  017A56  B00B               	btfsc	movement@move0,0,c
  2225  017A58  D002               	bra	u1165
  2226  017A5A  948B               	bcf	3979,2,c	;volatile
  2227  017A5C  D001               	bra	u1166
  2228  017A5E                     u1165:
  2229  017A5E  848B               	bsf	3979,2,c	;volatile
  2230  017A60                     u1166:
  2231                           
  2232                           ;movements.c: 85: LATCbits.LATC3 = move1;
  2233  017A60  B00D               	btfsc	movement@move1,0,c
  2234  017A62  D002               	bra	u1175
  2235  017A64  968B               	bcf	3979,3,c	;volatile
  2236  017A66  D001               	bra	u1176
  2237  017A68                     u1175:
  2238  017A68  868B               	bsf	3979,3,c	;volatile
  2239  017A6A                     u1176:
  2240                           
  2241                           ;movements.c: 86: } else if (actuator == 2)
  2242  017A6A  0012               	return	
  2243  017A6C                     l1605:
  2244  017A6C  0E02               	movlw	2
  2245  017A6E  1805               	xorwf	movement@actuator,w,c
  2246  017A70  1006               	iorwf	movement@actuator+1,w,c
  2247  017A72  A4D8               	btfss	status,2,c
  2248  017A74  D00B               	goto	l1609
  2249                           
  2250                           ;movements.c: 87: {
  2251                           ;movements.c: 88: LATDbits.LATD0 = move0;
  2252  017A76  B00B               	btfsc	movement@move0,0,c
  2253  017A78  D002               	bra	u1195
  2254  017A7A  908C               	bcf	3980,0,c	;volatile
  2255  017A7C  D001               	bra	u1196
  2256  017A7E                     u1195:
  2257  017A7E  808C               	bsf	3980,0,c	;volatile
  2258  017A80                     u1196:
  2259                           
  2260                           ;movements.c: 89: LATDbits.LATD1 = move1;
  2261  017A80  B00D               	btfsc	movement@move1,0,c
  2262  017A82  D002               	bra	u1205
  2263  017A84  928C               	bcf	3980,1,c	;volatile
  2264  017A86  D001               	bra	u1206
  2265  017A88                     u1205:
  2266  017A88  828C               	bsf	3980,1,c	;volatile
  2267  017A8A                     u1206:
  2268                           
  2269                           ;movements.c: 90: } else if (actuator == 3)
  2270  017A8A  0012               	return	
  2271  017A8C                     l1609:
  2272  017A8C  0E03               	movlw	3
  2273  017A8E  1805               	xorwf	movement@actuator,w,c
  2274  017A90  1006               	iorwf	movement@actuator+1,w,c
  2275  017A92  A4D8               	btfss	status,2,c
  2276  017A94  D00B               	goto	l1613
  2277                           
  2278                           ;movements.c: 91: {
  2279                           ;movements.c: 92: LATDbits.LATD2 = move0;
  2280  017A96  B00B               	btfsc	movement@move0,0,c
  2281  017A98  D002               	bra	u1225
  2282  017A9A  948C               	bcf	3980,2,c	;volatile
  2283  017A9C  D001               	bra	u1226
  2284  017A9E                     u1225:
  2285  017A9E  848C               	bsf	3980,2,c	;volatile
  2286  017AA0                     u1226:
  2287                           
  2288                           ;movements.c: 93: LATDbits.LATD3 = move1;
  2289  017AA0  B00D               	btfsc	movement@move1,0,c
  2290  017AA2  D002               	bra	u1235
  2291  017AA4  968C               	bcf	3980,3,c	;volatile
  2292  017AA6  D001               	bra	u1236
  2293  017AA8                     u1235:
  2294  017AA8  868C               	bsf	3980,3,c	;volatile
  2295  017AAA                     u1236:
  2296                           
  2297                           ;movements.c: 94: } else if (actuator == 4)
  2298  017AAA  0012               	return	
  2299  017AAC                     l1613:
  2300  017AAC  0E04               	movlw	4
  2301  017AAE  1805               	xorwf	movement@actuator,w,c
  2302  017AB0  1006               	iorwf	movement@actuator+1,w,c
  2303  017AB2  A4D8               	btfss	status,2,c
  2304  017AB4  D00B               	goto	l1617
  2305                           
  2306                           ;movements.c: 95: {
  2307                           ;movements.c: 96: LATCbits.LATC4 = move0;
  2308  017AB6  B00B               	btfsc	movement@move0,0,c
  2309  017AB8  D002               	bra	u1255
  2310  017ABA  988B               	bcf	3979,4,c	;volatile
  2311  017ABC  D001               	bra	u1256
  2312  017ABE                     u1255:
  2313  017ABE  888B               	bsf	3979,4,c	;volatile
  2314  017AC0                     u1256:
  2315                           
  2316                           ;movements.c: 97: LATCbits.LATC5 = move1;
  2317  017AC0  B00D               	btfsc	movement@move1,0,c
  2318  017AC2  D002               	bra	u1265
  2319  017AC4  9A8B               	bcf	3979,5,c	;volatile
  2320  017AC6  D001               	bra	u1266
  2321  017AC8                     u1265:
  2322  017AC8  8A8B               	bsf	3979,5,c	;volatile
  2323  017ACA                     u1266:
  2324                           
  2325                           ;movements.c: 98: } else if (actuator == 5)
  2326  017ACA  0012               	return	
  2327  017ACC                     l1617:
  2328  017ACC  0E05               	movlw	5
  2329  017ACE  1805               	xorwf	movement@actuator,w,c
  2330  017AD0  1006               	iorwf	movement@actuator+1,w,c
  2331  017AD2  A4D8               	btfss	status,2,c
  2332  017AD4  D00B               	goto	l1621
  2333                           
  2334                           ;movements.c: 99: {
  2335                           ;movements.c: 100: LATCbits.LATC6 = move0;
  2336  017AD6  B00B               	btfsc	movement@move0,0,c
  2337  017AD8  D002               	bra	u1285
  2338  017ADA  9C8B               	bcf	3979,6,c	;volatile
  2339  017ADC  D001               	bra	u1286
  2340  017ADE                     u1285:
  2341  017ADE  8C8B               	bsf	3979,6,c	;volatile
  2342  017AE0                     u1286:
  2343                           
  2344                           ;movements.c: 101: LATCbits.LATC7 = move1;
  2345  017AE0  B00D               	btfsc	movement@move1,0,c
  2346  017AE2  D002               	bra	u1295
  2347  017AE4  9E8B               	bcf	3979,7,c	;volatile
  2348  017AE6  D001               	bra	u1296
  2349  017AE8                     u1295:
  2350  017AE8  8E8B               	bsf	3979,7,c	;volatile
  2351  017AEA                     u1296:
  2352                           
  2353                           ;movements.c: 102: } else if (actuator == 6)
  2354  017AEA  0012               	return	
  2355  017AEC                     l1621:
  2356  017AEC  0E06               	movlw	6
  2357  017AEE  1805               	xorwf	movement@actuator,w,c
  2358  017AF0  1006               	iorwf	movement@actuator+1,w,c
  2359  017AF2  A4D8               	btfss	status,2,c
  2360  017AF4  D00B               	goto	l1625
  2361                           
  2362                           ;movements.c: 103: {
  2363                           ;movements.c: 104: LATDbits.LATD4 = move0;
  2364  017AF6  B00B               	btfsc	movement@move0,0,c
  2365  017AF8  D002               	bra	u1315
  2366  017AFA  988C               	bcf	3980,4,c	;volatile
  2367  017AFC  D001               	bra	u1316
  2368  017AFE                     u1315:
  2369  017AFE  888C               	bsf	3980,4,c	;volatile
  2370  017B00                     u1316:
  2371                           
  2372                           ;movements.c: 105: LATDbits.LATD5 = move1;
  2373  017B00  B00D               	btfsc	movement@move1,0,c
  2374  017B02  D002               	bra	u1325
  2375  017B04  9A8C               	bcf	3980,5,c	;volatile
  2376  017B06  D001               	bra	u1326
  2377  017B08                     u1325:
  2378  017B08  8A8C               	bsf	3980,5,c	;volatile
  2379  017B0A                     u1326:
  2380                           
  2381                           ;movements.c: 106: } else if (actuator == 7)
  2382  017B0A  0012               	return	
  2383  017B0C                     l1625:
  2384  017B0C  0E07               	movlw	7
  2385  017B0E  1805               	xorwf	movement@actuator,w,c
  2386  017B10  1006               	iorwf	movement@actuator+1,w,c
  2387  017B12  A4D8               	btfss	status,2,c
  2388  017B14  0012               	return	
  2389                           
  2390                           ;movements.c: 107: {
  2391                           ;movements.c: 108: LATDbits.LATD6 = move0;
  2392  017B16  B00B               	btfsc	movement@move0,0,c
  2393  017B18  D002               	bra	u1345
  2394  017B1A  9C8C               	bcf	3980,6,c	;volatile
  2395  017B1C  D001               	bra	u1346
  2396  017B1E                     u1345:
  2397  017B1E  8C8C               	bsf	3980,6,c	;volatile
  2398  017B20                     u1346:
  2399                           
  2400                           ;movements.c: 109: LATDbits.LATD7 = move1;
  2401  017B20  B00D               	btfsc	movement@move1,0,c
  2402  017B22  D002               	bra	u1355
  2403  017B24  9E8C               	bcf	3980,7,c	;volatile
  2404  017B26  D001               	bra	u1356
  2405  017B28                     u1355:
  2406  017B28  8E8C               	bsf	3980,7,c	;volatile
  2407  017B2A                     u1356:
  2408  017B2A  0012               	return	
  2409  017B2C                     __end_of_movement:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1l	equ	0xFE1
  2419                           postinc2	equ	0xFDE
  2420                           postdec2	equ	0xFDD
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _ecan_rxb0_clear *****************
  2426 ;; Defined at:
  2427 ;;		line 203 in file "can.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		None
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text14
  2455  0175E2                     __ptext14:
  2456                           	opt stack 0
  2457  0175E2                     _ecan_rxb0_clear:
  2458                           	opt stack 30
  2459                           
  2460                           ;can.c: 205: RXB0CONbits.RXB0FUL = 0;
  2461                           
  2462                           ;incstack = 0
  2463  0175E2  9E60               	bcf	3936,7,c	;volatile
  2464  0175E4  0012               	return		;funcret
  2465  0175E6                     __end_of_ecan_rxb0_clear:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           postdec1	equ	0xFE5
  2474                           fsr1l	equ	0xFE1
  2475                           postinc2	equ	0xFDE
  2476                           postdec2	equ	0xFDD
  2477                           fsr2h	equ	0xFDA
  2478                           fsr2l	equ	0xFD9
  2479                           status	equ	0xFD8
  2480                           
  2481 ;; *************** function _ecan_receive_rxb0 *****************
  2482 ;; Defined at:
  2483 ;;		line 137 in file "can.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  mess            2    0[COMRAM] PTR struct Message
  2486 ;;		 -> main@newMessage(11), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;Total ram usage:        4 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text15
  2512  0177AA                     __ptext15:
  2513                           	opt stack 0
  2514  0177AA                     _ecan_receive_rxb0:
  2515                           	opt stack 30
  2516                           
  2517                           ;can.c: 143: mess->data[7] = RXB0D7;
  2518                           
  2519                           ;incstack = 0
  2520  0177AA  EE20 F007          	lfsr	2,7
  2521  0177AE  5001               	movf	ecan_receive_rxb0@mess,w,c
  2522  0177B0  26D9               	addwf	fsr2l,f,c
  2523  0177B2  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2524  0177B4  22DA               	addwfc	fsr2h,f,c
  2525  0177B6  CF6D FFDF          	movff	3949,indf2	;volatile
  2526                           
  2527                           ;can.c: 144: mess->data[6] = RXB0D6;
  2528  0177BA  EE20 F006          	lfsr	2,6
  2529  0177BE  5001               	movf	ecan_receive_rxb0@mess,w,c
  2530  0177C0  26D9               	addwf	fsr2l,f,c
  2531  0177C2  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2532  0177C4  22DA               	addwfc	fsr2h,f,c
  2533  0177C6  CF6C FFDF          	movff	3948,indf2	;volatile
  2534                           
  2535                           ;can.c: 145: mess->data[5] = RXB0D5;
  2536  0177CA  EE20 F005          	lfsr	2,5
  2537  0177CE  5001               	movf	ecan_receive_rxb0@mess,w,c
  2538  0177D0  26D9               	addwf	fsr2l,f,c
  2539  0177D2  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2540  0177D4  22DA               	addwfc	fsr2h,f,c
  2541  0177D6  CF6B FFDF          	movff	3947,indf2	;volatile
  2542                           
  2543                           ;can.c: 146: mess->data[4] = RXB0D4;
  2544  0177DA  EE20 F004          	lfsr	2,4
  2545  0177DE  5001               	movf	ecan_receive_rxb0@mess,w,c
  2546  0177E0  26D9               	addwf	fsr2l,f,c
  2547  0177E2  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2548  0177E4  22DA               	addwfc	fsr2h,f,c
  2549  0177E6  CF6A FFDF          	movff	3946,indf2	;volatile
  2550                           
  2551                           ;can.c: 147: mess->data[3] = RXB0D3;
  2552  0177EA  EE20 F003          	lfsr	2,3
  2553  0177EE  5001               	movf	ecan_receive_rxb0@mess,w,c
  2554  0177F0  26D9               	addwf	fsr2l,f,c
  2555  0177F2  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2556  0177F4  22DA               	addwfc	fsr2h,f,c
  2557  0177F6  CF69 FFDF          	movff	3945,indf2	;volatile
  2558                           
  2559                           ;can.c: 148: mess->data[2] = RXB0D2;
  2560  0177FA  EE20 F002          	lfsr	2,2
  2561  0177FE  5001               	movf	ecan_receive_rxb0@mess,w,c
  2562  017800  26D9               	addwf	fsr2l,f,c
  2563  017802  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2564  017804  22DA               	addwfc	fsr2h,f,c
  2565  017806  CF68 FFDF          	movff	3944,indf2	;volatile
  2566                           
  2567                           ;can.c: 149: mess->data[1] = RXB0D1;
  2568  01780A  EE20 F001          	lfsr	2,1
  2569  01780E  5001               	movf	ecan_receive_rxb0@mess,w,c
  2570  017810  26D9               	addwf	fsr2l,f,c
  2571  017812  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2572  017814  22DA               	addwfc	fsr2h,f,c
  2573  017816  CF67 FFDF          	movff	3943,indf2	;volatile
  2574                           
  2575                           ;can.c: 150: mess->data[0] = RXB0D0;
  2576  01781A  C001  FFD9         	movff	ecan_receive_rxb0@mess,fsr2l
  2577  01781E  C002  FFDA         	movff	ecan_receive_rxb0@mess+1,fsr2h
  2578  017822  CF66 FFDF          	movff	3942,indf2	;volatile
  2579                           
  2580                           ;can.c: 153: mess->sid = RXB0SIDH << 3;
  2581  017826  5061               	movf	3937,w,c	;volatile
  2582  017828  6E03               	movwf	??_ecan_receive_rxb0& (0+255),c
  2583  01782A  6A04               	clrf	(??_ecan_receive_rxb0+1)& (0+255),c
  2584  01782C  90D8               	bcf	status,0,c
  2585  01782E  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2586  017830  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2587  017832  90D8               	bcf	status,0,c
  2588  017834  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2589  017836  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2590  017838  90D8               	bcf	status,0,c
  2591  01783A  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2592  01783C  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2593  01783E  EE20 F008          	lfsr	2,8
  2594  017842  5001               	movf	ecan_receive_rxb0@mess,w,c
  2595  017844  26D9               	addwf	fsr2l,f,c
  2596  017846  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2597  017848  22DA               	addwfc	fsr2h,f,c
  2598  01784A  C003  FFDE         	movff	??_ecan_receive_rxb0,postinc2
  2599  01784E  C004  FFDD         	movff	??_ecan_receive_rxb0+1,postdec2
  2600                           
  2601                           ;can.c: 154: mess->sid |= RXB0SIDL >> 5;
  2602  017852  EE20 F008          	lfsr	2,8
  2603  017856  5001               	movf	ecan_receive_rxb0@mess,w,c
  2604  017858  26D9               	addwf	fsr2l,f,c
  2605  01785A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2606  01785C  22DA               	addwfc	fsr2h,f,c
  2607  01785E  CF62 F003          	movff	3938,??_ecan_receive_rxb0	;volatile
  2608  017862  0E05               	movlw	5
  2609  017864  6E04               	movwf	(??_ecan_receive_rxb0+1)& (0+255),c
  2610  017866                     u1015:
  2611  017866  90D8               	bcf	status,0,c
  2612  017868  3203               	rrcf	??_ecan_receive_rxb0,f,c
  2613  01786A  2E04               	decfsz	(??_ecan_receive_rxb0+1)& (0+255),f,c
  2614  01786C  D7FC               	goto	u1015
  2615  01786E  5003               	movf	??_ecan_receive_rxb0,w,c
  2616  017870  12DE               	iorwf	postinc2,f,c
  2617  017872  0E00               	movlw	0
  2618  017874  12DD               	iorwf	postdec2,f,c
  2619                           
  2620                           ;can.c: 157: mess->len = 0x0F & RXB0DLC;
  2621  017876  EE20 F00A          	lfsr	2,10
  2622  01787A  5001               	movf	ecan_receive_rxb0@mess,w,c
  2623  01787C  26D9               	addwf	fsr2l,f,c
  2624  01787E  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2625  017880  22DA               	addwfc	fsr2h,f,c
  2626  017882  5065               	movf	3941,w,c	;volatile
  2627  017884  0B0F               	andlw	15
  2628  017886  6EDF               	movwf	indf2,c
  2629                           
  2630                           ;can.c: 160: RXB0CONbits.RXB0FUL = 0;
  2631  017888  9E60               	bcf	3936,7,c	;volatile
  2632  01788A  0012               	return		;funcret
  2633  01788C                     __end_of_ecan_receive_rxb0:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1l	equ	0xFE1
  2643                           indf2	equ	0xFDF
  2644                           postinc2	equ	0xFDE
  2645                           postdec2	equ	0xFDD
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _ecan_init *****************
  2651 ;; Defined at:
  2652 ;;		line 11 in file "can.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  mask0           2    4[COMRAM] short 
  2657 ;;  sid0            2    2[COMRAM] short 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2671 ;;Total ram usage:        6 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text16
  2681  0176EC                     __ptext16:
  2682                           	opt stack 0
  2683  0176EC                     _ecan_init:
  2684                           	opt stack 30
  2685                           
  2686                           ;can.c: 14: TRISBbits.TRISB2 = 0;
  2687                           
  2688                           ;incstack = 0
  2689  0176EC  9493               	bcf	3987,2,c	;volatile
  2690                           
  2691                           ;can.c: 15: TRISBbits.TRISB3 = 1;
  2692  0176EE  8693               	bsf	3987,3,c	;volatile
  2693                           
  2694                           ;can.c: 18: CANCONbits.REQOP2 = 1;
  2695  0176F0  8E6F               	bsf	3951,7,c	;volatile
  2696  0176F2                     l236:
  2697  0176F2  AE6E               	btfss	3950,7,c	;volatile
  2698  0176F4  AC6E               	btfss	3950,6,c	;volatile
  2699  0176F6  D002               	goto	l240
  2700  0176F8  BA6E               	btfsc	3950,5,c	;volatile
  2701  0176FA  D7FB               	goto	l236
  2702  0176FC                     l240:
  2703                           
  2704                           ;can.c: 26: CIOCONbits.ENDRHI = 0;
  2705  0176FC  9A73               	bcf	3955,5,c	;volatile
  2706                           
  2707                           ;can.c: 29: BRGCON1bits.SJW1 = 0;
  2708  0176FE  9E70               	bcf	3952,7,c	;volatile
  2709                           
  2710                           ;can.c: 30: BRGCON1bits.SJW0 = 0;
  2711  017700  9C70               	bcf	3952,6,c	;volatile
  2712                           
  2713                           ;can.c: 31: BRGCON1bits.BRP5 = 0;
  2714  017702  9A70               	bcf	3952,5,c	;volatile
  2715                           
  2716                           ;can.c: 32: BRGCON1bits.BRP4 = 0;
  2717  017704  9870               	bcf	3952,4,c	;volatile
  2718                           
  2719                           ;can.c: 33: BRGCON1bits.BRP3 = 0;
  2720  017706  9670               	bcf	3952,3,c	;volatile
  2721                           
  2722                           ;can.c: 34: BRGCON1bits.BRP2 = 0;
  2723  017708  9470               	bcf	3952,2,c	;volatile
  2724                           
  2725                           ;can.c: 35: BRGCON1bits.BRP1 = 0;
  2726  01770A  9270               	bcf	3952,1,c	;volatile
  2727                           
  2728                           ;can.c: 36: BRGCON1bits.BRP0 = 1;
  2729  01770C  8070               	bsf	3952,0,c	;volatile
  2730                           
  2731                           ;can.c: 38: BRGCON2bits.SEG2PHTS = 1;
  2732  01770E  8E71               	bsf	3953,7,c	;volatile
  2733                           
  2734                           ;can.c: 39: BRGCON2bits.SAM = 1;
  2735  017710  8C71               	bsf	3953,6,c	;volatile
  2736                           
  2737                           ;can.c: 40: BRGCON2bits.SEG1PH2 = 0;
  2738  017712  9A71               	bcf	3953,5,c	;volatile
  2739                           
  2740                           ;can.c: 41: BRGCON2bits.SEG1PH1 = 0;
  2741  017714  9871               	bcf	3953,4,c	;volatile
  2742                           
  2743                           ;can.c: 42: BRGCON2bits.SEG1PH0 = 1;
  2744  017716  8671               	bsf	3953,3,c	;volatile
  2745                           
  2746                           ;can.c: 43: BRGCON2bits.PRSEG2 = 0;
  2747  017718  9471               	bcf	3953,2,c	;volatile
  2748                           
  2749                           ;can.c: 44: BRGCON2bits.PRSEG1 = 1;
  2750  01771A  8271               	bsf	3953,1,c	;volatile
  2751                           
  2752                           ;can.c: 45: BRGCON2bits.PRSEG0 = 0;
  2753  01771C  9071               	bcf	3953,0,c	;volatile
  2754                           
  2755                           ;can.c: 49: BRGCON3bits.SEG2PH2 = 0;
  2756  01771E  9472               	bcf	3954,2,c	;volatile
  2757                           
  2758                           ;can.c: 50: BRGCON3bits. SEG2PH1 = 0;
  2759  017720  9272               	bcf	3954,1,c	;volatile
  2760                           
  2761                           ;can.c: 51: BRGCON3bits. SEG2PH0 = 1;
  2762  017722  8072               	bsf	3954,0,c	;volatile
  2763                           
  2764                           ;can.c: 54: ECANCONbits.MDSEL1 = 0;
  2765  017724  9E77               	bcf	3959,7,c	;volatile
  2766                           
  2767                           ;can.c: 55: ECANCONbits.MDSEL0 = 0;
  2768  017726  9C77               	bcf	3959,6,c	;volatile
  2769                           
  2770                           ;can.c: 62: RXB0CONbits.RXM1 = 0;
  2771  017728  9C60               	bcf	3936,6,c	;volatile
  2772                           
  2773                           ;can.c: 63: RXB0CONbits.RXM0 = 1;
  2774  01772A  8A60               	bsf	3936,5,c	;volatile
  2775                           
  2776                           ;can.c: 78: short sid0 = 0x00A;
  2777  01772C  0E00               	movlw	0
  2778  01772E  6E04               	movwf	ecan_init@sid0+1,c
  2779  017730  0E0A               	movlw	10
  2780  017732  6E03               	movwf	ecan_init@sid0,c
  2781                           
  2782                           ;can.c: 79: short mask0 = 0x7FF;
  2783  017734  0E07               	movlw	7
  2784  017736  6E06               	movwf	ecan_init@mask0+1,c
  2785  017738  6805               	setf	ecan_init@mask0,c
  2786                           
  2787                           ;can.c: 81: RXF0SIDH = sid0 >> 3;
  2788  01773A  C003  F001         	movff	ecan_init@sid0,??_ecan_init
  2789  01773E  C004  F002         	movff	ecan_init@sid0+1,??_ecan_init+1
  2790  017742  3402               	rlcf	??_ecan_init+1,w,c
  2791  017744  3202               	rrcf	??_ecan_init+1,f,c
  2792  017746  3201               	rrcf	??_ecan_init,f,c
  2793  017748  3402               	rlcf	??_ecan_init+1,w,c
  2794  01774A  3202               	rrcf	??_ecan_init+1,f,c
  2795  01774C  3201               	rrcf	??_ecan_init,f,c
  2796  01774E  3402               	rlcf	??_ecan_init+1,w,c
  2797  017750  3202               	rrcf	??_ecan_init+1,f,c
  2798  017752  3201               	rrcf	??_ecan_init,f,c
  2799  017754  5001               	movf	??_ecan_init,w,c
  2800  017756  010F               	movlb	15	; () banked
  2801  017758  6F00               	movwf	0,b	;volatile
  2802                           
  2803                           ; BSR set to: 15
  2804                           ;can.c: 82: RXF0SIDL = sid0 << 5;
  2805  01775A  3803               	swapf	ecan_init@sid0,w,c
  2806  01775C  46E8               	rlncf	wreg,f,c
  2807  01775E  0BE0               	andlw	224
  2808  017760  010F               	movlb	15	; () banked
  2809  017762  6F01               	movwf	1,b	;volatile
  2810                           
  2811                           ; BSR set to: 15
  2812                           ;can.c: 83: RXM0SIDH = mask0 >> 3;
  2813  017764  C005  F001         	movff	ecan_init@mask0,??_ecan_init
  2814  017768  C006  F002         	movff	ecan_init@mask0+1,??_ecan_init+1
  2815  01776C  3402               	rlcf	??_ecan_init+1,w,c
  2816  01776E  3202               	rrcf	??_ecan_init+1,f,c
  2817  017770  3201               	rrcf	??_ecan_init,f,c
  2818  017772  3402               	rlcf	??_ecan_init+1,w,c
  2819  017774  3202               	rrcf	??_ecan_init+1,f,c
  2820  017776  3201               	rrcf	??_ecan_init,f,c
  2821  017778  3402               	rlcf	??_ecan_init+1,w,c
  2822  01777A  3202               	rrcf	??_ecan_init+1,f,c
  2823  01777C  3201               	rrcf	??_ecan_init,f,c
  2824  01777E  5001               	movf	??_ecan_init,w,c
  2825  017780  010F               	movlb	15	; () banked
  2826  017782  6F18               	movwf	24,b	;volatile
  2827                           
  2828                           ; BSR set to: 15
  2829                           ;can.c: 84: RXM0SIDL = mask0 << 5;
  2830  017784  3805               	swapf	ecan_init@mask0,w,c
  2831  017786  46E8               	rlncf	wreg,f,c
  2832  017788  0BE0               	andlw	224
  2833  01778A  010F               	movlb	15	; () banked
  2834  01778C  6F19               	movwf	25,b	;volatile
  2835                           
  2836                           ; BSR set to: 15
  2837                           ;can.c: 85: RXF0SIDLbits.EXIDEN = 0;
  2838  01778E  010F               	movlb	15	; () banked
  2839  017790  9701               	bcf	1,3,b	;volatile
  2840                           
  2841                           ; BSR set to: 15
  2842                           ;can.c: 86: RXFCON0bits.RXF0EN = 1;
  2843  017792  010D               	movlb	13	; () banked
  2844  017794  81D4               	bsf	212,0,b	;volatile
  2845                           
  2846                           ; BSR set to: 13
  2847                           ;can.c: 104: CANCONbits.REQOP2 = 0;
  2848  017796  9E6F               	bcf	3951,7,c	;volatile
  2849                           
  2850                           ; BSR set to: 13
  2851                           ;can.c: 105: CANCONbits.REQOP1 = 0;
  2852  017798  9C6F               	bcf	3951,6,c	;volatile
  2853                           
  2854                           ; BSR set to: 13
  2855                           ;can.c: 106: CANCONbits.REQOP0 = 0;
  2856  01779A  9A6F               	bcf	3951,5,c	;volatile
  2857  01779C                     l241:
  2858  01779C  AE6E               	btfss	3950,7,c	;volatile
  2859  01779E  0012               	return	
  2860  0177A0  AC6E               	btfss	3950,6,c	;volatile
  2861  0177A2  0012               	return	
  2862  0177A4  AA6E               	btfss	3950,5,c	;volatile
  2863  0177A6  0012               	return	
  2864  0177A8  D7F9               	goto	l241
  2865  0177AA                     __end_of_ecan_init:
  2866                           	opt stack 0
  2867                           tblptru	equ	0xFF8
  2868                           tblptrh	equ	0xFF7
  2869                           tblptrl	equ	0xFF6
  2870                           tablat	equ	0xFF5
  2871                           postinc0	equ	0xFEE
  2872                           wreg	equ	0xFE8
  2873                           postdec1	equ	0xFE5
  2874                           fsr1l	equ	0xFE1
  2875                           indf2	equ	0xFDF
  2876                           postinc2	equ	0xFDE
  2877                           postdec2	equ	0xFDD
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _ConfigureOscillator *****************
  2883 ;; Defined at:
  2884 ;;		line 24 in file "config.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		None
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;Total ram usage:        0 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text17
  2912  01763A                     __ptext17:
  2913                           	opt stack 0
  2914  01763A                     _ConfigureOscillator:
  2915                           	opt stack 30
  2916                           
  2917                           ;config.c: 29: OSCCONbits.IRCF2 = 1;
  2918                           
  2919                           ;incstack = 0
  2920  01763A  8CD3               	bsf	4051,6,c	;volatile
  2921                           
  2922                           ;config.c: 30: OSCCONbits.IRCF1 = 1;
  2923  01763C  8AD3               	bsf	4051,5,c	;volatile
  2924                           
  2925                           ;config.c: 31: OSCCONbits.IRCF0 = 1;
  2926  01763E  88D3               	bsf	4051,4,c	;volatile
  2927                           
  2928                           ;config.c: 33: OSCCONbits.SCS1 = 0;
  2929  017640  92D3               	bcf	4051,1,c	;volatile
  2930                           
  2931                           ;config.c: 34: OSCCONbits.SCS0 = 0;
  2932  017642  90D3               	bcf	4051,0,c	;volatile
  2933                           
  2934                           ;config.c: 36: OSCTUNEbits.PLLEN = 1;
  2935  017644  8C9B               	bsf	3995,6,c	;volatile
  2936  017646  0012               	return		;funcret
  2937  017648                     __end_of_ConfigureOscillator:
  2938                           	opt stack 0
  2939  0000                     tblptru	equ	0xFF8
  2940                           tblptrh	equ	0xFF7
  2941                           tblptrl	equ	0xFF6
  2942                           tablat	equ	0xFF5
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           postdec1	equ	0xFE5
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           postdec1	equ	0xFE5
  2960                           fsr1l	equ	0xFE1
  2961                           indf2	equ	0xFDF
  2962                           postinc2	equ	0xFDE
  2963                           postdec2	equ	0xFDD
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968                           	psect	rparam
  2969  0000                     tblptru	equ	0xFF8
  2970                           tblptrh	equ	0xFF7
  2971                           tblptrl	equ	0xFF6
  2972                           tablat	equ	0xFF5
  2973                           postinc0	equ	0xFEE
  2974                           wreg	equ	0xFE8
  2975                           postdec1	equ	0xFE5
  2976                           fsr1l	equ	0xFE1
  2977                           indf2	equ	0xFDF
  2978                           postinc2	equ	0xFDE
  2979                           postdec2	equ	0xFDD
  2980                           fsr2h	equ	0xFDA
  2981                           fsr2l	equ	0xFD9
  2982                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    speedCheck@marginSlow	PTR int  size(2) Largest target is 2
		 -> margin4(COMRAM[2]), margin3(COMRAM[2]), 

    speedCheck@marginFast	PTR int  size(2) Largest target is 2
		 -> margin6(COMRAM[2]), margin1(COMRAM[2]), 

    movement@margin	PTR int  size(2) Largest target is 2
		 -> margin6(COMRAM[2]), margin5(COMRAM[2]), margin4(COMRAM[2]), margin3(COMRAM[2]), 
		 -> margin2(COMRAM[2]), margin1(COMRAM[2]), margin0(COMRAM[2]), 

    ecan_receive_rxb0@mess	PTR struct Message size(2) Largest target is 11
		 -> main@newMessage(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_movement

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0    8647
                                             14 COMRAM    31    31      0
                _ConfigureOscillator
                          _ecan_init
                  _ecan_receive_rxb0
                    _ecan_rxb0_clear
                           _movement
                            _readADC
                          _selectAN0
                          _selectAN1
                          _selectAN2
                          _selectAN3
                          _selectAN4
                          _selectAN5
                          _selectAN6
                          _selectAN7
                   _setActuatorCntrl
                        _setAnalogIn
                         _speedCheck
 ---------------------------------------------------------------------------------
 (1) _speedCheck                                          12     2     10    1036
                                              0 COMRAM    12     2     10
 ---------------------------------------------------------------------------------
 (1) _setAnalogIn                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setActuatorCntrl                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN7                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN6                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN5                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _movement                                            14     6      8    6044
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ecan_rxb0_clear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ecan_receive_rxb0                                    4     2      2     306
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ecan_init                                            6     6      0      60
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _ecan_init
   _ecan_receive_rxb0
   _ecan_rxb0_clear
   _movement
   _readADC
   _selectAN0
   _selectAN1
   _selectAN2
   _selectAN3
   _selectAN4
   _selectAN5
   _selectAN6
   _selectAN7
   _setActuatorCntrl
   _setAnalogIn
   _speedCheck

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      43       1       70.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      20        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Mar 12 00:22:53 2016

                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                   __CFG_LVP$ON 000000                           l240 76FC  
                         l128 764A                           l241 779C                           l236 76F2  
                         l439 79B8                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         wreg 000FE8                  __CFG_WDT$OFF 000000                          l1601 7A4E  
                        l1621 7AEC                          l1613 7AAC                          l1605 7A6C  
                        l1625 7B0C                          l1617 7ACC                          l1609 7A8C  
                        l1571 7920                          l1731 7DF8                          l1725 7C96  
                        l1591 79FE                          l1567 78DC                          l1577 7972  
                        l1737 7F02                          l1657 7B8C                          l1587 79E6  
                        l1595 7A20                          l1691 7C0A                          l1683 7BEC  
                        l1597 7A30                          l1693 7C0E                          l1687 7BFA  
                        _BACK 0030                          u1015 7866                          u1205 7A88  
                        u1206 7A8A                          u1135 7A40                          u1136 7A42  
                        u1225 7A9E                          u1145 7A4A                          u1226 7AA0  
                        u1146 7A4C                          u1315 7AFE                          u1235 7AA8  
                        u1316 7B00                          u1236 7AAA                          u1325 7B08  
                        u1165 7A5E                          u1326 7B0A                          u1166 7A60  
                        u1255 7ABE                          u1175 7A68                          u1256 7AC0  
                        u1176 7A6A                          u1345 7B1E                          u1265 7AC8  
                        u1346 7B20                          u1266 7ACA                          u1355 7B28  
                        u1195 7A7E                          u1356 7B2A                          u1196 7A80  
                        u1285 7ADE                          u1286 7AE0                          u1295 7AE8  
                        u1296 7AEA                          _FORW 0031                          _main 7B2C  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          start 0000                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010       __end_of_ecan_rxb0_clear 75E6  
                       ?_main 0001           _ConfigureOscillator 763A                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                 __CFG_WRT5$OFF 000000  
    __end_of_setActuatorCntrl 7686                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
              __CFG_EBTR4$OFF 000000                __CFG_EBTR5$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000               __end_of_readADC 7662  
              __CFG_EBTRB$OFF 000000                         tablat 000FF5                         status 000FD8  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 7686  
                ?_setAnalogIn 0001                  __end_of_main 8000                 main@actuator0 0011  
               main@actuator1 0017                 main@actuator2 0013                 main@actuator3 0019  
               main@actuator4 001B                 main@actuator5 0015                 main@actuator6 001D  
               main@actuator7 000F                        ??_main 000F                 __activetblptr 000000  
                      _ADRESH 000FC4                        _ADRESL 000FC3               __CFG_BBSIZ$1024 000000  
         speedCheck@set_point 0005                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB0D4 000F4A                        _TXB0D5 000F4B                        _TXB0D6 000F4C  
                      _TXB0D7 000F4D         ??_ConfigureOscillator 0001              movement@actuator 0005  
              __CFG_XINST$OFF 000000                 main@extendPos 002C                __CFG_STVREN$ON 000000  
            ?_ecan_rxb0_clear 0001                        clear_0 768C                     ??_readADC 0003  
             __CFG_BOREN$BOHW 000000                 ecan_init@sid0 0003                  __pdataCOMRAM 0040  
            __end_of_movement 7B2C                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 76B2  
               ___rparam_used 000001                __pcstackCOMRAM 0001            __size_of_ecan_init 00BE  
        speedCheck@marginFast 0009          speedCheck@marginSlow 0007            __size_of_selectAN0 000A  
          __size_of_selectAN1 000A            __size_of_selectAN2 000A            __size_of_selectAN3 000A  
          __size_of_selectAN4 000A            __size_of_selectAN5 000A            __size_of_selectAN6 000A  
          __size_of_selectAN7 000A          __size_of_setAnalogIn 0034                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55             ?_setActuatorCntrl 0001                       _TXB0DLC 000F45  
           __end_of_ecan_init 77AA            ??_setActuatorCntrl 0001                main@newMessage 0021  
                     __Hparam 0000                       __Lparam 0000                     ?_movement 0001  
                     __pcinit 7686                       __ramtop 0D00                       __ptext0 7B2C  
                     __ptext1 788C                       __ptext2 76B8                       __ptext3 7662  
                     __ptext4 7630                       __ptext5 7626                       __ptext6 761C  
                     __ptext7 7612                       __ptext8 7608                       __ptext9 75FE  
                     _readADC 7648                       _margin0 0032                       _margin1 0034  
                     _margin2 0036                       _margin3 0038                       _margin4 003A  
                     _margin5 003C                       _margin6 003E                       _margin7 002E  
              main@retractPos 001F             __end_of_selectAN0 75F4             __end_of_selectAN1 75FE  
           __end_of_selectAN2 7608             __end_of_selectAN3 7612          end_of_initialization 76B2  
           __end_of_selectAN4 761C             __end_of_selectAN5 7626             __end_of_selectAN6 7630  
           __end_of_selectAN7 763A                ecan_init@mask0 0005             movement@set_point 0003  
                  ??_movement 0009                       postdec1 000FE5                       postdec2 000FDD  
                  _retractPos 0042                       postinc0 000FEE                       postinc2 000FDE  
                  _speedCheck 788C                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
 __end_of_ConfigureOscillator 7648             readADC@digitalVal 0003                 __pidataCOMRAM 75E6  
                 _ECANCONbits 000F77                movement@margin 0007      __size_of_ecan_rxb0_clear 0004  
         start_initialization 7686                   _CANSTATbits 000F6E              __CFG_OSC$IRCIO67 000000  
                 ?_speedCheck 0001              __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 002E  
                 _BRGCON1bits 000F70                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
                   _ecan_init 76EC     __size_of_setActuatorCntrl 0024                 ??_setAnalogIn 0001  
           __size_of_movement 0172                      ?_readADC 0001           __size_of_speedCheck 012E  
           ??_ecan_rxb0_clear 0001                     _extendPos 0040                      _LATAbits 000F89  
                    _LATCbits 000F8B                      _LATDbits 000F8C                    ?_ecan_init 0001  
                   _selectAN0 75EA                     _selectAN1 75F4                     _selectAN2 75FE  
                   _selectAN3 7608                     _selectAN4 7612                     _selectAN5 761C  
                   _selectAN6 7626                     _selectAN7 7630                      _PIE3bits 000FA3  
         movement@current_pos 0001                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXB1SIDH 000F51  
                    _RXB1SIDL 000F52                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
                    _TXB0SIDH 000F41                      _TXB0SIDL 000F42                      _RXM0SIDH 000F18  
                    _RXM0SIDL 000F19           __end_of_setAnalogIn 76EC                    _ADCON0bits 000FC2  
                  _ADCON1bits 000FC1                    _ADCON2bits 000FC0             _ecan_receive_rxb0 77AA  
                   copy_data0 76A6                    _CANCONbits 000F6F                 movement@move0 000B  
               movement@move1 000D            ?_ecan_receive_rxb0 0001                    ?_selectAN0 0001  
                  ?_selectAN1 0001                    ?_selectAN2 0001                    ?_selectAN3 0001  
                  ?_selectAN4 0001                    ?_selectAN5 0001                    ?_selectAN6 0001  
                  ?_selectAN7 0001                      __Hrparam 0000           ??_ecan_receive_rxb0 0003  
                    __Lrparam 0000                    _CIOCONbits 000F73              __size_of_readADC 001A  
                _RXF0SIDLbits 000F01     __end_of_ecan_receive_rxb0 788C        speedCheck@actuatorFast 0003  
      speedCheck@actuatorSlow 0001                      __ptext10 75F4                      __ptext11 75EA  
                    __ptext12 7648                      __ptext13 79BA                      __ptext14 75E2  
                    __ptext15 77AA                      __ptext16 76EC                      __ptext17 763A  
               __size_of_main 04D4                   ??_ecan_init 0001  __size_of_ConfigureOscillator 000E  
                _TXB0SIDLbits 000F42              _setActuatorCntrl 7662                      _movement 79BA  
                 _setAnalogIn 76B8                  ??_speedCheck 000B                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50                   _OSCTUNEbits 000F9B                    _INTCONbits 000FF2  
          __end_of_speedCheck 79BA                   ??_selectAN0 0001                   ??_selectAN1 0001  
                 ??_selectAN2 0001                   ??_selectAN3 0001                   ??_selectAN4 0001  
                 ??_selectAN5 0001                   ??_selectAN6 0001                   ??_selectAN7 0001  
                 _TXB0CONbits 000F40                    _OSCCONbits 000FD3         ecan_receive_rxb0@mess 0001  
                 _RXFCON0bits 000DD4               _ecan_rxb0_clear 75E2    __size_of_ecan_receive_rxb0 00E2  
