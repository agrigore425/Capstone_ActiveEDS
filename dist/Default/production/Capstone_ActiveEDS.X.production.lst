

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 10 07:49:36 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	idataCOMRAM
    31  017734                     __pidataCOMRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for _extendPos
    35  017734  0320               	dw	800
    36                           
    37                           ;initializer for _retractPos
    38  017736  00C8               	dw	200
    39  0000                     _RXFCON0bits	set	3540
    40  0000                     _RXB1CONbits	set	3920
    41  0000                     _RXB1D0	set	3926
    42  0000                     _RXB1D1	set	3927
    43  0000                     _RXB1D2	set	3928
    44  0000                     _RXB1D3	set	3929
    45  0000                     _RXB1D4	set	3930
    46  0000                     _RXB1D5	set	3931
    47  0000                     _RXB1D6	set	3932
    48  0000                     _RXB1D7	set	3933
    49  0000                     _RXB1SIDH	set	3921
    50  0000                     _RXB1SIDL	set	3922
    51  0000                     _RXF0SIDH	set	3840
    52  0000                     _RXF0SIDL	set	3841
    53  0000                     _RXF0SIDLbits	set	3841
    54  0000                     _RXM0SIDH	set	3864
    55  0000                     _RXM0SIDL	set	3865
    56  0000                     _TXB0CONbits	set	3904
    57  0000                     _TXB0D0	set	3910
    58  0000                     _TXB0D1	set	3911
    59  0000                     _TXB0D2	set	3912
    60  0000                     _TXB0D3	set	3913
    61  0000                     _TXB0D4	set	3914
    62  0000                     _TXB0D5	set	3915
    63  0000                     _TXB0D6	set	3916
    64  0000                     _TXB0D7	set	3917
    65  0000                     _TXB0DLC	set	3909
    66  0000                     _TXB0SIDH	set	3905
    67  0000                     _TXB0SIDL	set	3906
    68  0000                     _TXB0SIDLbits	set	3906
    69  0000                     _RXB1DLC	set	3925
    70  0000                     _ADCON0bits	set	4034
    71  0000                     _ADCON1bits	set	4033
    72  0000                     _ADCON2bits	set	4032
    73  0000                     _ADRESH	set	4036
    74  0000                     _ADRESL	set	4035
    75  0000                     _BRGCON1bits	set	3952
    76  0000                     _BRGCON2bits	set	3953
    77  0000                     _BRGCON3bits	set	3954
    78  0000                     _CANCONbits	set	3951
    79  0000                     _CANSTATbits	set	3950
    80  0000                     _CIOCONbits	set	3955
    81  0000                     _ECANCONbits	set	3959
    82  0000                     _INTCONbits	set	4082
    83  0000                     _LATAbits	set	3977
    84  0000                     _LATCbits	set	3979
    85  0000                     _LATDbits	set	3980
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _OSCTUNEbits	set	3995
    88  0000                     _PIE3bits	set	4003
    89  0000                     _RCONbits	set	4048
    90  0000                     _RXB0CONbits	set	3936
    91  0000                     _RXB0D0	set	3942
    92  0000                     _RXB0D1	set	3943
    93  0000                     _RXB0D2	set	3944
    94  0000                     _RXB0D3	set	3945
    95  0000                     _RXB0D4	set	3946
    96  0000                     _RXB0D5	set	3947
    97  0000                     _RXB0D6	set	3948
    98  0000                     _RXB0D7	set	3949
    99  0000                     _RXB0SIDH	set	3937
   100  0000                     _RXB0SIDL	set	3938
   101  0000                     _TRISAbits	set	3986
   102  0000                     _TRISBbits	set	3987
   103  0000                     _TRISCbits	set	3988
   104  0000                     _TRISDbits	set	3989
   105  0000                     _TRISEbits	set	3990
   106  0000                     _RXB0DLC	set	3941
   107                           
   108                           ; #config settings
   109  0000                     
   110                           	psect	cinit
   111  0177D4                     __pcinit:
   112                           	opt stack 0
   113  0177D4                     start_initialization:
   114                           	opt stack 0
   115  0177D4                     __initialization:
   116                           	opt stack 0
   117                           
   118                           ; Clear objects allocated to COMRAM (18 bytes)
   119  0177D4  EE00  F02E         	lfsr	0,__pbssCOMRAM
   120  0177D8  0E12               	movlw	18
   121  0177DA                     clear_0:
   122  0177DA  6AEE               	clrf	postinc0,c
   123  0177DC  06E8               	decf	wreg,f,c
   124  0177DE  E1FD               	bnz	clear_0
   125                           
   126                           ; Initialize objects allocated to COMRAM (4 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  0177E0  0E34               	movlw	low __pidataCOMRAM
   129  0177E2  6EF6               	movwf	tblptrl,c
   130  0177E4  0E77               	movlw	high __pidataCOMRAM
   131  0177E6  6EF7               	movwf	tblptrh,c
   132  0177E8  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   133  0177EA  6EF8               	movwf	tblptru,c
   134  0177EC  EE00  F040         	lfsr	0,__pdataCOMRAM
   135  0177F0  EE10 F004          	lfsr	1,4
   136  0177F4                     copy_data0:
   137  0177F4  0009               	tblrd		*+
   138  0177F6  CFF5 FFEE          	movff	tablat,postinc0
   139  0177FA  50E5               	movf	postdec1,w,c
   140  0177FC  50E1               	movf	fsr1l,w,c
   141  0177FE  E1FA               	bnz	copy_data0
   142  017800                     end_of_initialization:
   143                           	opt stack 0
   144  017800                     __end_of__initialization:
   145                           	opt stack 0
   146  017800  0100               	movlb	0
   147  017802  EFA6  F0BD         	goto	_main	;jump to C main() function
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           postdec1	equ	0xFE5
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	bssCOMRAM
   158  00002E                     __pbssCOMRAM:
   159                           	opt stack 0
   160  00002E                     _margin7:
   161                           	opt stack 0
   162  00002E                     	ds	2
   163  000030                     _BACK:
   164                           	opt stack 0
   165  000030                     	ds	1
   166  000031                     _FORW:
   167                           	opt stack 0
   168  000031                     	ds	1
   169  000032                     _margin0:
   170                           	opt stack 0
   171  000032                     	ds	2
   172  000034                     _margin1:
   173                           	opt stack 0
   174  000034                     	ds	2
   175  000036                     _margin2:
   176                           	opt stack 0
   177  000036                     	ds	2
   178  000038                     _margin3:
   179                           	opt stack 0
   180  000038                     	ds	2
   181  00003A                     _margin4:
   182                           	opt stack 0
   183  00003A                     	ds	2
   184  00003C                     _margin5:
   185                           	opt stack 0
   186  00003C                     	ds	2
   187  00003E                     _margin6:
   188                           	opt stack 0
   189  00003E                     	ds	2
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	dataCOMRAM
   200  000040                     __pdataCOMRAM:
   201                           	opt stack 0
   202  000040                     _extendPos:
   203                           	opt stack 0
   204  000040                     	ds	2
   205  000042                     _retractPos:
   206                           	opt stack 0
   207  000042                     	ds	2
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           postdec1	equ	0xFE5
   215                           fsr1l	equ	0xFE1
   216                           
   217                           	psect	cstackCOMRAM
   218  000001                     __pcstackCOMRAM:
   219                           	opt stack 0
   220  000001                     ??_ecan_init:
   221  000001                     ?_readADC:
   222                           	opt stack 0
   223  000001                     ecan_receive_rxb0@mess:
   224                           	opt stack 0
   225  000001                     movement@current_pos:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x0
   229  000001                     	ds	2
   230  000003                     ??_ecan_receive_rxb0:
   231  000003                     readADC@digitalVal:
   232                           	opt stack 0
   233  000003                     ecan_init@sid0:
   234                           	opt stack 0
   235  000003                     movement@set_point:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x2
   239  000003                     	ds	2
   240  000005                     ecan_init@mask0:
   241                           	opt stack 0
   242  000005                     movement@actuator:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  000005                     	ds	2
   247  000007                     movement@margin:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x6
   251  000007                     	ds	2
   252  000009                     
   253                           ; 1 bytes @ 0x8
   254  000009                     	ds	2
   255  00000B                     movement@move0:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0xA
   259  00000B                     	ds	2
   260  00000D                     movement@move1:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0xC
   264  00000D                     	ds	2
   265  00000F                     main@actuator7:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xE
   269  00000F                     	ds	2
   270  000011                     main@actuator0:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x10
   274  000011                     	ds	2
   275  000013                     main@actuator1:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x12
   279  000013                     	ds	2
   280  000015                     main@actuator2:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x14
   284  000015                     	ds	2
   285  000017                     main@actuator3:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x16
   289  000017                     	ds	2
   290  000019                     main@actuator4:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x18
   294  000019                     	ds	2
   295  00001B                     main@actuator5:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x1A
   299  00001B                     	ds	2
   300  00001D                     main@actuator6:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x1C
   304  00001D                     	ds	2
   305  00001F                     main@retractPos:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x1E
   309  00001F                     	ds	2
   310  000021                     main@newMessage:
   311                           	opt stack 0
   312                           
   313                           ; 11 bytes @ 0x20
   314  000021                     	ds	11
   315  00002C                     main@extendPos:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x2B
   319  00002C                     	ds	2
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 53 in file "main.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  newMessage     11   32[COMRAM] struct Message
   339 ;;  extendPos       2   43[COMRAM] unsigned int 
   340 ;;  retractPos      2   30[COMRAM] unsigned int 
   341 ;;  actuator6       2   28[COMRAM] unsigned int 
   342 ;;  actuator5       2   26[COMRAM] unsigned int 
   343 ;;  actuator4       2   24[COMRAM] unsigned int 
   344 ;;  actuator3       2   22[COMRAM] unsigned int 
   345 ;;  actuator2       2   20[COMRAM] unsigned int 
   346 ;;  actuator1       2   18[COMRAM] unsigned int 
   347 ;;  actuator0       2   16[COMRAM] unsigned int 
   348 ;;  actuator7       2   14[COMRAM] unsigned int 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   359 ;;      Locals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   361 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   362 ;;Total ram usage:       31 bytes
   363 ;; Hardware stack levels required when called:    1
   364 ;; This function calls:
   365 ;;		_ConfigureOscillator
   366 ;;		_ecan_init
   367 ;;		_ecan_receive_rxb0
   368 ;;		_ecan_rxb0_clear
   369 ;;		_movement
   370 ;;		_readADC
   371 ;;		_selectAN0
   372 ;;		_selectAN1
   373 ;;		_selectAN2
   374 ;;		_selectAN3
   375 ;;		_selectAN4
   376 ;;		_selectAN5
   377 ;;		_selectAN6
   378 ;;		_selectAN7
   379 ;;		_setActuatorCntrl
   380 ;;		_setAnalogIn
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text0
   387  017B4C                     __ptext0:
   388                           	opt stack 0
   389  017B4C                     _main:
   390                           	opt stack 30
   391                           
   392                           ;main.c: 56: ConfigureOscillator();
   393                           
   394                           ;incstack = 0
   395  017B4C  ECC4  F0BB         	call	_ConfigureOscillator	;wreg free
   396                           
   397                           ;main.c: 57: ecan_init();
   398  017B50  EC1D  F0BC         	call	_ecan_init	;wreg free
   399                           
   400                           ;main.c: 61: setAnalogIn();
   401  017B54  EC03  F0BC         	call	_setAnalogIn	;wreg free
   402                           
   403                           ;main.c: 62: setActuatorCntrl();
   404  017B58  ECD8  F0BB         	call	_setActuatorCntrl	;wreg free
   405                           
   406                           ;main.c: 63: unsigned int actuator0 = 0;
   407  017B5C  0E00               	movlw	0
   408  017B5E  6E12               	movwf	main@actuator0+1,c
   409  017B60  0E00               	movlw	0
   410  017B62  6E11               	movwf	main@actuator0,c
   411                           
   412                           ;main.c: 64: unsigned int actuator1 = 0;
   413  017B64  0E00               	movlw	0
   414  017B66  6E14               	movwf	main@actuator1+1,c
   415  017B68  0E00               	movlw	0
   416  017B6A  6E13               	movwf	main@actuator1,c
   417                           
   418                           ;main.c: 65: unsigned int actuator2 = 0;
   419  017B6C  0E00               	movlw	0
   420  017B6E  6E16               	movwf	main@actuator2+1,c
   421  017B70  0E00               	movlw	0
   422  017B72  6E15               	movwf	main@actuator2,c
   423                           
   424                           ;main.c: 66: unsigned int actuator3 = 0;
   425  017B74  0E00               	movlw	0
   426  017B76  6E18               	movwf	main@actuator3+1,c
   427  017B78  0E00               	movlw	0
   428  017B7A  6E17               	movwf	main@actuator3,c
   429                           
   430                           ;main.c: 67: unsigned int actuator4 = 0;
   431  017B7C  0E00               	movlw	0
   432  017B7E  6E1A               	movwf	main@actuator4+1,c
   433  017B80  0E00               	movlw	0
   434  017B82  6E19               	movwf	main@actuator4,c
   435                           
   436                           ;main.c: 68: unsigned int actuator5 = 0;
   437  017B84  0E00               	movlw	0
   438  017B86  6E1C               	movwf	main@actuator5+1,c
   439  017B88  0E00               	movlw	0
   440  017B8A  6E1B               	movwf	main@actuator5,c
   441                           
   442                           ;main.c: 69: unsigned int actuator6 = 0;
   443  017B8C  0E00               	movlw	0
   444  017B8E  6E1E               	movwf	main@actuator6+1,c
   445  017B90  0E00               	movlw	0
   446  017B92  6E1D               	movwf	main@actuator6,c
   447                           
   448                           ;main.c: 70: unsigned int actuator7 = 0;
   449  017B94  0E00               	movlw	0
   450  017B96  6E10               	movwf	main@actuator7+1,c
   451  017B98  0E00               	movlw	0
   452  017B9A  6E0F               	movwf	main@actuator7,c
   453                           
   454                           ;main.c: 73: unsigned int retractPos = 200;
   455  017B9C  0E00               	movlw	0
   456  017B9E  6E20               	movwf	main@retractPos+1,c
   457  017BA0  0EC8               	movlw	200
   458  017BA2  6E1F               	movwf	main@retractPos,c
   459                           
   460                           ;main.c: 74: unsigned int extendPos = 800;
   461  017BA4  0E03               	movlw	3
   462  017BA6  6E2D               	movwf	main@extendPos+1,c
   463  017BA8  0E20               	movlw	32
   464  017BAA  6E2C               	movwf	main@extendPos,c
   465  017BAC                     l1614:
   466                           
   467                           ;main.c: 77: {
   468                           ;main.c: 78: if(RXB0CONbits.RXB0FUL)
   469  017BAC  AE60               	btfss	3936,7,c	;volatile
   470  017BAE  D03F               	goto	l1650
   471                           
   472                           ;main.c: 79: {
   473                           ;main.c: 80: Message newMessage;
   474                           ;main.c: 81: ecan_receive_rxb0(&newMessage);
   475  017BB0  0E21               	movlw	low main@newMessage
   476  017BB2  6E01               	movwf	ecan_receive_rxb0@mess,c
   477  017BB4  0E00               	movlw	high main@newMessage
   478  017BB6  6E02               	movwf	ecan_receive_rxb0@mess+1,c
   479  017BB8  EC7C  F0BC         	call	_ecan_receive_rxb0	;wreg free
   480                           
   481                           ;main.c: 83: margin0 = 0;
   482  017BBC  0E00               	movlw	0
   483  017BBE  6E33               	movwf	_margin0+1,c
   484  017BC0  0E00               	movlw	0
   485  017BC2  6E32               	movwf	_margin0,c
   486                           
   487                           ;main.c: 84: margin1 = 0;
   488  017BC4  0E00               	movlw	0
   489  017BC6  6E35               	movwf	_margin1+1,c
   490  017BC8  0E00               	movlw	0
   491  017BCA  6E34               	movwf	_margin1,c
   492                           
   493                           ;main.c: 85: margin2 = 0;
   494  017BCC  0E00               	movlw	0
   495  017BCE  6E37               	movwf	_margin2+1,c
   496  017BD0  0E00               	movlw	0
   497  017BD2  6E36               	movwf	_margin2,c
   498                           
   499                           ;main.c: 86: margin3 = 0;
   500  017BD4  0E00               	movlw	0
   501  017BD6  6E39               	movwf	_margin3+1,c
   502  017BD8  0E00               	movlw	0
   503  017BDA  6E38               	movwf	_margin3,c
   504                           
   505                           ;main.c: 87: margin4 = 0;
   506  017BDC  0E00               	movlw	0
   507  017BDE  6E3B               	movwf	_margin4+1,c
   508  017BE0  0E00               	movlw	0
   509  017BE2  6E3A               	movwf	_margin4,c
   510                           
   511                           ;main.c: 88: margin5 = 0;
   512  017BE4  0E00               	movlw	0
   513  017BE6  6E3D               	movwf	_margin5+1,c
   514  017BE8  0E00               	movlw	0
   515  017BEA  6E3C               	movwf	_margin5,c
   516                           
   517                           ;main.c: 89: margin6 = 0;
   518  017BEC  0E00               	movlw	0
   519  017BEE  6E3F               	movwf	_margin6+1,c
   520  017BF0  0E00               	movlw	0
   521  017BF2  6E3E               	movwf	_margin6,c
   522                           
   523                           ;main.c: 90: margin7 = 0;
   524  017BF4  0E00               	movlw	0
   525  017BF6  6E2F               	movwf	_margin7+1,c
   526  017BF8  0E00               	movlw	0
   527  017BFA  6E2E               	movwf	_margin7,c
   528                           
   529                           ;main.c: 92: LATAbits.LATA7 ^= 1;
   530  017BFC  7E89               	btg	3977,7,c	;volatile
   531                           
   532                           ;main.c: 100: if (newMessage.data[0] == 0x00)
   533  017BFE  5021               	movf	main@newMessage,w,c
   534  017C00  A4D8               	btfss	status,2,c
   535  017C02  D004               	goto	l1640
   536                           
   537                           ;main.c: 101: {
   538                           ;main.c: 102: FORW = 0;
   539  017C04  0E00               	movlw	0
   540  017C06  6E31               	movwf	_FORW,c
   541                           
   542                           ;main.c: 103: BACK = 0;
   543  017C08  0E00               	movlw	0
   544  017C0A  6E30               	movwf	_BACK,c
   545  017C0C                     l1640:
   546                           
   547                           ;main.c: 104: }
   548                           ;main.c: 105: if (newMessage.data[0] == 0x01)
   549  017C0C  0421               	decf	main@newMessage,w,c
   550  017C0E  A4D8               	btfss	status,2,c
   551  017C10  D004               	goto	l1644
   552                           
   553                           ;main.c: 106: {
   554                           ;main.c: 107: FORW = 1;
   555  017C12  0E01               	movlw	1
   556  017C14  6E31               	movwf	_FORW,c
   557                           
   558                           ;main.c: 108: BACK = 0;
   559  017C16  0E00               	movlw	0
   560  017C18  6E30               	movwf	_BACK,c
   561  017C1A                     l1644:
   562                           
   563                           ;main.c: 109: }
   564                           ;main.c: 110: if (newMessage.data[0] == 0x02)
   565  017C1A  0E02               	movlw	2
   566  017C1C  1821               	xorwf	main@newMessage,w,c
   567  017C1E  A4D8               	btfss	status,2,c
   568  017C20  D004               	goto	l1648
   569                           
   570                           ;main.c: 111: {
   571                           ;main.c: 112: FORW = 0;
   572  017C22  0E00               	movlw	0
   573  017C24  6E31               	movwf	_FORW,c
   574                           
   575                           ;main.c: 113: BACK = 1;
   576  017C26  0E01               	movlw	1
   577  017C28  6E30               	movwf	_BACK,c
   578  017C2A                     l1648:
   579                           
   580                           ;main.c: 114: }
   581                           ;main.c: 116: ecan_rxb0_clear();
   582  017C2A  EC98  F0BB         	call	_ecan_rxb0_clear	;wreg free
   583  017C2E                     l1650:
   584                           
   585                           ;main.c: 117: }
   586                           ;main.c: 123: if(margin0 == 0)
   587  017C2E  5032               	movf	_margin0,w,c
   588  017C30  1033               	iorwf	_margin0+1,w,c
   589  017C32  A4D8               	btfss	status,2,c
   590  017C34  D008               	goto	l1656
   591                           
   592                           ;main.c: 124: {
   593                           ;main.c: 126: selectAN0();
   594  017C36  EC9C  F0BB         	call	_selectAN0	;wreg free
   595                           
   596                           ;main.c: 127: actuator0 = readADC();
   597  017C3A  ECCB  F0BB         	call	_readADC	;wreg free
   598  017C3E  C001  F011         	movff	?_readADC,main@actuator0
   599  017C42  C002  F012         	movff	?_readADC+1,main@actuator0+1
   600  017C46                     l1656:
   601                           
   602                           ;main.c: 128: }
   603                           ;main.c: 129: if(margin1 == 0)
   604  017C46  5034               	movf	_margin1,w,c
   605  017C48  1035               	iorwf	_margin1+1,w,c
   606  017C4A  A4D8               	btfss	status,2,c
   607  017C4C  D008               	goto	l1660
   608                           
   609                           ;main.c: 130: {
   610                           ;main.c: 133: selectAN1();
   611  017C4E  ECA1  F0BB         	call	_selectAN1	;wreg free
   612                           
   613                           ;main.c: 134: actuator1 = readADC();
   614  017C52  ECCB  F0BB         	call	_readADC	;wreg free
   615  017C56  C001  F013         	movff	?_readADC,main@actuator1
   616  017C5A  C002  F014         	movff	?_readADC+1,main@actuator1+1
   617  017C5E                     l1660:
   618                           
   619                           ;main.c: 135: }
   620                           ;main.c: 136: if(margin2 == 0)
   621  017C5E  5036               	movf	_margin2,w,c
   622  017C60  1037               	iorwf	_margin2+1,w,c
   623  017C62  A4D8               	btfss	status,2,c
   624  017C64  D008               	goto	l1664
   625                           
   626                           ;main.c: 137: {
   627                           ;main.c: 140: selectAN2();
   628  017C66  ECA6  F0BB         	call	_selectAN2	;wreg free
   629                           
   630                           ;main.c: 141: actuator2 = readADC();
   631  017C6A  ECCB  F0BB         	call	_readADC	;wreg free
   632  017C6E  C001  F015         	movff	?_readADC,main@actuator2
   633  017C72  C002  F016         	movff	?_readADC+1,main@actuator2+1
   634  017C76                     l1664:
   635                           
   636                           ;main.c: 142: }
   637                           ;main.c: 143: if(margin3 == 0)
   638  017C76  5038               	movf	_margin3,w,c
   639  017C78  1039               	iorwf	_margin3+1,w,c
   640  017C7A  A4D8               	btfss	status,2,c
   641  017C7C  D008               	goto	l1668
   642                           
   643                           ;main.c: 144: {
   644                           ;main.c: 147: selectAN3();
   645  017C7E  ECAB  F0BB         	call	_selectAN3	;wreg free
   646                           
   647                           ;main.c: 148: actuator3 = readADC();
   648  017C82  ECCB  F0BB         	call	_readADC	;wreg free
   649  017C86  C001  F017         	movff	?_readADC,main@actuator3
   650  017C8A  C002  F018         	movff	?_readADC+1,main@actuator3+1
   651  017C8E                     l1668:
   652                           
   653                           ;main.c: 149: }
   654                           ;main.c: 150: if(margin4 == 0)
   655  017C8E  503A               	movf	_margin4,w,c
   656  017C90  103B               	iorwf	_margin4+1,w,c
   657  017C92  A4D8               	btfss	status,2,c
   658  017C94  D008               	goto	l1672
   659                           
   660                           ;main.c: 151: {
   661                           ;main.c: 154: selectAN4();
   662  017C96  ECB0  F0BB         	call	_selectAN4	;wreg free
   663                           
   664                           ;main.c: 155: actuator4 = readADC();
   665  017C9A  ECCB  F0BB         	call	_readADC	;wreg free
   666  017C9E  C001  F019         	movff	?_readADC,main@actuator4
   667  017CA2  C002  F01A         	movff	?_readADC+1,main@actuator4+1
   668  017CA6                     l1672:
   669                           
   670                           ;main.c: 156: }
   671                           ;main.c: 157: if(margin5 == 0)
   672  017CA6  503C               	movf	_margin5,w,c
   673  017CA8  103D               	iorwf	_margin5+1,w,c
   674  017CAA  A4D8               	btfss	status,2,c
   675  017CAC  D008               	goto	l1676
   676                           
   677                           ;main.c: 158: {
   678                           ;main.c: 161: selectAN5();
   679  017CAE  ECB5  F0BB         	call	_selectAN5	;wreg free
   680                           
   681                           ;main.c: 162: actuator5 = readADC();
   682  017CB2  ECCB  F0BB         	call	_readADC	;wreg free
   683  017CB6  C001  F01B         	movff	?_readADC,main@actuator5
   684  017CBA  C002  F01C         	movff	?_readADC+1,main@actuator5+1
   685  017CBE                     l1676:
   686                           
   687                           ;main.c: 163: }
   688                           ;main.c: 164: if(margin6 == 0)
   689  017CBE  503E               	movf	_margin6,w,c
   690  017CC0  103F               	iorwf	_margin6+1,w,c
   691  017CC2  A4D8               	btfss	status,2,c
   692  017CC4  D008               	goto	l1680
   693                           
   694                           ;main.c: 165: {
   695                           ;main.c: 168: selectAN6();
   696  017CC6  ECBA  F0BB         	call	_selectAN6	;wreg free
   697                           
   698                           ;main.c: 169: actuator6 = readADC();
   699  017CCA  ECCB  F0BB         	call	_readADC	;wreg free
   700  017CCE  C001  F01D         	movff	?_readADC,main@actuator6
   701  017CD2  C002  F01E         	movff	?_readADC+1,main@actuator6+1
   702  017CD6                     l1680:
   703                           
   704                           ;main.c: 170: }
   705                           ;main.c: 171: if(margin7 == 0)
   706  017CD6  502E               	movf	_margin7,w,c
   707  017CD8  102F               	iorwf	_margin7+1,w,c
   708  017CDA  A4D8               	btfss	status,2,c
   709  017CDC  D008               	goto	l1684
   710                           
   711                           ;main.c: 172: {
   712                           ;main.c: 175: selectAN7();
   713  017CDE  ECBF  F0BB         	call	_selectAN7	;wreg free
   714                           
   715                           ;main.c: 176: actuator7 = readADC();
   716  017CE2  ECCB  F0BB         	call	_readADC	;wreg free
   717  017CE6  C001  F00F         	movff	?_readADC,main@actuator7
   718  017CEA  C002  F010         	movff	?_readADC+1,main@actuator7+1
   719  017CEE                     l1684:
   720                           
   721                           ;main.c: 177: }
   722                           ;main.c: 180: if(FORW == 1 && BACK == 0)
   723  017CEE  0431               	decf	_FORW,w,c
   724  017CF0  A4D8               	btfss	status,2,c
   725  017CF2  D082               	goto	l1690
   726  017CF4  5030               	movf	_BACK,w,c
   727  017CF6  A4D8               	btfss	status,2,c
   728  017CF8  D07F               	goto	l1690
   729                           
   730                           ;main.c: 181: {
   731                           ;main.c: 189: movement(actuator0, retractPos, 0, &margin0);
   732  017CFA  C011  F001         	movff	main@actuator0,movement@current_pos
   733  017CFE  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   734  017D02  C01F  F003         	movff	main@retractPos,movement@set_point
   735  017D06  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   736  017D0A  0E00               	movlw	0
   737  017D0C  6E06               	movwf	movement@actuator+1,c
   738  017D0E  0E00               	movlw	0
   739  017D10  6E05               	movwf	movement@actuator,c
   740  017D12  0E32               	movlw	low _margin0
   741  017D14  6E07               	movwf	movement@margin,c
   742  017D16  0E00               	movlw	high _margin0
   743  017D18  6E08               	movwf	movement@margin+1,c
   744  017D1A  ECED  F0BC         	call	_movement	;wreg free
   745                           
   746                           ;main.c: 190: movement(actuator1, extendPos, 1, &margin1);
   747  017D1E  C013  F001         	movff	main@actuator1,movement@current_pos
   748  017D22  C014  F002         	movff	main@actuator1+1,movement@current_pos+1
   749  017D26  C02C  F003         	movff	main@extendPos,movement@set_point
   750  017D2A  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   751  017D2E  0E00               	movlw	0
   752  017D30  6E06               	movwf	movement@actuator+1,c
   753  017D32  0E01               	movlw	1
   754  017D34  6E05               	movwf	movement@actuator,c
   755  017D36  0E34               	movlw	low _margin1
   756  017D38  6E07               	movwf	movement@margin,c
   757  017D3A  0E00               	movlw	high _margin1
   758  017D3C  6E08               	movwf	movement@margin+1,c
   759  017D3E  ECED  F0BC         	call	_movement	;wreg free
   760                           
   761                           ;main.c: 191: movement(actuator2, retractPos, 2, &margin2);
   762  017D42  C015  F001         	movff	main@actuator2,movement@current_pos
   763  017D46  C016  F002         	movff	main@actuator2+1,movement@current_pos+1
   764  017D4A  C01F  F003         	movff	main@retractPos,movement@set_point
   765  017D4E  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   766  017D52  0E00               	movlw	0
   767  017D54  6E06               	movwf	movement@actuator+1,c
   768  017D56  0E02               	movlw	2
   769  017D58  6E05               	movwf	movement@actuator,c
   770  017D5A  0E36               	movlw	low _margin2
   771  017D5C  6E07               	movwf	movement@margin,c
   772  017D5E  0E00               	movlw	high _margin2
   773  017D60  6E08               	movwf	movement@margin+1,c
   774  017D62  ECED  F0BC         	call	_movement	;wreg free
   775                           
   776                           ;main.c: 192: movement(actuator3, extendPos, 3, &margin3);
   777  017D66  C017  F001         	movff	main@actuator3,movement@current_pos
   778  017D6A  C018  F002         	movff	main@actuator3+1,movement@current_pos+1
   779  017D6E  C02C  F003         	movff	main@extendPos,movement@set_point
   780  017D72  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   781  017D76  0E00               	movlw	0
   782  017D78  6E06               	movwf	movement@actuator+1,c
   783  017D7A  0E03               	movlw	3
   784  017D7C  6E05               	movwf	movement@actuator,c
   785  017D7E  0E38               	movlw	low _margin3
   786  017D80  6E07               	movwf	movement@margin,c
   787  017D82  0E00               	movlw	high _margin3
   788  017D84  6E08               	movwf	movement@margin+1,c
   789  017D86  ECED  F0BC         	call	_movement	;wreg free
   790                           
   791                           ;main.c: 193: movement(actuator4, extendPos, 4, &margin4);
   792  017D8A  C019  F001         	movff	main@actuator4,movement@current_pos
   793  017D8E  C01A  F002         	movff	main@actuator4+1,movement@current_pos+1
   794  017D92  C02C  F003         	movff	main@extendPos,movement@set_point
   795  017D96  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   796  017D9A  0E00               	movlw	0
   797  017D9C  6E06               	movwf	movement@actuator+1,c
   798  017D9E  0E04               	movlw	4
   799  017DA0  6E05               	movwf	movement@actuator,c
   800  017DA2  0E3A               	movlw	low _margin4
   801  017DA4  6E07               	movwf	movement@margin,c
   802  017DA6  0E00               	movlw	high _margin4
   803  017DA8  6E08               	movwf	movement@margin+1,c
   804  017DAA  ECED  F0BC         	call	_movement	;wreg free
   805                           
   806                           ;main.c: 194: movement(actuator5, retractPos, 5, &margin5);
   807  017DAE  C01B  F001         	movff	main@actuator5,movement@current_pos
   808  017DB2  C01C  F002         	movff	main@actuator5+1,movement@current_pos+1
   809  017DB6  C01F  F003         	movff	main@retractPos,movement@set_point
   810  017DBA  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   811  017DBE  0E00               	movlw	0
   812  017DC0  6E06               	movwf	movement@actuator+1,c
   813  017DC2  0E05               	movlw	5
   814  017DC4  6E05               	movwf	movement@actuator,c
   815  017DC6  0E3C               	movlw	low _margin5
   816  017DC8  6E07               	movwf	movement@margin,c
   817  017DCA  0E00               	movlw	high _margin5
   818  017DCC  6E08               	movwf	movement@margin+1,c
   819  017DCE  ECED  F0BC         	call	_movement	;wreg free
   820                           
   821                           ;main.c: 195: movement(actuator6, extendPos, 6, &margin6);
   822  017DD2  C01D  F001         	movff	main@actuator6,movement@current_pos
   823  017DD6  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
   824  017DDA  C02C  F003         	movff	main@extendPos,movement@set_point
   825  017DDE  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   826  017DE2  0E00               	movlw	0
   827  017DE4  6E06               	movwf	movement@actuator+1,c
   828  017DE6  0E06               	movlw	6
   829  017DE8  6E05               	movwf	movement@actuator,c
   830  017DEA  0E3E               	movlw	low _margin6
   831  017DEC  6E07               	movwf	movement@margin,c
   832  017DEE  0E00               	movlw	high _margin6
   833  017DF0  6E08               	movwf	movement@margin+1,c
   834  017DF2  ECED  F0BC         	call	_movement	;wreg free
   835                           
   836                           ;main.c: 206: } else if(BACK == 1 && FORW == 0) {
   837  017DF6  D6DA               	goto	l1614
   838  017DF8                     l1690:
   839  017DF8  0430               	decf	_BACK,w,c
   840  017DFA  A4D8               	btfss	status,2,c
   841  017DFC  D082               	goto	l1696
   842  017DFE  5031               	movf	_FORW,w,c
   843  017E00  A4D8               	btfss	status,2,c
   844  017E02  D07F               	goto	l1696
   845                           
   846                           ;main.c: 210: movement(actuator0, extendPos, 0, &margin0);
   847  017E04  C011  F001         	movff	main@actuator0,movement@current_pos
   848  017E08  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   849  017E0C  C02C  F003         	movff	main@extendPos,movement@set_point
   850  017E10  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   851  017E14  0E00               	movlw	0
   852  017E16  6E06               	movwf	movement@actuator+1,c
   853  017E18  0E00               	movlw	0
   854  017E1A  6E05               	movwf	movement@actuator,c
   855  017E1C  0E32               	movlw	low _margin0
   856  017E1E  6E07               	movwf	movement@margin,c
   857  017E20  0E00               	movlw	high _margin0
   858  017E22  6E08               	movwf	movement@margin+1,c
   859  017E24  ECED  F0BC         	call	_movement	;wreg free
   860                           
   861                           ;main.c: 211: movement(actuator1, retractPos, 1, &margin1);
   862  017E28  C013  F001         	movff	main@actuator1,movement@current_pos
   863  017E2C  C014  F002         	movff	main@actuator1+1,movement@current_pos+1
   864  017E30  C01F  F003         	movff	main@retractPos,movement@set_point
   865  017E34  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   866  017E38  0E00               	movlw	0
   867  017E3A  6E06               	movwf	movement@actuator+1,c
   868  017E3C  0E01               	movlw	1
   869  017E3E  6E05               	movwf	movement@actuator,c
   870  017E40  0E34               	movlw	low _margin1
   871  017E42  6E07               	movwf	movement@margin,c
   872  017E44  0E00               	movlw	high _margin1
   873  017E46  6E08               	movwf	movement@margin+1,c
   874  017E48  ECED  F0BC         	call	_movement	;wreg free
   875                           
   876                           ;main.c: 212: movement(actuator2, extendPos, 2, &margin2);
   877  017E4C  C015  F001         	movff	main@actuator2,movement@current_pos
   878  017E50  C016  F002         	movff	main@actuator2+1,movement@current_pos+1
   879  017E54  C02C  F003         	movff	main@extendPos,movement@set_point
   880  017E58  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   881  017E5C  0E00               	movlw	0
   882  017E5E  6E06               	movwf	movement@actuator+1,c
   883  017E60  0E02               	movlw	2
   884  017E62  6E05               	movwf	movement@actuator,c
   885  017E64  0E36               	movlw	low _margin2
   886  017E66  6E07               	movwf	movement@margin,c
   887  017E68  0E00               	movlw	high _margin2
   888  017E6A  6E08               	movwf	movement@margin+1,c
   889  017E6C  ECED  F0BC         	call	_movement	;wreg free
   890                           
   891                           ;main.c: 213: movement(actuator3, retractPos, 3, &margin3);
   892  017E70  C017  F001         	movff	main@actuator3,movement@current_pos
   893  017E74  C018  F002         	movff	main@actuator3+1,movement@current_pos+1
   894  017E78  C01F  F003         	movff	main@retractPos,movement@set_point
   895  017E7C  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   896  017E80  0E00               	movlw	0
   897  017E82  6E06               	movwf	movement@actuator+1,c
   898  017E84  0E03               	movlw	3
   899  017E86  6E05               	movwf	movement@actuator,c
   900  017E88  0E38               	movlw	low _margin3
   901  017E8A  6E07               	movwf	movement@margin,c
   902  017E8C  0E00               	movlw	high _margin3
   903  017E8E  6E08               	movwf	movement@margin+1,c
   904  017E90  ECED  F0BC         	call	_movement	;wreg free
   905                           
   906                           ;main.c: 214: movement(actuator4, retractPos, 4, &margin4);
   907  017E94  C019  F001         	movff	main@actuator4,movement@current_pos
   908  017E98  C01A  F002         	movff	main@actuator4+1,movement@current_pos+1
   909  017E9C  C01F  F003         	movff	main@retractPos,movement@set_point
   910  017EA0  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   911  017EA4  0E00               	movlw	0
   912  017EA6  6E06               	movwf	movement@actuator+1,c
   913  017EA8  0E04               	movlw	4
   914  017EAA  6E05               	movwf	movement@actuator,c
   915  017EAC  0E3A               	movlw	low _margin4
   916  017EAE  6E07               	movwf	movement@margin,c
   917  017EB0  0E00               	movlw	high _margin4
   918  017EB2  6E08               	movwf	movement@margin+1,c
   919  017EB4  ECED  F0BC         	call	_movement	;wreg free
   920                           
   921                           ;main.c: 215: movement(actuator5, extendPos, 5, &margin5);
   922  017EB8  C01B  F001         	movff	main@actuator5,movement@current_pos
   923  017EBC  C01C  F002         	movff	main@actuator5+1,movement@current_pos+1
   924  017EC0  C02C  F003         	movff	main@extendPos,movement@set_point
   925  017EC4  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   926  017EC8  0E00               	movlw	0
   927  017ECA  6E06               	movwf	movement@actuator+1,c
   928  017ECC  0E05               	movlw	5
   929  017ECE  6E05               	movwf	movement@actuator,c
   930  017ED0  0E3C               	movlw	low _margin5
   931  017ED2  6E07               	movwf	movement@margin,c
   932  017ED4  0E00               	movlw	high _margin5
   933  017ED6  6E08               	movwf	movement@margin+1,c
   934  017ED8  ECED  F0BC         	call	_movement	;wreg free
   935                           
   936                           ;main.c: 216: movement(actuator6, retractPos, 6, &margin6);
   937  017EDC  C01D  F001         	movff	main@actuator6,movement@current_pos
   938  017EE0  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
   939  017EE4  C01F  F003         	movff	main@retractPos,movement@set_point
   940  017EE8  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   941  017EEC  0E00               	movlw	0
   942  017EEE  6E06               	movwf	movement@actuator+1,c
   943  017EF0  0E06               	movlw	6
   944  017EF2  6E05               	movwf	movement@actuator,c
   945  017EF4  0E3E               	movlw	low _margin6
   946  017EF6  6E07               	movwf	movement@margin,c
   947  017EF8  0E00               	movlw	high _margin6
   948  017EFA  6E08               	movwf	movement@margin+1,c
   949  017EFC  ECED  F0BC         	call	_movement	;wreg free
   950                           
   951                           ;main.c: 223: } else {
   952  017F00  D655               	goto	l1614
   953  017F02                     l1696:
   954                           
   955                           ;main.c: 226: movement(actuator0, extendPos, 0, &margin0);
   956  017F02  C011  F001         	movff	main@actuator0,movement@current_pos
   957  017F06  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   958  017F0A  C02C  F003         	movff	main@extendPos,movement@set_point
   959  017F0E  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   960  017F12  0E00               	movlw	0
   961  017F14  6E06               	movwf	movement@actuator+1,c
   962  017F16  0E00               	movlw	0
   963  017F18  6E05               	movwf	movement@actuator,c
   964  017F1A  0E32               	movlw	low _margin0
   965  017F1C  6E07               	movwf	movement@margin,c
   966  017F1E  0E00               	movlw	high _margin0
   967  017F20  6E08               	movwf	movement@margin+1,c
   968  017F22  ECED  F0BC         	call	_movement	;wreg free
   969                           
   970                           ;main.c: 227: movement(actuator1, extendPos, 1, &margin1);
   971  017F26  C013  F001         	movff	main@actuator1,movement@current_pos
   972  017F2A  C014  F002         	movff	main@actuator1+1,movement@current_pos+1
   973  017F2E  C02C  F003         	movff	main@extendPos,movement@set_point
   974  017F32  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   975  017F36  0E00               	movlw	0
   976  017F38  6E06               	movwf	movement@actuator+1,c
   977  017F3A  0E01               	movlw	1
   978  017F3C  6E05               	movwf	movement@actuator,c
   979  017F3E  0E34               	movlw	low _margin1
   980  017F40  6E07               	movwf	movement@margin,c
   981  017F42  0E00               	movlw	high _margin1
   982  017F44  6E08               	movwf	movement@margin+1,c
   983  017F46  ECED  F0BC         	call	_movement	;wreg free
   984                           
   985                           ;main.c: 228: movement(actuator2, extendPos, 2, &margin2);
   986  017F4A  C015  F001         	movff	main@actuator2,movement@current_pos
   987  017F4E  C016  F002         	movff	main@actuator2+1,movement@current_pos+1
   988  017F52  C02C  F003         	movff	main@extendPos,movement@set_point
   989  017F56  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   990  017F5A  0E00               	movlw	0
   991  017F5C  6E06               	movwf	movement@actuator+1,c
   992  017F5E  0E02               	movlw	2
   993  017F60  6E05               	movwf	movement@actuator,c
   994  017F62  0E36               	movlw	low _margin2
   995  017F64  6E07               	movwf	movement@margin,c
   996  017F66  0E00               	movlw	high _margin2
   997  017F68  6E08               	movwf	movement@margin+1,c
   998  017F6A  ECED  F0BC         	call	_movement	;wreg free
   999                           
  1000                           ;main.c: 229: movement(actuator3, extendPos, 3, &margin3);
  1001  017F6E  C017  F001         	movff	main@actuator3,movement@current_pos
  1002  017F72  C018  F002         	movff	main@actuator3+1,movement@current_pos+1
  1003  017F76  C02C  F003         	movff	main@extendPos,movement@set_point
  1004  017F7A  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
  1005  017F7E  0E00               	movlw	0
  1006  017F80  6E06               	movwf	movement@actuator+1,c
  1007  017F82  0E03               	movlw	3
  1008  017F84  6E05               	movwf	movement@actuator,c
  1009  017F86  0E38               	movlw	low _margin3
  1010  017F88  6E07               	movwf	movement@margin,c
  1011  017F8A  0E00               	movlw	high _margin3
  1012  017F8C  6E08               	movwf	movement@margin+1,c
  1013  017F8E  ECED  F0BC         	call	_movement	;wreg free
  1014                           
  1015                           ;main.c: 230: movement(actuator4, extendPos, 4, &margin4);
  1016  017F92  C019  F001         	movff	main@actuator4,movement@current_pos
  1017  017F96  C01A  F002         	movff	main@actuator4+1,movement@current_pos+1
  1018  017F9A  C02C  F003         	movff	main@extendPos,movement@set_point
  1019  017F9E  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
  1020  017FA2  0E00               	movlw	0
  1021  017FA4  6E06               	movwf	movement@actuator+1,c
  1022  017FA6  0E04               	movlw	4
  1023  017FA8  6E05               	movwf	movement@actuator,c
  1024  017FAA  0E3A               	movlw	low _margin4
  1025  017FAC  6E07               	movwf	movement@margin,c
  1026  017FAE  0E00               	movlw	high _margin4
  1027  017FB0  6E08               	movwf	movement@margin+1,c
  1028  017FB2  ECED  F0BC         	call	_movement	;wreg free
  1029                           
  1030                           ;main.c: 231: movement(actuator5, extendPos, 5, &margin5);
  1031  017FB6  C01B  F001         	movff	main@actuator5,movement@current_pos
  1032  017FBA  C01C  F002         	movff	main@actuator5+1,movement@current_pos+1
  1033  017FBE  C02C  F003         	movff	main@extendPos,movement@set_point
  1034  017FC2  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
  1035  017FC6  0E00               	movlw	0
  1036  017FC8  6E06               	movwf	movement@actuator+1,c
  1037  017FCA  0E05               	movlw	5
  1038  017FCC  6E05               	movwf	movement@actuator,c
  1039  017FCE  0E3C               	movlw	low _margin5
  1040  017FD0  6E07               	movwf	movement@margin,c
  1041  017FD2  0E00               	movlw	high _margin5
  1042  017FD4  6E08               	movwf	movement@margin+1,c
  1043  017FD6  ECED  F0BC         	call	_movement	;wreg free
  1044                           
  1045                           ;main.c: 232: movement(actuator6, extendPos, 6, &margin6);
  1046  017FDA  C01D  F001         	movff	main@actuator6,movement@current_pos
  1047  017FDE  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
  1048  017FE2  C02C  F003         	movff	main@extendPos,movement@set_point
  1049  017FE6  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
  1050  017FEA  0E00               	movlw	0
  1051  017FEC  6E06               	movwf	movement@actuator+1,c
  1052  017FEE  0E06               	movlw	6
  1053  017FF0  6E05               	movwf	movement@actuator,c
  1054  017FF2  0E3E               	movlw	low _margin6
  1055  017FF4  6E07               	movwf	movement@margin,c
  1056  017FF6  0E00               	movlw	high _margin6
  1057  017FF8  6E08               	movwf	movement@margin+1,c
  1058  017FFA  ECED  F0BC         	call	_movement	;wreg free
  1059  017FFE  D5D6               	goto	l1614
  1060  018000                     __end_of_main:
  1061                           	opt stack 0
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec1	equ	0xFE5
  1069                           fsr1l	equ	0xFE1
  1070                           status	equ	0xFD8
  1071                           
  1072 ;; *************** function _setAnalogIn *****************
  1073 ;; Defined at:
  1074 ;;		line 24 in file "system.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		None
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text1
  1102  017806                     __ptext1:
  1103                           	opt stack 0
  1104  017806                     _setAnalogIn:
  1105                           	opt stack 30
  1106                           
  1107                           ;system.c: 27: ADCON1bits.PCFG = 0;
  1108                           
  1109                           ;incstack = 0
  1110  017806  90C1               	bcf	4033,0,c	;volatile
  1111  017808  92C1               	bcf	4033,1,c	;volatile
  1112  01780A  94C1               	bcf	4033,2,c	;volatile
  1113  01780C  96C1               	bcf	4033,3,c	;volatile
  1114                           
  1115                           ;system.c: 28: ADCON2bits.ADFM = 1;
  1116  01780E  8EC0               	bsf	4032,7,c	;volatile
  1117                           
  1118                           ;system.c: 32: ADCON1bits.VCFG0 = 0;
  1119  017810  98C1               	bcf	4033,4,c	;volatile
  1120                           
  1121                           ;system.c: 33: ADCON1bits.VCFG1 = 0;
  1122  017812  9AC1               	bcf	4033,5,c	;volatile
  1123                           
  1124                           ;system.c: 36: ADCON2bits.ACQT2 = 0;
  1125  017814  9AC0               	bcf	4032,5,c	;volatile
  1126                           
  1127                           ;system.c: 37: ADCON2bits.ACQT1 = 1;
  1128  017816  88C0               	bsf	4032,4,c	;volatile
  1129                           
  1130                           ;system.c: 38: ADCON2bits.ACQT0 = 0;
  1131  017818  96C0               	bcf	4032,3,c	;volatile
  1132                           
  1133                           ;system.c: 41: ADCON2bits.ADCS2 = 0;
  1134  01781A  94C0               	bcf	4032,2,c	;volatile
  1135                           
  1136                           ;system.c: 42: ADCON2bits.ADCS1 = 1;
  1137  01781C  82C0               	bsf	4032,1,c	;volatile
  1138                           
  1139                           ;system.c: 43: ADCON2bits.ADCS0 = 0;
  1140  01781E  90C0               	bcf	4032,0,c	;volatile
  1141                           
  1142                           ;system.c: 47: TRISAbits.TRISA0 = 1;
  1143  017820  8092               	bsf	3986,0,c	;volatile
  1144                           
  1145                           ;system.c: 48: TRISAbits.TRISA1 = 1;
  1146  017822  8292               	bsf	3986,1,c	;volatile
  1147                           
  1148                           ;system.c: 49: TRISAbits.TRISA2 = 1;
  1149  017824  8492               	bsf	3986,2,c	;volatile
  1150                           
  1151                           ;system.c: 50: TRISAbits.TRISA3 = 1;
  1152  017826  8692               	bsf	3986,3,c	;volatile
  1153                           
  1154                           ;system.c: 51: TRISAbits.TRISA5 = 1;
  1155  017828  8A92               	bsf	3986,5,c	;volatile
  1156                           
  1157                           ;system.c: 52: TRISEbits.TRISE0 = 1;
  1158  01782A  8096               	bsf	3990,0,c	;volatile
  1159                           
  1160                           ;system.c: 53: TRISEbits.TRISE1 = 1;
  1161  01782C  8296               	bsf	3990,1,c	;volatile
  1162                           
  1163                           ;system.c: 54: TRISEbits.TRISE2 = 1;
  1164  01782E  8496               	bsf	3990,2,c	;volatile
  1165                           
  1166                           ;system.c: 55: TRISBbits.TRISB1 = 1;
  1167  017830  8293               	bsf	3987,1,c	;volatile
  1168                           
  1169                           ;system.c: 56: TRISBbits.TRISB4 = 1;
  1170  017832  8893               	bsf	3987,4,c	;volatile
  1171                           
  1172                           ;system.c: 57: TRISBbits.TRISB0 = 1;
  1173  017834  8093               	bsf	3987,0,c	;volatile
  1174                           
  1175                           ;system.c: 60: ADCON0bits.ADON = 1;
  1176  017836  80C2               	bsf	4034,0,c	;volatile
  1177  017838  0012               	return		;funcret
  1178  01783A                     __end_of_setAnalogIn:
  1179                           	opt stack 0
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           postdec1	equ	0xFE5
  1187                           fsr1l	equ	0xFE1
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _setActuatorCntrl *****************
  1191 ;; Defined at:
  1192 ;;		line 63 in file "system.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		None
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text2
  1220  0177B0                     __ptext2:
  1221                           	opt stack 0
  1222  0177B0                     _setActuatorCntrl:
  1223                           	opt stack 30
  1224                           
  1225                           ;system.c: 66: TRISDbits.TRISD0 = 0;
  1226                           
  1227                           ;incstack = 0
  1228  0177B0  9095               	bcf	3989,0,c	;volatile
  1229                           
  1230                           ;system.c: 67: TRISDbits.TRISD1 = 0;
  1231  0177B2  9295               	bcf	3989,1,c	;volatile
  1232                           
  1233                           ;system.c: 68: TRISDbits.TRISD2 = 0;
  1234  0177B4  9495               	bcf	3989,2,c	;volatile
  1235                           
  1236                           ;system.c: 69: TRISDbits.TRISD3 = 0;
  1237  0177B6  9695               	bcf	3989,3,c	;volatile
  1238                           
  1239                           ;system.c: 70: TRISDbits.TRISD4 = 0;
  1240  0177B8  9895               	bcf	3989,4,c	;volatile
  1241                           
  1242                           ;system.c: 71: TRISDbits.TRISD5 = 0;
  1243  0177BA  9A95               	bcf	3989,5,c	;volatile
  1244                           
  1245                           ;system.c: 72: TRISDbits.TRISD6 = 0;
  1246  0177BC  9C95               	bcf	3989,6,c	;volatile
  1247                           
  1248                           ;system.c: 73: TRISDbits.TRISD7 = 0;
  1249  0177BE  9E95               	bcf	3989,7,c	;volatile
  1250                           
  1251                           ;system.c: 75: TRISCbits.TRISC0 = 0;
  1252  0177C0  9094               	bcf	3988,0,c	;volatile
  1253                           
  1254                           ;system.c: 76: TRISCbits.TRISC1 = 0;
  1255  0177C2  9294               	bcf	3988,1,c	;volatile
  1256                           
  1257                           ;system.c: 77: TRISCbits.TRISC2 = 0;
  1258  0177C4  9494               	bcf	3988,2,c	;volatile
  1259                           
  1260                           ;system.c: 78: TRISCbits.TRISC3 = 0;
  1261  0177C6  9694               	bcf	3988,3,c	;volatile
  1262                           
  1263                           ;system.c: 79: TRISCbits.TRISC4 = 0;
  1264  0177C8  9894               	bcf	3988,4,c	;volatile
  1265                           
  1266                           ;system.c: 80: TRISCbits.TRISC5 = 0;
  1267  0177CA  9A94               	bcf	3988,5,c	;volatile
  1268                           
  1269                           ;system.c: 81: TRISCbits.TRISC6 = 0;
  1270  0177CC  9C94               	bcf	3988,6,c	;volatile
  1271                           
  1272                           ;system.c: 82: TRISCbits.TRISC7 = 0;
  1273  0177CE  9E94               	bcf	3988,7,c	;volatile
  1274                           
  1275                           ;system.c: 85: TRISAbits.TRISA7 = 0;
  1276  0177D0  9E92               	bcf	3986,7,c	;volatile
  1277  0177D2  0012               	return		;funcret
  1278  0177D4                     __end_of_setActuatorCntrl:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           postdec1	equ	0xFE5
  1287                           fsr1l	equ	0xFE1
  1288                           status	equ	0xFD8
  1289                           
  1290 ;; *************** function _selectAN7 *****************
  1291 ;; Defined at:
  1292 ;;		line 68 in file "ADC_Config.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text3
  1320  01777E                     __ptext3:
  1321                           	opt stack 0
  1322  01777E                     _selectAN7:
  1323                           	opt stack 30
  1324                           
  1325                           ;ADC_Config.c: 70: ADCON0bits.CHS = 0x07;
  1326                           
  1327                           ;incstack = 0
  1328  01777E  50C2               	movf	4034,w,c	;volatile
  1329  017780  0BC3               	andlw	-61
  1330  017782  091C               	iorlw	28
  1331  017784  6EC2               	movwf	4034,c	;volatile
  1332  017786  0012               	return		;funcret
  1333  017788                     __end_of_selectAN7:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           postdec1	equ	0xFE5
  1342                           fsr1l	equ	0xFE1
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _selectAN6 *****************
  1346 ;; Defined at:
  1347 ;;		line 62 in file "ADC_Config.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text4
  1375  017774                     __ptext4:
  1376                           	opt stack 0
  1377  017774                     _selectAN6:
  1378                           	opt stack 30
  1379                           
  1380                           ;ADC_Config.c: 64: ADCON0bits.CHS = 0x06;
  1381                           
  1382                           ;incstack = 0
  1383  017774  50C2               	movf	4034,w,c	;volatile
  1384  017776  0BC3               	andlw	-61
  1385  017778  0918               	iorlw	24
  1386  01777A  6EC2               	movwf	4034,c	;volatile
  1387  01777C  0012               	return		;funcret
  1388  01777E                     __end_of_selectAN6:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _selectAN5 *****************
  1401 ;; Defined at:
  1402 ;;		line 56 in file "ADC_Config.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text5
  1430  01776A                     __ptext5:
  1431                           	opt stack 0
  1432  01776A                     _selectAN5:
  1433                           	opt stack 30
  1434                           
  1435                           ;ADC_Config.c: 58: ADCON0bits.CHS = 0x05;
  1436                           
  1437                           ;incstack = 0
  1438  01776A  50C2               	movf	4034,w,c	;volatile
  1439  01776C  0BC3               	andlw	-61
  1440  01776E  0914               	iorlw	20
  1441  017770  6EC2               	movwf	4034,c	;volatile
  1442  017772  0012               	return		;funcret
  1443  017774                     __end_of_selectAN5:
  1444                           	opt stack 0
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           postinc0	equ	0xFEE
  1450                           wreg	equ	0xFE8
  1451                           postdec1	equ	0xFE5
  1452                           fsr1l	equ	0xFE1
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function _selectAN4 *****************
  1456 ;; Defined at:
  1457 ;;		line 50 in file "ADC_Config.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text6
  1485  017760                     __ptext6:
  1486                           	opt stack 0
  1487  017760                     _selectAN4:
  1488                           	opt stack 30
  1489                           
  1490                           ;ADC_Config.c: 52: ADCON0bits.CHS = 0x04;
  1491                           
  1492                           ;incstack = 0
  1493  017760  50C2               	movf	4034,w,c	;volatile
  1494  017762  0BC3               	andlw	-61
  1495  017764  0910               	iorlw	16
  1496  017766  6EC2               	movwf	4034,c	;volatile
  1497  017768  0012               	return		;funcret
  1498  01776A                     __end_of_selectAN4:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1l	equ	0xFE1
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _selectAN3 *****************
  1511 ;; Defined at:
  1512 ;;		line 44 in file "ADC_Config.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text7
  1540  017756                     __ptext7:
  1541                           	opt stack 0
  1542  017756                     _selectAN3:
  1543                           	opt stack 30
  1544                           
  1545                           ;ADC_Config.c: 46: ADCON0bits.CHS = 0x03;
  1546                           
  1547                           ;incstack = 0
  1548  017756  50C2               	movf	4034,w,c	;volatile
  1549  017758  0BC3               	andlw	-61
  1550  01775A  090C               	iorlw	12
  1551  01775C  6EC2               	movwf	4034,c	;volatile
  1552  01775E  0012               	return		;funcret
  1553  017760                     __end_of_selectAN3:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _selectAN2 *****************
  1566 ;; Defined at:
  1567 ;;		line 38 in file "ADC_Config.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text8
  1595  01774C                     __ptext8:
  1596                           	opt stack 0
  1597  01774C                     _selectAN2:
  1598                           	opt stack 30
  1599                           
  1600                           ;ADC_Config.c: 40: ADCON0bits.CHS = 0x02;
  1601                           
  1602                           ;incstack = 0
  1603  01774C  50C2               	movf	4034,w,c	;volatile
  1604  01774E  0BC3               	andlw	-61
  1605  017750  0908               	iorlw	8
  1606  017752  6EC2               	movwf	4034,c	;volatile
  1607  017754  0012               	return		;funcret
  1608  017756                     __end_of_selectAN2:
  1609                           	opt stack 0
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           postdec1	equ	0xFE5
  1617                           fsr1l	equ	0xFE1
  1618                           status	equ	0xFD8
  1619                           
  1620 ;; *************** function _selectAN1 *****************
  1621 ;; Defined at:
  1622 ;;		line 32 in file "ADC_Config.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text9
  1650  017742                     __ptext9:
  1651                           	opt stack 0
  1652  017742                     _selectAN1:
  1653                           	opt stack 30
  1654                           
  1655                           ;ADC_Config.c: 34: ADCON0bits.CHS = 0x01;
  1656                           
  1657                           ;incstack = 0
  1658  017742  50C2               	movf	4034,w,c	;volatile
  1659  017744  0BC3               	andlw	-61
  1660  017746  0904               	iorlw	4
  1661  017748  6EC2               	movwf	4034,c	;volatile
  1662  01774A  0012               	return		;funcret
  1663  01774C                     __end_of_selectAN1:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1l	equ	0xFE1
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _selectAN0 *****************
  1676 ;; Defined at:
  1677 ;;		line 26 in file "ADC_Config.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		None
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text10
  1705  017738                     __ptext10:
  1706                           	opt stack 0
  1707  017738                     _selectAN0:
  1708                           	opt stack 30
  1709                           
  1710                           ;ADC_Config.c: 28: ADCON0bits.CHS = 0x00;
  1711                           
  1712                           ;incstack = 0
  1713  017738  94C2               	bcf	4034,2,c	;volatile
  1714  01773A  96C2               	bcf	4034,3,c	;volatile
  1715  01773C  98C2               	bcf	4034,4,c	;volatile
  1716  01773E  9AC2               	bcf	4034,5,c	;volatile
  1717  017740  0012               	return		;funcret
  1718  017742                     __end_of_selectAN0:
  1719                           	opt stack 0
  1720                           tblptru	equ	0xFF8
  1721                           tblptrh	equ	0xFF7
  1722                           tblptrl	equ	0xFF6
  1723                           tablat	equ	0xFF5
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           postdec1	equ	0xFE5
  1727                           fsr1l	equ	0xFE1
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _readADC *****************
  1731 ;; Defined at:
  1732 ;;		line 73 in file "ADC_Config.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  digitalVal      2    2[COMRAM] unsigned int 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2    0[COMRAM] unsigned int 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;Total ram usage:        4 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text11
  1760  017796                     __ptext11:
  1761                           	opt stack 0
  1762  017796                     _readADC:
  1763                           	opt stack 30
  1764                           
  1765                           ;ADC_Config.c: 75: unsigned int digitalVal;
  1766                           ;ADC_Config.c: 77: ADCON0bits.GO_NOT_DONE = 1;
  1767                           
  1768                           ;incstack = 0
  1769  017796  82C2               	bsf	4034,1,c	;volatile
  1770  017798                     l133:
  1771  017798  B2C2               	btfsc	4034,1,c	;volatile
  1772  01779A  D7FE               	goto	l133
  1773                           
  1774                           ;ADC_Config.c: 83: digitalVal = ADRESL;
  1775  01779C  CFC3 F003          	movff	4035,readADC@digitalVal	;volatile
  1776  0177A0  6A04               	clrf	readADC@digitalVal+1,c
  1777                           
  1778                           ;ADC_Config.c: 84: digitalVal += ADRESH << 8;
  1779  0177A2  50C4               	movf	4036,w,c	;volatile
  1780  0177A4  2604               	addwf	readADC@digitalVal+1,f,c
  1781                           
  1782                           ;ADC_Config.c: 85: return digitalVal;
  1783  0177A6  C003  F001         	movff	readADC@digitalVal,?_readADC
  1784  0177AA  C004  F002         	movff	readADC@digitalVal+1,?_readADC+1
  1785  0177AE  0012               	return	
  1786  0177B0                     __end_of_readADC:
  1787                           	opt stack 0
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1l	equ	0xFE1
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _movement *****************
  1799 ;; Defined at:
  1800 ;;		line 28 in file "movements.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  current_pos     2    0[COMRAM] unsigned int 
  1803 ;;  set_point       2    2[COMRAM] unsigned int 
  1804 ;;  actuator        2    4[COMRAM] int 
  1805 ;;  margin          2    6[COMRAM] PTR int 
  1806 ;;		 -> margin6(2), margin5(2), margin4(2), margin3(2), 
  1807 ;;		 -> margin2(2), margin1(2), margin0(2), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  move1           2   12[COMRAM] int 
  1810 ;;  move0           2   10[COMRAM] int 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1820 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1824 ;;Total ram usage:       14 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text12
  1834  0179DA                     __ptext12:
  1835                           	opt stack 0
  1836  0179DA                     _movement:
  1837                           	opt stack 30
  1838                           
  1839                           ;movements.c: 30: int move0;
  1840                           ;movements.c: 31: int move1;
  1841                           ;movements.c: 33: if(*margin == 0)
  1842                           
  1843                           ;incstack = 0
  1844  0179DA  C007  FFD9         	movff	movement@margin,fsr2l
  1845  0179DE  C008  FFDA         	movff	movement@margin+1,fsr2h
  1846  0179E2  50DE               	movf	postinc2,w,c
  1847  0179E4  10DE               	iorwf	postinc2,w,c
  1848  0179E6  A4D8               	btfss	status,2,c
  1849  0179E8  D02B               	goto	l1552
  1850                           
  1851                           ;movements.c: 34: {
  1852                           ;movements.c: 35: if (current_pos < set_point)
  1853  0179EA  5003               	movf	movement@set_point,w,c
  1854  0179EC  5C01               	subwf	movement@current_pos,w,c
  1855  0179EE  5004               	movf	movement@set_point+1,w,c
  1856  0179F0  5802               	subwfb	movement@current_pos+1,w,c
  1857  0179F2  B0D8               	btfsc	status,0,c
  1858  0179F4  D008               	goto	l1544
  1859                           
  1860                           ;movements.c: 36: {
  1861                           ;movements.c: 37: move0 = 0;
  1862  0179F6  0E00               	movlw	0
  1863  0179F8  6E0C               	movwf	movement@move0+1,c
  1864  0179FA  0E00               	movlw	0
  1865  0179FC  6E0B               	movwf	movement@move0,c
  1866                           
  1867                           ;movements.c: 38: move1 = 1;
  1868  0179FE  0E00               	movlw	0
  1869  017A00  6E0E               	movwf	movement@move1+1,c
  1870  017A02  0E01               	movlw	1
  1871  017A04  D00A               	goto	L1
  1872  017A06                     l1544:
  1873  017A06  5001               	movf	movement@current_pos,w,c
  1874  017A08  5C03               	subwf	movement@set_point,w,c
  1875  017A0A  5002               	movf	movement@current_pos+1,w,c
  1876  017A0C  5804               	subwfb	movement@set_point+1,w,c
  1877  017A0E  B0D8               	btfsc	status,0,c
  1878  017A10  D006               	goto	l1548
  1879                           
  1880                           ;movements.c: 40: {
  1881                           ;movements.c: 41: move0 = 1;
  1882  017A12  0E00               	movlw	0
  1883  017A14  6E0C               	movwf	movement@move0+1,c
  1884  017A16  0E01               	movlw	1
  1885  017A18  D016               	goto	L2
  1886  017A1A                     L1:
  1887  017A1A  6E0D               	movwf	movement@move1,c
  1888                           
  1889                           ;movements.c: 43: } else
  1890  017A1C  D019               	goto	l1554
  1891  017A1E                     l1548:
  1892                           
  1893                           ;movements.c: 44: {
  1894                           ;movements.c: 45: move0 = 0;
  1895  017A1E  0E00               	movlw	0
  1896  017A20  6E0C               	movwf	movement@move0+1,c
  1897  017A22  0E00               	movlw	0
  1898  017A24  6E0B               	movwf	movement@move0,c
  1899                           
  1900                           ;movements.c: 46: move1 = 0;
  1901  017A26  0E00               	movlw	0
  1902  017A28  6E0E               	movwf	movement@move1+1,c
  1903  017A2A  0E00               	movlw	0
  1904  017A2C  6E0D               	movwf	movement@move1,c
  1905                           
  1906                           ;movements.c: 47: *margin = 1;
  1907  017A2E  C007  FFD9         	movff	movement@margin,fsr2l
  1908  017A32  C008  FFDA         	movff	movement@margin+1,fsr2h
  1909  017A36  0E01               	movlw	1
  1910  017A38  6EDE               	movwf	postinc2,c
  1911  017A3A  0E00               	movlw	0
  1912  017A3C  6EDD               	movwf	postdec2,c
  1913                           
  1914                           ;movements.c: 48: }
  1915                           ;movements.c: 49: } else
  1916  017A3E  D008               	goto	l1554
  1917  017A40                     l1552:
  1918                           
  1919                           ;movements.c: 50: {
  1920                           ;movements.c: 51: move0 = 0;
  1921  017A40  0E00               	movlw	0
  1922  017A42  6E0C               	movwf	movement@move0+1,c
  1923  017A44  0E00               	movlw	0
  1924  017A46                     L2:
  1925  017A46  6E0B               	movwf	movement@move0,c
  1926                           
  1927                           ;movements.c: 52: move1 = 0;
  1928  017A48  0E00               	movlw	0
  1929  017A4A  6E0E               	movwf	movement@move1+1,c
  1930  017A4C  0E00               	movlw	0
  1931  017A4E  D7E5               	goto	L1
  1932  017A50                     l1554:
  1933                           
  1934                           ;movements.c: 53: }
  1935                           ;movements.c: 75: if(actuator == 0)
  1936  017A50  5005               	movf	movement@actuator,w,c
  1937  017A52  1006               	iorwf	movement@actuator+1,w,c
  1938  017A54  A4D8               	btfss	status,2,c
  1939  017A56  D00B               	goto	l1558
  1940                           
  1941                           ;movements.c: 76: {
  1942                           ;movements.c: 77: LATCbits.LATC0 = move0;
  1943  017A58  B00B               	btfsc	movement@move0,0,c
  1944  017A5A  D002               	bra	u1085
  1945  017A5C  908B               	bcf	3979,0,c	;volatile
  1946  017A5E  D001               	bra	u1086
  1947  017A60                     u1085:
  1948  017A60  808B               	bsf	3979,0,c	;volatile
  1949  017A62                     u1086:
  1950                           
  1951                           ;movements.c: 78: LATCbits.LATC1 = move1;
  1952  017A62  B00D               	btfsc	movement@move1,0,c
  1953  017A64  D002               	bra	u1095
  1954  017A66  928B               	bcf	3979,1,c	;volatile
  1955  017A68  D001               	bra	u1096
  1956  017A6A                     u1095:
  1957  017A6A  828B               	bsf	3979,1,c	;volatile
  1958  017A6C                     u1096:
  1959                           
  1960                           ;movements.c: 79: } else if (actuator == 1)
  1961  017A6C  0012               	return	
  1962  017A6E                     l1558:
  1963  017A6E  0405               	decf	movement@actuator,w,c
  1964  017A70  1006               	iorwf	movement@actuator+1,w,c
  1965  017A72  A4D8               	btfss	status,2,c
  1966  017A74  D00B               	goto	l1562
  1967                           
  1968                           ;movements.c: 80: {
  1969                           ;movements.c: 81: LATCbits.LATC2 = move0;
  1970  017A76  B00B               	btfsc	movement@move0,0,c
  1971  017A78  D002               	bra	u1115
  1972  017A7A  948B               	bcf	3979,2,c	;volatile
  1973  017A7C  D001               	bra	u1116
  1974  017A7E                     u1115:
  1975  017A7E  848B               	bsf	3979,2,c	;volatile
  1976  017A80                     u1116:
  1977                           
  1978                           ;movements.c: 82: LATCbits.LATC3 = move1;
  1979  017A80  B00D               	btfsc	movement@move1,0,c
  1980  017A82  D002               	bra	u1125
  1981  017A84  968B               	bcf	3979,3,c	;volatile
  1982  017A86  D001               	bra	u1126
  1983  017A88                     u1125:
  1984  017A88  868B               	bsf	3979,3,c	;volatile
  1985  017A8A                     u1126:
  1986                           
  1987                           ;movements.c: 83: } else if (actuator == 2)
  1988  017A8A  0012               	return	
  1989  017A8C                     l1562:
  1990  017A8C  0E02               	movlw	2
  1991  017A8E  1805               	xorwf	movement@actuator,w,c
  1992  017A90  1006               	iorwf	movement@actuator+1,w,c
  1993  017A92  A4D8               	btfss	status,2,c
  1994  017A94  D00B               	goto	l1566
  1995                           
  1996                           ;movements.c: 84: {
  1997                           ;movements.c: 85: LATDbits.LATD0 = move0;
  1998  017A96  B00B               	btfsc	movement@move0,0,c
  1999  017A98  D002               	bra	u1145
  2000  017A9A  908C               	bcf	3980,0,c	;volatile
  2001  017A9C  D001               	bra	u1146
  2002  017A9E                     u1145:
  2003  017A9E  808C               	bsf	3980,0,c	;volatile
  2004  017AA0                     u1146:
  2005                           
  2006                           ;movements.c: 86: LATDbits.LATD1 = move1;
  2007  017AA0  B00D               	btfsc	movement@move1,0,c
  2008  017AA2  D002               	bra	u1155
  2009  017AA4  928C               	bcf	3980,1,c	;volatile
  2010  017AA6  D001               	bra	u1156
  2011  017AA8                     u1155:
  2012  017AA8  828C               	bsf	3980,1,c	;volatile
  2013  017AAA                     u1156:
  2014                           
  2015                           ;movements.c: 87: } else if (actuator == 3)
  2016  017AAA  0012               	return	
  2017  017AAC                     l1566:
  2018  017AAC  0E03               	movlw	3
  2019  017AAE  1805               	xorwf	movement@actuator,w,c
  2020  017AB0  1006               	iorwf	movement@actuator+1,w,c
  2021  017AB2  A4D8               	btfss	status,2,c
  2022  017AB4  D00B               	goto	l1570
  2023                           
  2024                           ;movements.c: 88: {
  2025                           ;movements.c: 89: LATDbits.LATD2 = move0;
  2026  017AB6  B00B               	btfsc	movement@move0,0,c
  2027  017AB8  D002               	bra	u1175
  2028  017ABA  948C               	bcf	3980,2,c	;volatile
  2029  017ABC  D001               	bra	u1176
  2030  017ABE                     u1175:
  2031  017ABE  848C               	bsf	3980,2,c	;volatile
  2032  017AC0                     u1176:
  2033                           
  2034                           ;movements.c: 90: LATDbits.LATD3 = move1;
  2035  017AC0  B00D               	btfsc	movement@move1,0,c
  2036  017AC2  D002               	bra	u1185
  2037  017AC4  968C               	bcf	3980,3,c	;volatile
  2038  017AC6  D001               	bra	u1186
  2039  017AC8                     u1185:
  2040  017AC8  868C               	bsf	3980,3,c	;volatile
  2041  017ACA                     u1186:
  2042                           
  2043                           ;movements.c: 91: } else if (actuator == 4)
  2044  017ACA  0012               	return	
  2045  017ACC                     l1570:
  2046  017ACC  0E04               	movlw	4
  2047  017ACE  1805               	xorwf	movement@actuator,w,c
  2048  017AD0  1006               	iorwf	movement@actuator+1,w,c
  2049  017AD2  A4D8               	btfss	status,2,c
  2050  017AD4  D00B               	goto	l1574
  2051                           
  2052                           ;movements.c: 92: {
  2053                           ;movements.c: 93: LATCbits.LATC4 = move0;
  2054  017AD6  B00B               	btfsc	movement@move0,0,c
  2055  017AD8  D002               	bra	u1205
  2056  017ADA  988B               	bcf	3979,4,c	;volatile
  2057  017ADC  D001               	bra	u1206
  2058  017ADE                     u1205:
  2059  017ADE  888B               	bsf	3979,4,c	;volatile
  2060  017AE0                     u1206:
  2061                           
  2062                           ;movements.c: 94: LATCbits.LATC5 = move1;
  2063  017AE0  B00D               	btfsc	movement@move1,0,c
  2064  017AE2  D002               	bra	u1215
  2065  017AE4  9A8B               	bcf	3979,5,c	;volatile
  2066  017AE6  D001               	bra	u1216
  2067  017AE8                     u1215:
  2068  017AE8  8A8B               	bsf	3979,5,c	;volatile
  2069  017AEA                     u1216:
  2070                           
  2071                           ;movements.c: 95: } else if (actuator == 5)
  2072  017AEA  0012               	return	
  2073  017AEC                     l1574:
  2074  017AEC  0E05               	movlw	5
  2075  017AEE  1805               	xorwf	movement@actuator,w,c
  2076  017AF0  1006               	iorwf	movement@actuator+1,w,c
  2077  017AF2  A4D8               	btfss	status,2,c
  2078  017AF4  D00B               	goto	l1578
  2079                           
  2080                           ;movements.c: 96: {
  2081                           ;movements.c: 97: LATCbits.LATC6 = move0;
  2082  017AF6  B00B               	btfsc	movement@move0,0,c
  2083  017AF8  D002               	bra	u1235
  2084  017AFA  9C8B               	bcf	3979,6,c	;volatile
  2085  017AFC  D001               	bra	u1236
  2086  017AFE                     u1235:
  2087  017AFE  8C8B               	bsf	3979,6,c	;volatile
  2088  017B00                     u1236:
  2089                           
  2090                           ;movements.c: 98: LATCbits.LATC7 = move1;
  2091  017B00  B00D               	btfsc	movement@move1,0,c
  2092  017B02  D002               	bra	u1245
  2093  017B04  9E8B               	bcf	3979,7,c	;volatile
  2094  017B06  D001               	bra	u1246
  2095  017B08                     u1245:
  2096  017B08  8E8B               	bsf	3979,7,c	;volatile
  2097  017B0A                     u1246:
  2098                           
  2099                           ;movements.c: 99: } else if (actuator == 6)
  2100  017B0A  0012               	return	
  2101  017B0C                     l1578:
  2102  017B0C  0E06               	movlw	6
  2103  017B0E  1805               	xorwf	movement@actuator,w,c
  2104  017B10  1006               	iorwf	movement@actuator+1,w,c
  2105  017B12  A4D8               	btfss	status,2,c
  2106  017B14  D00B               	goto	l1582
  2107                           
  2108                           ;movements.c: 100: {
  2109                           ;movements.c: 101: LATDbits.LATD4 = move0;
  2110  017B16  B00B               	btfsc	movement@move0,0,c
  2111  017B18  D002               	bra	u1265
  2112  017B1A  988C               	bcf	3980,4,c	;volatile
  2113  017B1C  D001               	bra	u1266
  2114  017B1E                     u1265:
  2115  017B1E  888C               	bsf	3980,4,c	;volatile
  2116  017B20                     u1266:
  2117                           
  2118                           ;movements.c: 102: LATDbits.LATD5 = move1;
  2119  017B20  B00D               	btfsc	movement@move1,0,c
  2120  017B22  D002               	bra	u1275
  2121  017B24  9A8C               	bcf	3980,5,c	;volatile
  2122  017B26  D001               	bra	u1276
  2123  017B28                     u1275:
  2124  017B28  8A8C               	bsf	3980,5,c	;volatile
  2125  017B2A                     u1276:
  2126                           
  2127                           ;movements.c: 103: } else if (actuator == 7)
  2128  017B2A  0012               	return	
  2129  017B2C                     l1582:
  2130  017B2C  0E07               	movlw	7
  2131  017B2E  1805               	xorwf	movement@actuator,w,c
  2132  017B30  1006               	iorwf	movement@actuator+1,w,c
  2133  017B32  A4D8               	btfss	status,2,c
  2134  017B34  0012               	return	
  2135                           
  2136                           ;movements.c: 104: {
  2137                           ;movements.c: 105: LATDbits.LATD6 = move0;
  2138  017B36  B00B               	btfsc	movement@move0,0,c
  2139  017B38  D002               	bra	u1295
  2140  017B3A  9C8C               	bcf	3980,6,c	;volatile
  2141  017B3C  D001               	bra	u1296
  2142  017B3E                     u1295:
  2143  017B3E  8C8C               	bsf	3980,6,c	;volatile
  2144  017B40                     u1296:
  2145                           
  2146                           ;movements.c: 106: LATDbits.LATD7 = move1;
  2147  017B40  B00D               	btfsc	movement@move1,0,c
  2148  017B42  D002               	bra	u1305
  2149  017B44  9E8C               	bcf	3980,7,c	;volatile
  2150  017B46  D001               	bra	u1306
  2151  017B48                     u1305:
  2152  017B48  8E8C               	bsf	3980,7,c	;volatile
  2153  017B4A                     u1306:
  2154  017B4A  0012               	return	
  2155  017B4C                     __end_of_movement:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           postinc0	equ	0xFEE
  2162                           wreg	equ	0xFE8
  2163                           postdec1	equ	0xFE5
  2164                           fsr1l	equ	0xFE1
  2165                           postinc2	equ	0xFDE
  2166                           postdec2	equ	0xFDD
  2167                           fsr2h	equ	0xFDA
  2168                           fsr2l	equ	0xFD9
  2169                           status	equ	0xFD8
  2170                           
  2171 ;; *************** function _ecan_rxb0_clear *****************
  2172 ;; Defined at:
  2173 ;;		line 203 in file "can.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		None
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text13
  2201  017730                     __ptext13:
  2202                           	opt stack 0
  2203  017730                     _ecan_rxb0_clear:
  2204                           	opt stack 30
  2205                           
  2206                           ;can.c: 205: RXB0CONbits.RXB0FUL = 0;
  2207                           
  2208                           ;incstack = 0
  2209  017730  9E60               	bcf	3936,7,c	;volatile
  2210  017732  0012               	return		;funcret
  2211  017734                     __end_of_ecan_rxb0_clear:
  2212                           	opt stack 0
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           postinc0	equ	0xFEE
  2218                           wreg	equ	0xFE8
  2219                           postdec1	equ	0xFE5
  2220                           fsr1l	equ	0xFE1
  2221                           postinc2	equ	0xFDE
  2222                           postdec2	equ	0xFDD
  2223                           fsr2h	equ	0xFDA
  2224                           fsr2l	equ	0xFD9
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _ecan_receive_rxb0 *****************
  2228 ;; Defined at:
  2229 ;;		line 137 in file "can.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  mess            2    0[COMRAM] PTR struct Message
  2232 ;;		 -> main@newMessage(11), 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;Total ram usage:        4 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text14
  2258  0178F8                     __ptext14:
  2259                           	opt stack 0
  2260  0178F8                     _ecan_receive_rxb0:
  2261                           	opt stack 30
  2262                           
  2263                           ;can.c: 143: mess->data[7] = RXB0D7;
  2264                           
  2265                           ;incstack = 0
  2266  0178F8  EE20 F007          	lfsr	2,7
  2267  0178FC  5001               	movf	ecan_receive_rxb0@mess,w,c
  2268  0178FE  26D9               	addwf	fsr2l,f,c
  2269  017900  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2270  017902  22DA               	addwfc	fsr2h,f,c
  2271  017904  CF6D FFDF          	movff	3949,indf2	;volatile
  2272                           
  2273                           ;can.c: 144: mess->data[6] = RXB0D6;
  2274  017908  EE20 F006          	lfsr	2,6
  2275  01790C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2276  01790E  26D9               	addwf	fsr2l,f,c
  2277  017910  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2278  017912  22DA               	addwfc	fsr2h,f,c
  2279  017914  CF6C FFDF          	movff	3948,indf2	;volatile
  2280                           
  2281                           ;can.c: 145: mess->data[5] = RXB0D5;
  2282  017918  EE20 F005          	lfsr	2,5
  2283  01791C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2284  01791E  26D9               	addwf	fsr2l,f,c
  2285  017920  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2286  017922  22DA               	addwfc	fsr2h,f,c
  2287  017924  CF6B FFDF          	movff	3947,indf2	;volatile
  2288                           
  2289                           ;can.c: 146: mess->data[4] = RXB0D4;
  2290  017928  EE20 F004          	lfsr	2,4
  2291  01792C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2292  01792E  26D9               	addwf	fsr2l,f,c
  2293  017930  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2294  017932  22DA               	addwfc	fsr2h,f,c
  2295  017934  CF6A FFDF          	movff	3946,indf2	;volatile
  2296                           
  2297                           ;can.c: 147: mess->data[3] = RXB0D3;
  2298  017938  EE20 F003          	lfsr	2,3
  2299  01793C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2300  01793E  26D9               	addwf	fsr2l,f,c
  2301  017940  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2302  017942  22DA               	addwfc	fsr2h,f,c
  2303  017944  CF69 FFDF          	movff	3945,indf2	;volatile
  2304                           
  2305                           ;can.c: 148: mess->data[2] = RXB0D2;
  2306  017948  EE20 F002          	lfsr	2,2
  2307  01794C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2308  01794E  26D9               	addwf	fsr2l,f,c
  2309  017950  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2310  017952  22DA               	addwfc	fsr2h,f,c
  2311  017954  CF68 FFDF          	movff	3944,indf2	;volatile
  2312                           
  2313                           ;can.c: 149: mess->data[1] = RXB0D1;
  2314  017958  EE20 F001          	lfsr	2,1
  2315  01795C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2316  01795E  26D9               	addwf	fsr2l,f,c
  2317  017960  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2318  017962  22DA               	addwfc	fsr2h,f,c
  2319  017964  CF67 FFDF          	movff	3943,indf2	;volatile
  2320                           
  2321                           ;can.c: 150: mess->data[0] = RXB0D0;
  2322  017968  C001  FFD9         	movff	ecan_receive_rxb0@mess,fsr2l
  2323  01796C  C002  FFDA         	movff	ecan_receive_rxb0@mess+1,fsr2h
  2324  017970  CF66 FFDF          	movff	3942,indf2	;volatile
  2325                           
  2326                           ;can.c: 153: mess->sid = RXB0SIDH << 3;
  2327  017974  5061               	movf	3937,w,c	;volatile
  2328  017976  6E03               	movwf	??_ecan_receive_rxb0& (0+255),c
  2329  017978  6A04               	clrf	(??_ecan_receive_rxb0+1)& (0+255),c
  2330  01797A  90D8               	bcf	status,0,c
  2331  01797C  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2332  01797E  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2333  017980  90D8               	bcf	status,0,c
  2334  017982  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2335  017984  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2336  017986  90D8               	bcf	status,0,c
  2337  017988  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2338  01798A  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2339  01798C  EE20 F008          	lfsr	2,8
  2340  017990  5001               	movf	ecan_receive_rxb0@mess,w,c
  2341  017992  26D9               	addwf	fsr2l,f,c
  2342  017994  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2343  017996  22DA               	addwfc	fsr2h,f,c
  2344  017998  C003  FFDE         	movff	??_ecan_receive_rxb0,postinc2
  2345  01799C  C004  FFDD         	movff	??_ecan_receive_rxb0+1,postdec2
  2346                           
  2347                           ;can.c: 154: mess->sid |= RXB0SIDL >> 5;
  2348  0179A0  EE20 F008          	lfsr	2,8
  2349  0179A4  5001               	movf	ecan_receive_rxb0@mess,w,c
  2350  0179A6  26D9               	addwf	fsr2l,f,c
  2351  0179A8  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2352  0179AA  22DA               	addwfc	fsr2h,f,c
  2353  0179AC  CF62 F003          	movff	3938,??_ecan_receive_rxb0	;volatile
  2354  0179B0  0E05               	movlw	5
  2355  0179B2  6E04               	movwf	(??_ecan_receive_rxb0+1)& (0+255),c
  2356  0179B4                     u1025:
  2357  0179B4  90D8               	bcf	status,0,c
  2358  0179B6  3203               	rrcf	??_ecan_receive_rxb0,f,c
  2359  0179B8  2E04               	decfsz	(??_ecan_receive_rxb0+1)& (0+255),f,c
  2360  0179BA  D7FC               	goto	u1025
  2361  0179BC  5003               	movf	??_ecan_receive_rxb0,w,c
  2362  0179BE  12DE               	iorwf	postinc2,f,c
  2363  0179C0  0E00               	movlw	0
  2364  0179C2  12DD               	iorwf	postdec2,f,c
  2365                           
  2366                           ;can.c: 157: mess->len = 0x0F & RXB0DLC;
  2367  0179C4  EE20 F00A          	lfsr	2,10
  2368  0179C8  5001               	movf	ecan_receive_rxb0@mess,w,c
  2369  0179CA  26D9               	addwf	fsr2l,f,c
  2370  0179CC  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2371  0179CE  22DA               	addwfc	fsr2h,f,c
  2372  0179D0  5065               	movf	3941,w,c	;volatile
  2373  0179D2  0B0F               	andlw	15
  2374  0179D4  6EDF               	movwf	indf2,c
  2375                           
  2376                           ;can.c: 160: RXB0CONbits.RXB0FUL = 0;
  2377  0179D6  9E60               	bcf	3936,7,c	;volatile
  2378  0179D8  0012               	return		;funcret
  2379  0179DA                     __end_of_ecan_receive_rxb0:
  2380                           	opt stack 0
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           postinc0	equ	0xFEE
  2386                           wreg	equ	0xFE8
  2387                           postdec1	equ	0xFE5
  2388                           fsr1l	equ	0xFE1
  2389                           indf2	equ	0xFDF
  2390                           postinc2	equ	0xFDE
  2391                           postdec2	equ	0xFDD
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _ecan_init *****************
  2397 ;; Defined at:
  2398 ;;		line 11 in file "can.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  mask0           2    4[COMRAM] short 
  2403 ;;  sid0            2    2[COMRAM] short 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;Total ram usage:        6 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text15
  2427  01783A                     __ptext15:
  2428                           	opt stack 0
  2429  01783A                     _ecan_init:
  2430                           	opt stack 30
  2431                           
  2432                           ;can.c: 14: TRISBbits.TRISB2 = 0;
  2433                           
  2434                           ;incstack = 0
  2435  01783A  9493               	bcf	3987,2,c	;volatile
  2436                           
  2437                           ;can.c: 15: TRISBbits.TRISB3 = 1;
  2438  01783C  8693               	bsf	3987,3,c	;volatile
  2439                           
  2440                           ;can.c: 18: CANCONbits.REQOP2 = 1;
  2441  01783E  8E6F               	bsf	3951,7,c	;volatile
  2442  017840                     l241:
  2443  017840  AE6E               	btfss	3950,7,c	;volatile
  2444  017842  AC6E               	btfss	3950,6,c	;volatile
  2445  017844  D002               	goto	l245
  2446  017846  BA6E               	btfsc	3950,5,c	;volatile
  2447  017848  D7FB               	goto	l241
  2448  01784A                     l245:
  2449                           
  2450                           ;can.c: 26: CIOCONbits.ENDRHI = 0;
  2451  01784A  9A73               	bcf	3955,5,c	;volatile
  2452                           
  2453                           ;can.c: 29: BRGCON1bits.SJW1 = 0;
  2454  01784C  9E70               	bcf	3952,7,c	;volatile
  2455                           
  2456                           ;can.c: 30: BRGCON1bits.SJW0 = 0;
  2457  01784E  9C70               	bcf	3952,6,c	;volatile
  2458                           
  2459                           ;can.c: 31: BRGCON1bits.BRP5 = 0;
  2460  017850  9A70               	bcf	3952,5,c	;volatile
  2461                           
  2462                           ;can.c: 32: BRGCON1bits.BRP4 = 0;
  2463  017852  9870               	bcf	3952,4,c	;volatile
  2464                           
  2465                           ;can.c: 33: BRGCON1bits.BRP3 = 0;
  2466  017854  9670               	bcf	3952,3,c	;volatile
  2467                           
  2468                           ;can.c: 34: BRGCON1bits.BRP2 = 0;
  2469  017856  9470               	bcf	3952,2,c	;volatile
  2470                           
  2471                           ;can.c: 35: BRGCON1bits.BRP1 = 0;
  2472  017858  9270               	bcf	3952,1,c	;volatile
  2473                           
  2474                           ;can.c: 36: BRGCON1bits.BRP0 = 1;
  2475  01785A  8070               	bsf	3952,0,c	;volatile
  2476                           
  2477                           ;can.c: 38: BRGCON2bits.SEG2PHTS = 1;
  2478  01785C  8E71               	bsf	3953,7,c	;volatile
  2479                           
  2480                           ;can.c: 39: BRGCON2bits.SAM = 1;
  2481  01785E  8C71               	bsf	3953,6,c	;volatile
  2482                           
  2483                           ;can.c: 40: BRGCON2bits.SEG1PH2 = 0;
  2484  017860  9A71               	bcf	3953,5,c	;volatile
  2485                           
  2486                           ;can.c: 41: BRGCON2bits.SEG1PH1 = 0;
  2487  017862  9871               	bcf	3953,4,c	;volatile
  2488                           
  2489                           ;can.c: 42: BRGCON2bits.SEG1PH0 = 1;
  2490  017864  8671               	bsf	3953,3,c	;volatile
  2491                           
  2492                           ;can.c: 43: BRGCON2bits.PRSEG2 = 0;
  2493  017866  9471               	bcf	3953,2,c	;volatile
  2494                           
  2495                           ;can.c: 44: BRGCON2bits.PRSEG1 = 1;
  2496  017868  8271               	bsf	3953,1,c	;volatile
  2497                           
  2498                           ;can.c: 45: BRGCON2bits.PRSEG0 = 0;
  2499  01786A  9071               	bcf	3953,0,c	;volatile
  2500                           
  2501                           ;can.c: 49: BRGCON3bits.SEG2PH2 = 0;
  2502  01786C  9472               	bcf	3954,2,c	;volatile
  2503                           
  2504                           ;can.c: 50: BRGCON3bits. SEG2PH1 = 0;
  2505  01786E  9272               	bcf	3954,1,c	;volatile
  2506                           
  2507                           ;can.c: 51: BRGCON3bits. SEG2PH0 = 1;
  2508  017870  8072               	bsf	3954,0,c	;volatile
  2509                           
  2510                           ;can.c: 54: ECANCONbits.MDSEL1 = 0;
  2511  017872  9E77               	bcf	3959,7,c	;volatile
  2512                           
  2513                           ;can.c: 55: ECANCONbits.MDSEL0 = 0;
  2514  017874  9C77               	bcf	3959,6,c	;volatile
  2515                           
  2516                           ;can.c: 62: RXB0CONbits.RXM1 = 0;
  2517  017876  9C60               	bcf	3936,6,c	;volatile
  2518                           
  2519                           ;can.c: 63: RXB0CONbits.RXM0 = 1;
  2520  017878  8A60               	bsf	3936,5,c	;volatile
  2521                           
  2522                           ;can.c: 78: short sid0 = 0x00A;
  2523  01787A  0E00               	movlw	0
  2524  01787C  6E04               	movwf	ecan_init@sid0+1,c
  2525  01787E  0E0A               	movlw	10
  2526  017880  6E03               	movwf	ecan_init@sid0,c
  2527                           
  2528                           ;can.c: 79: short mask0 = 0x7FF;
  2529  017882  0E07               	movlw	7
  2530  017884  6E06               	movwf	ecan_init@mask0+1,c
  2531  017886  6805               	setf	ecan_init@mask0,c
  2532                           
  2533                           ;can.c: 81: RXF0SIDH = sid0 >> 3;
  2534  017888  C003  F001         	movff	ecan_init@sid0,??_ecan_init
  2535  01788C  C004  F002         	movff	ecan_init@sid0+1,??_ecan_init+1
  2536  017890  3402               	rlcf	??_ecan_init+1,w,c
  2537  017892  3202               	rrcf	??_ecan_init+1,f,c
  2538  017894  3201               	rrcf	??_ecan_init,f,c
  2539  017896  3402               	rlcf	??_ecan_init+1,w,c
  2540  017898  3202               	rrcf	??_ecan_init+1,f,c
  2541  01789A  3201               	rrcf	??_ecan_init,f,c
  2542  01789C  3402               	rlcf	??_ecan_init+1,w,c
  2543  01789E  3202               	rrcf	??_ecan_init+1,f,c
  2544  0178A0  3201               	rrcf	??_ecan_init,f,c
  2545  0178A2  5001               	movf	??_ecan_init,w,c
  2546  0178A4  010F               	movlb	15	; () banked
  2547  0178A6  6F00               	movwf	0,b	;volatile
  2548                           
  2549                           ; BSR set to: 15
  2550                           ;can.c: 82: RXF0SIDL = sid0 << 5;
  2551  0178A8  3803               	swapf	ecan_init@sid0,w,c
  2552  0178AA  46E8               	rlncf	wreg,f,c
  2553  0178AC  0BE0               	andlw	224
  2554  0178AE  010F               	movlb	15	; () banked
  2555  0178B0  6F01               	movwf	1,b	;volatile
  2556                           
  2557                           ; BSR set to: 15
  2558                           ;can.c: 83: RXM0SIDH = mask0 >> 3;
  2559  0178B2  C005  F001         	movff	ecan_init@mask0,??_ecan_init
  2560  0178B6  C006  F002         	movff	ecan_init@mask0+1,??_ecan_init+1
  2561  0178BA  3402               	rlcf	??_ecan_init+1,w,c
  2562  0178BC  3202               	rrcf	??_ecan_init+1,f,c
  2563  0178BE  3201               	rrcf	??_ecan_init,f,c
  2564  0178C0  3402               	rlcf	??_ecan_init+1,w,c
  2565  0178C2  3202               	rrcf	??_ecan_init+1,f,c
  2566  0178C4  3201               	rrcf	??_ecan_init,f,c
  2567  0178C6  3402               	rlcf	??_ecan_init+1,w,c
  2568  0178C8  3202               	rrcf	??_ecan_init+1,f,c
  2569  0178CA  3201               	rrcf	??_ecan_init,f,c
  2570  0178CC  5001               	movf	??_ecan_init,w,c
  2571  0178CE  010F               	movlb	15	; () banked
  2572  0178D0  6F18               	movwf	24,b	;volatile
  2573                           
  2574                           ; BSR set to: 15
  2575                           ;can.c: 84: RXM0SIDL = mask0 << 5;
  2576  0178D2  3805               	swapf	ecan_init@mask0,w,c
  2577  0178D4  46E8               	rlncf	wreg,f,c
  2578  0178D6  0BE0               	andlw	224
  2579  0178D8  010F               	movlb	15	; () banked
  2580  0178DA  6F19               	movwf	25,b	;volatile
  2581                           
  2582                           ; BSR set to: 15
  2583                           ;can.c: 85: RXF0SIDLbits.EXIDEN = 0;
  2584  0178DC  010F               	movlb	15	; () banked
  2585  0178DE  9701               	bcf	1,3,b	;volatile
  2586                           
  2587                           ; BSR set to: 15
  2588                           ;can.c: 86: RXFCON0bits.RXF0EN = 1;
  2589  0178E0  010D               	movlb	13	; () banked
  2590  0178E2  81D4               	bsf	212,0,b	;volatile
  2591                           
  2592                           ; BSR set to: 13
  2593                           ;can.c: 104: CANCONbits.REQOP2 = 0;
  2594  0178E4  9E6F               	bcf	3951,7,c	;volatile
  2595                           
  2596                           ; BSR set to: 13
  2597                           ;can.c: 105: CANCONbits.REQOP1 = 0;
  2598  0178E6  9C6F               	bcf	3951,6,c	;volatile
  2599                           
  2600                           ; BSR set to: 13
  2601                           ;can.c: 106: CANCONbits.REQOP0 = 0;
  2602  0178E8  9A6F               	bcf	3951,5,c	;volatile
  2603  0178EA                     l246:
  2604  0178EA  AE6E               	btfss	3950,7,c	;volatile
  2605  0178EC  0012               	return	
  2606  0178EE  AC6E               	btfss	3950,6,c	;volatile
  2607  0178F0  0012               	return	
  2608  0178F2  AA6E               	btfss	3950,5,c	;volatile
  2609  0178F4  0012               	return	
  2610  0178F6  D7F9               	goto	l246
  2611  0178F8                     __end_of_ecan_init:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           postdec1	equ	0xFE5
  2620                           fsr1l	equ	0xFE1
  2621                           indf2	equ	0xFDF
  2622                           postinc2	equ	0xFDE
  2623                           postdec2	equ	0xFDD
  2624                           fsr2h	equ	0xFDA
  2625                           fsr2l	equ	0xFD9
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function _ConfigureOscillator *****************
  2629 ;; Defined at:
  2630 ;;		line 24 in file "config.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		None
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_main
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text16
  2658  017788                     __ptext16:
  2659                           	opt stack 0
  2660  017788                     _ConfigureOscillator:
  2661                           	opt stack 30
  2662                           
  2663                           ;config.c: 29: OSCCONbits.IRCF2 = 1;
  2664                           
  2665                           ;incstack = 0
  2666  017788  8CD3               	bsf	4051,6,c	;volatile
  2667                           
  2668                           ;config.c: 30: OSCCONbits.IRCF1 = 1;
  2669  01778A  8AD3               	bsf	4051,5,c	;volatile
  2670                           
  2671                           ;config.c: 31: OSCCONbits.IRCF0 = 1;
  2672  01778C  88D3               	bsf	4051,4,c	;volatile
  2673                           
  2674                           ;config.c: 33: OSCCONbits.SCS1 = 0;
  2675  01778E  92D3               	bcf	4051,1,c	;volatile
  2676                           
  2677                           ;config.c: 34: OSCCONbits.SCS0 = 0;
  2678  017790  90D3               	bcf	4051,0,c	;volatile
  2679                           
  2680                           ;config.c: 36: OSCTUNEbits.PLLEN = 1;
  2681  017792  8C9B               	bsf	3995,6,c	;volatile
  2682  017794  0012               	return		;funcret
  2683  017796                     __end_of_ConfigureOscillator:
  2684                           	opt stack 0
  2685  0000                     tblptru	equ	0xFF8
  2686                           tblptrh	equ	0xFF7
  2687                           tblptrl	equ	0xFF6
  2688                           tablat	equ	0xFF5
  2689                           postinc0	equ	0xFEE
  2690                           wreg	equ	0xFE8
  2691                           postdec1	equ	0xFE5
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           postinc2	equ	0xFDE
  2695                           postdec2	equ	0xFDD
  2696                           fsr2h	equ	0xFDA
  2697                           fsr2l	equ	0xFD9
  2698                           status	equ	0xFD8
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1l	equ	0xFE1
  2707                           indf2	equ	0xFDF
  2708                           postinc2	equ	0xFDE
  2709                           postdec2	equ	0xFDD
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714                           	psect	rparam
  2715  0000                     tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           fsr1l	equ	0xFE1
  2723                           indf2	equ	0xFDF
  2724                           postinc2	equ	0xFDE
  2725                           postdec2	equ	0xFDD
  2726                           fsr2h	equ	0xFDA
  2727                           fsr2l	equ	0xFD9
  2728                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    movement@margin	PTR int  size(2) Largest target is 2
		 -> margin6(COMRAM[2]), margin5(COMRAM[2]), margin4(COMRAM[2]), margin3(COMRAM[2]), 
		 -> margin2(COMRAM[2]), margin1(COMRAM[2]), margin0(COMRAM[2]), 

    ecan_receive_rxb0@mess	PTR struct Message size(2) Largest target is 11
		 -> main@newMessage(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_movement

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0    7479
                                             14 COMRAM    31    31      0
                _ConfigureOscillator
                          _ecan_init
                  _ecan_receive_rxb0
                    _ecan_rxb0_clear
                           _movement
                            _readADC
                          _selectAN0
                          _selectAN1
                          _selectAN2
                          _selectAN3
                          _selectAN4
                          _selectAN5
                          _selectAN6
                          _selectAN7
                   _setActuatorCntrl
                        _setAnalogIn
 ---------------------------------------------------------------------------------
 (1) _setAnalogIn                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setActuatorCntrl                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN7                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN6                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN5                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _movement                                            14     6      8    6044
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ecan_rxb0_clear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ecan_receive_rxb0                                    4     2      2     306
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ecan_init                                            6     6      0      60
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _ecan_init
   _ecan_receive_rxb0
   _ecan_rxb0_clear
   _movement
   _readADC
   _selectAN0
   _selectAN1
   _selectAN2
   _selectAN3
   _selectAN4
   _selectAN5
   _selectAN6
   _selectAN7
   _setActuatorCntrl
   _setAnalogIn

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      43       1       70.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      20        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 10 07:49:36 2016

                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                   __CFG_LVP$ON 000000                           l133 7798  
                         l241 7840                           l245 784A                           l246 78EA  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           wreg 000FE8  
                __CFG_WDT$OFF 000000                          l1614 7BAC                          l1544 7A06  
                        l1552 7A40                          l1640 7C0C                          l1570 7ACC  
                        l1562 7A8C                          l1554 7A50                          l1650 7C2E  
                        l1548 7A1E                          l1660 7C5E                          l1644 7C1A  
                        l1582 7B2C                          l1574 7AEC                          l1566 7AAC  
                        l1558 7A6E                          l1680 7CD6                          l1672 7CA6  
                        l1664 7C76                          l1656 7C46                          l1648 7C2A  
                        l1578 7B0C                          l1690 7DF8                          l1684 7CEE  
                        l1676 7CBE                          l1668 7C8E                          l1696 7F02  
                        _BACK 0030                          u1025 79B4                          u1115 7A7E  
                        u1116 7A80                          u1205 7ADE                          u1125 7A88  
                        u1206 7AE0                          u1126 7A8A                          u1215 7AE8  
                        u1216 7AEA                          u1305 7B48                          u1145 7A9E  
                        u1306 7B4A                          u1146 7AA0                          u1235 7AFE  
                        u1155 7AA8                          u1236 7B00                          u1156 7AAA  
                        u1245 7B08                          u1085 7A60                          u1246 7B0A  
                        u1086 7A62                          u1175 7ABE                          u1095 7A6A  
                        u1176 7AC0                          u1096 7A6C                          u1265 7B1E  
                        u1185 7AC8                          u1266 7B20                          u1186 7ACA  
                        u1275 7B28                          u1276 7B2A                          u1295 7B3E  
                        u1296 7B40                          _FORW 0031                          _main 7B4C  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          start 0000                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010       __end_of_ecan_rxb0_clear 7734  
                       ?_main 0001           _ConfigureOscillator 7788                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                 __CFG_WRT5$OFF 000000  
    __end_of_setActuatorCntrl 77D4                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
              __CFG_EBTR4$OFF 000000                __CFG_EBTR5$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000               __end_of_readADC 77B0  
              __CFG_EBTRB$OFF 000000                         tablat 000FF5                         status 000FD8  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 77D4  
                ?_setAnalogIn 0001                  __end_of_main 8000                 main@actuator0 0011  
               main@actuator1 0013                 main@actuator2 0015                 main@actuator3 0017  
               main@actuator4 0019                 main@actuator5 001B                 main@actuator6 001D  
               main@actuator7 000F                        ??_main 000F                 __activetblptr 000000  
                      _ADRESH 000FC4                        _ADRESL 000FC3               __CFG_BBSIZ$1024 000000  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB0D4 000F4A  
                      _TXB0D5 000F4B                        _TXB0D6 000F4C                        _TXB0D7 000F4D  
       ??_ConfigureOscillator 0001              movement@actuator 0005                __CFG_XINST$OFF 000000  
               main@extendPos 002C                __CFG_STVREN$ON 000000              ?_ecan_rxb0_clear 0001  
                      clear_0 77DA                     ??_readADC 0003               __CFG_BOREN$BOHW 000000  
               ecan_init@sid0 0003                  __pdataCOMRAM 0040              __end_of_movement 7B4C  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 7800                 ___rparam_used 000001  
              __pcstackCOMRAM 0001            __size_of_ecan_init 00BE            __size_of_selectAN0 000A  
          __size_of_selectAN1 000A            __size_of_selectAN2 000A            __size_of_selectAN3 000A  
          __size_of_selectAN4 000A            __size_of_selectAN5 000A            __size_of_selectAN6 000A  
          __size_of_selectAN7 000A          __size_of_setAnalogIn 0034                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55             ?_setActuatorCntrl 0001                       _TXB0DLC 000F45  
           __end_of_ecan_init 78F8            ??_setActuatorCntrl 0001                main@newMessage 0021  
                     __Hparam 0000                       __Lparam 0000                     ?_movement 0001  
                     __pcinit 77D4                       __ramtop 0D00                       __ptext0 7B4C  
                     __ptext1 7806                       __ptext2 77B0                       __ptext3 777E  
                     __ptext4 7774                       __ptext5 776A                       __ptext6 7760  
                     __ptext7 7756                       __ptext8 774C                       __ptext9 7742  
                     _readADC 7796                       _margin0 0032                       _margin1 0034  
                     _margin2 0036                       _margin3 0038                       _margin4 003A  
                     _margin5 003C                       _margin6 003E                       _margin7 002E  
              main@retractPos 001F             __end_of_selectAN0 7742             __end_of_selectAN1 774C  
           __end_of_selectAN2 7756             __end_of_selectAN3 7760          end_of_initialization 7800  
           __end_of_selectAN4 776A             __end_of_selectAN5 7774             __end_of_selectAN6 777E  
           __end_of_selectAN7 7788                ecan_init@mask0 0005             movement@set_point 0003  
                  ??_movement 0009                       postdec1 000FE5                       postdec2 000FDD  
                  _retractPos 0042                       postinc0 000FEE                       postinc2 000FDE  
                   _TRISAbits 000F92                     _TRISBbits 000F93                     _TRISCbits 000F94  
                   _TRISDbits 000F95                     _TRISEbits 000F96   __end_of_ConfigureOscillator 7796  
           readADC@digitalVal 0003                 __pidataCOMRAM 7734                   _ECANCONbits 000F77  
              movement@margin 0007      __size_of_ecan_rxb0_clear 0004           start_initialization 77D4  
                 _CANSTATbits 000F6E              __CFG_OSC$IRCIO67 000000              __CFG_LPT1OSC$OFF 000000  
                 __pbssCOMRAM 002E                   _BRGCON1bits 000F70                   _BRGCON2bits 000F71  
                 _BRGCON3bits 000F72                     _ecan_init 783A     __size_of_setActuatorCntrl 0024  
               ??_setAnalogIn 0001             __size_of_movement 0172                      ?_readADC 0001  
           ??_ecan_rxb0_clear 0001                     _extendPos 0040                      _LATAbits 000F89  
                    _LATCbits 000F8B                      _LATDbits 000F8C                    ?_ecan_init 0001  
                   _selectAN0 7738                     _selectAN1 7742                     _selectAN2 774C  
                   _selectAN3 7756                     _selectAN4 7760                     _selectAN5 776A  
                   _selectAN6 7774                     _selectAN7 777E                      _PIE3bits 000FA3  
         movement@current_pos 0001                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXB1SIDH 000F51  
                    _RXB1SIDL 000F52                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
                    _TXB0SIDH 000F41                      _TXB0SIDL 000F42                      _RXM0SIDH 000F18  
                    _RXM0SIDL 000F19           __end_of_setAnalogIn 783A                    _ADCON0bits 000FC2  
                  _ADCON1bits 000FC1                    _ADCON2bits 000FC0             _ecan_receive_rxb0 78F8  
                   copy_data0 77F4                    _CANCONbits 000F6F                 movement@move0 000B  
               movement@move1 000D            ?_ecan_receive_rxb0 0001                    ?_selectAN0 0001  
                  ?_selectAN1 0001                    ?_selectAN2 0001                    ?_selectAN3 0001  
                  ?_selectAN4 0001                    ?_selectAN5 0001                    ?_selectAN6 0001  
                  ?_selectAN7 0001                      __Hrparam 0000           ??_ecan_receive_rxb0 0003  
                    __Lrparam 0000                    _CIOCONbits 000F73              __size_of_readADC 001A  
                _RXF0SIDLbits 000F01     __end_of_ecan_receive_rxb0 79DA                      __ptext10 7738  
                    __ptext11 7796                      __ptext12 79DA                      __ptext13 7730  
                    __ptext14 78F8                      __ptext15 783A                      __ptext16 7788  
               __size_of_main 04B4                   ??_ecan_init 0001  __size_of_ConfigureOscillator 000E  
                _TXB0SIDLbits 000F42              _setActuatorCntrl 77B0                      _movement 79DA  
                 _setAnalogIn 7806                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
                 _OSCTUNEbits 000F9B                    _INTCONbits 000FF2                   ??_selectAN0 0001  
                 ??_selectAN1 0001                   ??_selectAN2 0001                   ??_selectAN3 0001  
                 ??_selectAN4 0001                   ??_selectAN5 0001                   ??_selectAN6 0001  
                 ??_selectAN7 0001                   _TXB0CONbits 000F40                    _OSCCONbits 000FD3  
       ecan_receive_rxb0@mess 0001                   _RXFCON0bits 000DD4               _ecan_rxb0_clear 7730  
  __size_of_ecan_receive_rxb0 00E2  
