

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Mar  7 19:48:25 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     _RXFCON0bits	set	3540
    30  0000                     _RXB1CONbits	set	3920
    31  0000                     _RXB1D0	set	3926
    32  0000                     _RXB1D1	set	3927
    33  0000                     _RXB1D2	set	3928
    34  0000                     _RXB1D3	set	3929
    35  0000                     _RXB1D4	set	3930
    36  0000                     _RXB1D5	set	3931
    37  0000                     _RXB1D6	set	3932
    38  0000                     _RXB1D7	set	3933
    39  0000                     _RXB1SIDH	set	3921
    40  0000                     _RXB1SIDL	set	3922
    41  0000                     _RXF0SIDH	set	3840
    42  0000                     _RXF0SIDL	set	3841
    43  0000                     _RXF0SIDLbits	set	3841
    44  0000                     _RXM0SIDH	set	3864
    45  0000                     _RXM0SIDL	set	3865
    46  0000                     _TXB0CONbits	set	3904
    47  0000                     _TXB0D0	set	3910
    48  0000                     _TXB0D1	set	3911
    49  0000                     _TXB0D2	set	3912
    50  0000                     _TXB0D3	set	3913
    51  0000                     _TXB0D4	set	3914
    52  0000                     _TXB0D5	set	3915
    53  0000                     _TXB0D6	set	3916
    54  0000                     _TXB0D7	set	3917
    55  0000                     _TXB0DLC	set	3909
    56  0000                     _TXB0SIDH	set	3905
    57  0000                     _TXB0SIDL	set	3906
    58  0000                     _TXB0SIDLbits	set	3906
    59  0000                     _RXB1DLC	set	3925
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADCON1bits	set	4033
    62  0000                     _ADCON2bits	set	4032
    63  0000                     _ADRESH	set	4036
    64  0000                     _ADRESL	set	4035
    65  0000                     _BRGCON1bits	set	3952
    66  0000                     _BRGCON2bits	set	3953
    67  0000                     _BRGCON3bits	set	3954
    68  0000                     _CANCONbits	set	3951
    69  0000                     _CANSTATbits	set	3950
    70  0000                     _CIOCONbits	set	3955
    71  0000                     _ECANCONbits	set	3959
    72  0000                     _INTCONbits	set	4082
    73  0000                     _LATAbits	set	3977
    74  0000                     _LATCbits	set	3979
    75  0000                     _LATDbits	set	3980
    76  0000                     _OSCCONbits	set	4051
    77  0000                     _OSCTUNEbits	set	3995
    78  0000                     _PIE3bits	set	4003
    79  0000                     _PIR3bits	set	4004
    80  0000                     _RCONbits	set	4048
    81  0000                     _RXB0CONbits	set	3936
    82  0000                     _RXB0D0	set	3942
    83  0000                     _RXB0D1	set	3943
    84  0000                     _RXB0D2	set	3944
    85  0000                     _RXB0D3	set	3945
    86  0000                     _RXB0D4	set	3946
    87  0000                     _RXB0D5	set	3947
    88  0000                     _RXB0D6	set	3948
    89  0000                     _RXB0D7	set	3949
    90  0000                     _RXB0SIDH	set	3937
    91  0000                     _RXB0SIDL	set	3938
    92  0000                     _TRISAbits	set	3986
    93  0000                     _TRISBbits	set	3987
    94  0000                     _TRISCbits	set	3988
    95  0000                     _TRISDbits	set	3989
    96  0000                     _TRISEbits	set	3990
    97  0000                     _RXB0DLC	set	3941
    98                           
    99                           ; #config settings
   100  0000                     
   101                           	psect	cinit
   102  000444                     __pcinit:
   103                           	opt stack 0
   104  000444                     start_initialization:
   105                           	opt stack 0
   106  000444                     __initialization:
   107                           	opt stack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (2 bytes)
   110  000444  6A39               	clrf	(__pbssCOMRAM+1)& (0+255),c
   111  000446  6A38               	clrf	__pbssCOMRAM& (0+255),c
   112  000448                     end_of_initialization:
   113                           	opt stack 0
   114  000448                     __end_of__initialization:
   115                           	opt stack 0
   116  000448  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   117  00044A  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   118  00044C  0100               	movlb	0
   119  00044E  EF63  F000         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	bssCOMRAM
   122  000038                     __pbssCOMRAM:
   123                           	opt stack 0
   124  000038                     _BACK:
   125                           	opt stack 0
   126  000038                     	ds	1
   127  000039                     _FORW:
   128                           	opt stack 0
   129  000039                     	ds	1
   130                           
   131                           	psect	cstackCOMRAM
   132  000001                     __pcstackCOMRAM:
   133                           	opt stack 0
   134  000001                     ecan_receive_rxb0@mess:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138  000001                     	ds	2
   139  000003                     ??_ecan_receive_rxb0:
   140                           
   141                           ; 1 bytes @ 0x2
   142  000003                     	ds	2
   143  000005                     ??_ISR:
   144                           
   145                           ; 1 bytes @ 0x4
   146  000005                     	ds	14
   147  000013                     ISR@newMessage:
   148                           	opt stack 0
   149                           
   150                           ; 11 bytes @ 0x12
   151  000013                     	ds	11
   152  00001E                     ??_ecan_init:
   153  00001E                     ?_readADC:
   154                           	opt stack 0
   155                           
   156                           ; 2 bytes @ 0x1D
   157  00001E                     	ds	2
   158  000020                     readADC@digitalVal:
   159                           	opt stack 0
   160  000020                     ecan_init@sid0:
   161                           	opt stack 0
   162                           
   163                           ; 2 bytes @ 0x1F
   164  000020                     	ds	2
   165  000022                     ecan_init@mask0:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0x21
   169  000022                     	ds	2
   170  000024                     main@retract:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x23
   174  000024                     	ds	2
   175  000026                     main@extend:
   176                           	opt stack 0
   177                           
   178                           ; 2 bytes @ 0x25
   179  000026                     	ds	2
   180  000028                     main@actuator0:
   181                           	opt stack 0
   182                           
   183                           ; 2 bytes @ 0x27
   184  000028                     	ds	2
   185  00002A                     main@actuator1:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x29
   189  00002A                     	ds	2
   190  00002C                     main@actuator2:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x2B
   194  00002C                     	ds	2
   195  00002E                     main@actuator3:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x2D
   199  00002E                     	ds	2
   200  000030                     main@actuator4:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x2F
   204  000030                     	ds	2
   205  000032                     main@actuator5:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x31
   209  000032                     	ds	2
   210  000034                     main@actuator6:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x33
   214  000034                     	ds	2
   215  000036                     main@actuator7:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x35
   219  000036                     	ds	2
   220                           
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 43 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;  actuator7       2   53[COMRAM] unsigned int 
   231 ;;  actuator6       2   51[COMRAM] unsigned int 
   232 ;;  actuator5       2   49[COMRAM] unsigned int 
   233 ;;  actuator4       2   47[COMRAM] unsigned int 
   234 ;;  actuator3       2   45[COMRAM] unsigned int 
   235 ;;  actuator2       2   43[COMRAM] unsigned int 
   236 ;;  actuator1       2   41[COMRAM] unsigned int 
   237 ;;  actuator0       2   39[COMRAM] unsigned int 
   238 ;;  extend          2   37[COMRAM] unsigned int 
   239 ;;  retract         2   35[COMRAM] unsigned int 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   250 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   252 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   253 ;;Total ram usage:       20 bytes
   254 ;; Hardware stack levels required when called:    3
   255 ;; This function calls:
   256 ;;		_ConfigureOscillator
   257 ;;		_ecan_init
   258 ;;		_enable_interrupts
   259 ;;		_readADC
   260 ;;		_selectAN0
   261 ;;		_selectAN1
   262 ;;		_selectAN2
   263 ;;		_selectAN3
   264 ;;		_selectAN4
   265 ;;		_selectAN5
   266 ;;		_selectAN6
   267 ;;		_selectAN7
   268 ;;		_setActuatorCntrl
   269 ;;		_setAnalogIn
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text0
   276  0000C6                     __ptext0:
   277                           	opt stack 0
   278  0000C6                     _main:
   279                           	opt stack 28
   280                           
   281                           ;main.c: 46: ConfigureOscillator();
   282                           
   283                           ;incstack = 0
   284  0000C6  EC29  F002         	call	_ConfigureOscillator	;wreg free
   285                           
   286                           ;main.c: 47: ecan_init();
   287  0000CA  EC8A  F001         	call	_ecan_init	;wreg free
   288                           
   289                           ;main.c: 48: enable_interrupts();
   290  0000CE  EC30  F002         	call	_enable_interrupts	;wreg free
   291                           
   292                           ;main.c: 51: setAnalogIn();
   293  0000D2  ECE9  F001         	call	_setAnalogIn	;wreg free
   294                           
   295                           ;main.c: 52: setActuatorCntrl();
   296  0000D6  EC03  F002         	call	_setActuatorCntrl	;wreg free
   297                           
   298                           ;main.c: 53: unsigned int actuator0 = 0;
   299  0000DA  0E00               	movlw	0
   300  0000DC  6E29               	movwf	main@actuator0+1,c
   301  0000DE  0E00               	movlw	0
   302  0000E0  6E28               	movwf	main@actuator0,c
   303                           
   304                           ;main.c: 54: unsigned int actuator1 = 0;
   305  0000E2  0E00               	movlw	0
   306  0000E4  6E2B               	movwf	main@actuator1+1,c
   307  0000E6  0E00               	movlw	0
   308  0000E8  6E2A               	movwf	main@actuator1,c
   309                           
   310                           ;main.c: 55: unsigned int actuator2 = 0;
   311  0000EA  0E00               	movlw	0
   312  0000EC  6E2D               	movwf	main@actuator2+1,c
   313  0000EE  0E00               	movlw	0
   314  0000F0  6E2C               	movwf	main@actuator2,c
   315                           
   316                           ;main.c: 56: unsigned int actuator3 = 0;
   317  0000F2  0E00               	movlw	0
   318  0000F4  6E2F               	movwf	main@actuator3+1,c
   319  0000F6  0E00               	movlw	0
   320  0000F8  6E2E               	movwf	main@actuator3,c
   321                           
   322                           ;main.c: 57: unsigned int actuator4 = 0;
   323  0000FA  0E00               	movlw	0
   324  0000FC  6E31               	movwf	main@actuator4+1,c
   325  0000FE  0E00               	movlw	0
   326  000100  6E30               	movwf	main@actuator4,c
   327                           
   328                           ;main.c: 58: unsigned int actuator5 = 0;
   329  000102  0E00               	movlw	0
   330  000104  6E33               	movwf	main@actuator5+1,c
   331  000106  0E00               	movlw	0
   332  000108  6E32               	movwf	main@actuator5,c
   333                           
   334                           ;main.c: 59: unsigned int actuator6 = 0;
   335  00010A  0E00               	movlw	0
   336  00010C  6E35               	movwf	main@actuator6+1,c
   337  00010E  0E00               	movlw	0
   338  000110  6E34               	movwf	main@actuator6,c
   339                           
   340                           ;main.c: 60: unsigned int actuator7 = 0;
   341  000112  0E00               	movlw	0
   342  000114  6E37               	movwf	main@actuator7+1,c
   343  000116  0E00               	movlw	0
   344  000118  6E36               	movwf	main@actuator7,c
   345                           
   346                           ;main.c: 64: unsigned int retract = 200;
   347  00011A  0E00               	movlw	0
   348  00011C  6E25               	movwf	main@retract+1,c
   349  00011E  0EC8               	movlw	200
   350  000120  6E24               	movwf	main@retract,c
   351                           
   352                           ;main.c: 65: unsigned int extend = 800;
   353  000122  0E03               	movlw	3
   354  000124  6E27               	movwf	main@extend+1,c
   355  000126  0E20               	movlw	32
   356  000128  6E26               	movwf	main@extend,c
   357  00012A                     l1150:
   358                           
   359                           ;main.c: 67: {
   360                           ;main.c: 71: selectAN0();
   361  00012A  EC59  F002         	call	_selectAN0	;wreg free
   362                           
   363                           ;main.c: 72: actuator0 = readADC();
   364  00012E  EC15  F002         	call	_readADC	;wreg free
   365  000132  C01E  F028         	movff	?_readADC,main@actuator0
   366  000136  C01F  F029         	movff	?_readADC+1,main@actuator0+1
   367                           
   368                           ;main.c: 76: selectAN1();
   369  00013A  EC54  F002         	call	_selectAN1	;wreg free
   370                           
   371                           ;main.c: 77: actuator1 = readADC();
   372  00013E  EC15  F002         	call	_readADC	;wreg free
   373  000142  C01E  F02A         	movff	?_readADC,main@actuator1
   374  000146  C01F  F02B         	movff	?_readADC+1,main@actuator1+1
   375                           
   376                           ;main.c: 81: selectAN2();
   377  00014A  EC4F  F002         	call	_selectAN2	;wreg free
   378                           
   379                           ;main.c: 82: actuator2 = readADC();
   380  00014E  EC15  F002         	call	_readADC	;wreg free
   381  000152  C01E  F02C         	movff	?_readADC,main@actuator2
   382  000156  C01F  F02D         	movff	?_readADC+1,main@actuator2+1
   383                           
   384                           ;main.c: 86: selectAN3();
   385  00015A  EC4A  F002         	call	_selectAN3	;wreg free
   386                           
   387                           ;main.c: 87: actuator3 = readADC();
   388  00015E  EC15  F002         	call	_readADC	;wreg free
   389  000162  C01E  F02E         	movff	?_readADC,main@actuator3
   390  000166  C01F  F02F         	movff	?_readADC+1,main@actuator3+1
   391                           
   392                           ;main.c: 91: selectAN4();
   393  00016A  EC45  F002         	call	_selectAN4	;wreg free
   394                           
   395                           ;main.c: 92: actuator4 = readADC();
   396  00016E  EC15  F002         	call	_readADC	;wreg free
   397  000172  C01E  F030         	movff	?_readADC,main@actuator4
   398  000176  C01F  F031         	movff	?_readADC+1,main@actuator4+1
   399                           
   400                           ;main.c: 96: selectAN5();
   401  00017A  EC40  F002         	call	_selectAN5	;wreg free
   402                           
   403                           ;main.c: 97: actuator5 = readADC();
   404  00017E  EC15  F002         	call	_readADC	;wreg free
   405  000182  C01E  F032         	movff	?_readADC,main@actuator5
   406  000186  C01F  F033         	movff	?_readADC+1,main@actuator5+1
   407                           
   408                           ;main.c: 101: selectAN6();
   409  00018A  EC3B  F002         	call	_selectAN6	;wreg free
   410                           
   411                           ;main.c: 102: actuator6 = readADC();
   412  00018E  EC15  F002         	call	_readADC	;wreg free
   413  000192  C01E  F034         	movff	?_readADC,main@actuator6
   414  000196  C01F  F035         	movff	?_readADC+1,main@actuator6+1
   415                           
   416                           ;main.c: 106: selectAN7();
   417  00019A  EC36  F002         	call	_selectAN7	;wreg free
   418                           
   419                           ;main.c: 107: actuator7 = readADC();
   420  00019E  EC15  F002         	call	_readADC	;wreg free
   421  0001A2  C01E  F036         	movff	?_readADC,main@actuator7
   422  0001A6  C01F  F037         	movff	?_readADC+1,main@actuator7+1
   423                           
   424                           ;main.c: 109: if(FORW == 0 && BACK == 0)
   425  0001AA  5039               	movf	_FORW,w,c
   426  0001AC  A4D8               	btfss	status,2,c
   427  0001AE  D013               	goto	l1188
   428  0001B0  5038               	movf	_BACK,w,c
   429  0001B2  A4D8               	btfss	status,2,c
   430  0001B4  D010               	goto	l1188
   431                           
   432                           ;main.c: 110: {
   433                           ;main.c: 112: LATCbits.LATC0 = 0;
   434  0001B6  908B               	bcf	3979,0,c	;volatile
   435                           
   436                           ;main.c: 113: LATCbits.LATC1 = 1;
   437  0001B8  828B               	bsf	3979,1,c	;volatile
   438                           
   439                           ;main.c: 115: LATCbits.LATC2 = 0;
   440  0001BA  948B               	bcf	3979,2,c	;volatile
   441                           
   442                           ;main.c: 116: LATCbits.LATC3 = 1;
   443  0001BC  868B               	bsf	3979,3,c	;volatile
   444                           
   445                           ;main.c: 118: LATDbits.LATD0 = 0;
   446  0001BE  908C               	bcf	3980,0,c	;volatile
   447                           
   448                           ;main.c: 119: LATDbits.LATD1 = 1;
   449  0001C0  828C               	bsf	3980,1,c	;volatile
   450                           
   451                           ;main.c: 121: LATDbits.LATD2 = 0;
   452  0001C2  948C               	bcf	3980,2,c	;volatile
   453                           
   454                           ;main.c: 122: LATDbits.LATD3 = 1;
   455  0001C4  868C               	bsf	3980,3,c	;volatile
   456                           
   457                           ;main.c: 124: LATCbits.LATC4 = 0;
   458  0001C6  988B               	bcf	3979,4,c	;volatile
   459                           
   460                           ;main.c: 125: LATCbits.LATC5 = 1;
   461  0001C8  8A8B               	bsf	3979,5,c	;volatile
   462                           
   463                           ;main.c: 127: LATCbits.LATC6 = 0;
   464  0001CA  9C8B               	bcf	3979,6,c	;volatile
   465                           
   466                           ;main.c: 128: LATCbits.LATC7 = 1;
   467  0001CC  8E8B               	bsf	3979,7,c	;volatile
   468                           
   469                           ;main.c: 130: LATDbits.LATD4 = 0;
   470  0001CE  988C               	bcf	3980,4,c	;volatile
   471                           
   472                           ;main.c: 131: LATDbits.LATD5 = 1;
   473  0001D0  8A8C               	bsf	3980,5,c	;volatile
   474                           
   475                           ;main.c: 133: LATDbits.LATD6 = 0;
   476  0001D2  9C8C               	bcf	3980,6,c	;volatile
   477  0001D4  D015               	goto	L1
   478  0001D6                     l1188:
   479  0001D6  0439               	decf	_FORW,w,c
   480  0001D8  A4D8               	btfss	status,2,c
   481  0001DA  D014               	goto	l1194
   482  0001DC  5038               	movf	_BACK,w,c
   483  0001DE  A4D8               	btfss	status,2,c
   484  0001E0  D011               	goto	l1194
   485                           
   486                           ;main.c: 136: {
   487                           ;main.c: 138: LATCbits.LATC0 = 1;
   488  0001E2  808B               	bsf	3979,0,c	;volatile
   489                           
   490                           ;main.c: 139: LATCbits.LATC1 = 1;
   491  0001E4  828B               	bsf	3979,1,c	;volatile
   492                           
   493                           ;main.c: 141: LATCbits.LATC2 = 1;
   494  0001E6  848B               	bsf	3979,2,c	;volatile
   495                           
   496                           ;main.c: 142: LATCbits.LATC3 = 1;
   497  0001E8  868B               	bsf	3979,3,c	;volatile
   498                           
   499                           ;main.c: 144: LATDbits.LATD0 = 1;
   500  0001EA  808C               	bsf	3980,0,c	;volatile
   501                           
   502                           ;main.c: 145: LATDbits.LATD1 = 1;
   503  0001EC  828C               	bsf	3980,1,c	;volatile
   504                           
   505                           ;main.c: 147: LATDbits.LATD2 = 1;
   506  0001EE  848C               	bsf	3980,2,c	;volatile
   507                           
   508                           ;main.c: 148: LATDbits.LATD3 = 1;
   509  0001F0  868C               	bsf	3980,3,c	;volatile
   510                           
   511                           ;main.c: 150: LATCbits.LATC4 = 1;
   512  0001F2  888B               	bsf	3979,4,c	;volatile
   513                           
   514                           ;main.c: 151: LATCbits.LATC5 = 1;
   515  0001F4  8A8B               	bsf	3979,5,c	;volatile
   516                           
   517                           ;main.c: 153: LATCbits.LATC6 = 1;
   518  0001F6  8C8B               	bsf	3979,6,c	;volatile
   519                           
   520                           ;main.c: 154: LATCbits.LATC7 = 1;
   521  0001F8  8E8B               	bsf	3979,7,c	;volatile
   522                           
   523                           ;main.c: 156: LATDbits.LATD4 = 1;
   524  0001FA  888C               	bsf	3980,4,c	;volatile
   525                           
   526                           ;main.c: 157: LATDbits.LATD5 = 1;
   527  0001FC  8A8C               	bsf	3980,5,c	;volatile
   528                           
   529                           ;main.c: 159: LATDbits.LATD6 = 1;
   530  0001FE  8C8C               	bsf	3980,6,c	;volatile
   531  000200                     L1:
   532                           
   533                           ;main.c: 160: LATDbits.LATD7 = 1;
   534  000200  8E8C               	bsf	3980,7,c	;volatile
   535                           
   536                           ;main.c: 161: } else if (FORW == 0 && BACK == 1)
   537  000202  D793               	goto	l1150
   538  000204                     l1194:
   539  000204  5039               	movf	_FORW,w,c
   540  000206  A4D8               	btfss	status,2,c
   541  000208  D790               	goto	l1150
   542  00020A  0438               	decf	_BACK,w,c
   543  00020C  A4D8               	btfss	status,2,c
   544  00020E  D78D               	goto	l1150
   545                           
   546                           ;main.c: 162: {
   547                           ;main.c: 164: LATCbits.LATC0 = 0;
   548  000210  908B               	bcf	3979,0,c	;volatile
   549                           
   550                           ;main.c: 165: LATCbits.LATC1 = 0;
   551  000212  928B               	bcf	3979,1,c	;volatile
   552                           
   553                           ;main.c: 167: LATCbits.LATC2 = 0;
   554  000214  948B               	bcf	3979,2,c	;volatile
   555                           
   556                           ;main.c: 168: LATCbits.LATC3 = 0;
   557  000216  968B               	bcf	3979,3,c	;volatile
   558                           
   559                           ;main.c: 170: LATDbits.LATD0 = 0;
   560  000218  908C               	bcf	3980,0,c	;volatile
   561                           
   562                           ;main.c: 171: LATDbits.LATD1 = 0;
   563  00021A  928C               	bcf	3980,1,c	;volatile
   564                           
   565                           ;main.c: 173: LATDbits.LATD2 = 0;
   566  00021C  948C               	bcf	3980,2,c	;volatile
   567                           
   568                           ;main.c: 174: LATDbits.LATD3 = 0;
   569  00021E  968C               	bcf	3980,3,c	;volatile
   570                           
   571                           ;main.c: 176: LATCbits.LATC4 = 0;
   572  000220  988B               	bcf	3979,4,c	;volatile
   573                           
   574                           ;main.c: 177: LATCbits.LATC5 = 0;
   575  000222  9A8B               	bcf	3979,5,c	;volatile
   576                           
   577                           ;main.c: 179: LATCbits.LATC6 = 0;
   578  000224  9C8B               	bcf	3979,6,c	;volatile
   579                           
   580                           ;main.c: 180: LATCbits.LATC7 = 0;
   581  000226  9E8B               	bcf	3979,7,c	;volatile
   582                           
   583                           ;main.c: 182: LATDbits.LATD4 = 0;
   584  000228  988C               	bcf	3980,4,c	;volatile
   585                           
   586                           ;main.c: 183: LATDbits.LATD5 = 0;
   587  00022A  9A8C               	bcf	3980,5,c	;volatile
   588                           
   589                           ;main.c: 185: LATDbits.LATD6 = 0;
   590  00022C  9C8C               	bcf	3980,6,c	;volatile
   591                           
   592                           ;main.c: 186: LATDbits.LATD7 = 0;
   593  00022E  9E8C               	bcf	3980,7,c	;volatile
   594  000230  D77C               	goto	l1150
   595  000232                     __end_of_main:
   596                           	opt stack 0
   597                           status	equ	0xFD8
   598                           
   599 ;; *************** function _setAnalogIn *****************
   600 ;; Defined at:
   601 ;;		line 24 in file "system.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		None
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    2
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text1
   630  0003D2                     __ptext1:
   631                           	opt stack 0
   632  0003D2                     _setAnalogIn:
   633                           	opt stack 28
   634                           
   635                           ;system.c: 27: ADCON1bits.PCFG = 0;
   636                           
   637                           ;incstack = 0
   638  0003D2  90C1               	bcf	4033,0,c	;volatile
   639  0003D4  92C1               	bcf	4033,1,c	;volatile
   640  0003D6  94C1               	bcf	4033,2,c	;volatile
   641  0003D8  96C1               	bcf	4033,3,c	;volatile
   642                           
   643                           ;system.c: 28: ADCON2bits.ADFM = 1;
   644  0003DA  8EC0               	bsf	4032,7,c	;volatile
   645                           
   646                           ;system.c: 32: ADCON1bits.VCFG0 = 0;
   647  0003DC  98C1               	bcf	4033,4,c	;volatile
   648                           
   649                           ;system.c: 33: ADCON1bits.VCFG1 = 0;
   650  0003DE  9AC1               	bcf	4033,5,c	;volatile
   651                           
   652                           ;system.c: 36: ADCON2bits.ACQT2 = 0;
   653  0003E0  9AC0               	bcf	4032,5,c	;volatile
   654                           
   655                           ;system.c: 37: ADCON2bits.ACQT1 = 1;
   656  0003E2  88C0               	bsf	4032,4,c	;volatile
   657                           
   658                           ;system.c: 38: ADCON2bits.ACQT0 = 0;
   659  0003E4  96C0               	bcf	4032,3,c	;volatile
   660                           
   661                           ;system.c: 41: ADCON2bits.ADCS2 = 0;
   662  0003E6  94C0               	bcf	4032,2,c	;volatile
   663                           
   664                           ;system.c: 42: ADCON2bits.ADCS1 = 1;
   665  0003E8  82C0               	bsf	4032,1,c	;volatile
   666                           
   667                           ;system.c: 43: ADCON2bits.ADCS0 = 0;
   668  0003EA  90C0               	bcf	4032,0,c	;volatile
   669                           
   670                           ;system.c: 47: TRISAbits.TRISA0 = 1;
   671  0003EC  8092               	bsf	3986,0,c	;volatile
   672                           
   673                           ;system.c: 48: TRISAbits.TRISA1 = 1;
   674  0003EE  8292               	bsf	3986,1,c	;volatile
   675                           
   676                           ;system.c: 49: TRISAbits.TRISA2 = 1;
   677  0003F0  8492               	bsf	3986,2,c	;volatile
   678                           
   679                           ;system.c: 50: TRISAbits.TRISA3 = 1;
   680  0003F2  8692               	bsf	3986,3,c	;volatile
   681                           
   682                           ;system.c: 51: TRISAbits.TRISA5 = 1;
   683  0003F4  8A92               	bsf	3986,5,c	;volatile
   684                           
   685                           ;system.c: 52: TRISEbits.TRISE0 = 1;
   686  0003F6  8096               	bsf	3990,0,c	;volatile
   687                           
   688                           ;system.c: 53: TRISEbits.TRISE1 = 1;
   689  0003F8  8296               	bsf	3990,1,c	;volatile
   690                           
   691                           ;system.c: 54: TRISEbits.TRISE2 = 1;
   692  0003FA  8496               	bsf	3990,2,c	;volatile
   693                           
   694                           ;system.c: 55: TRISBbits.TRISB1 = 1;
   695  0003FC  8293               	bsf	3987,1,c	;volatile
   696                           
   697                           ;system.c: 56: TRISBbits.TRISB4 = 1;
   698  0003FE  8893               	bsf	3987,4,c	;volatile
   699                           
   700                           ;system.c: 57: TRISBbits.TRISB0 = 1;
   701  000400  8093               	bsf	3987,0,c	;volatile
   702                           
   703                           ;system.c: 60: ADCON0bits.ADON = 1;
   704  000402  80C2               	bsf	4034,0,c	;volatile
   705  000404  0012               	return		;funcret
   706  000406                     __end_of_setAnalogIn:
   707                           	opt stack 0
   708                           status	equ	0xFD8
   709                           
   710 ;; *************** function _setActuatorCntrl *****************
   711 ;; Defined at:
   712 ;;		line 63 in file "system.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		None
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    2
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text2
   741  000406                     __ptext2:
   742                           	opt stack 0
   743  000406                     _setActuatorCntrl:
   744                           	opt stack 28
   745                           
   746                           ;system.c: 66: TRISDbits.TRISD0 = 0;
   747                           
   748                           ;incstack = 0
   749  000406  9095               	bcf	3989,0,c	;volatile
   750                           
   751                           ;system.c: 67: TRISDbits.TRISD1 = 0;
   752  000408  9295               	bcf	3989,1,c	;volatile
   753                           
   754                           ;system.c: 68: TRISDbits.TRISD2 = 0;
   755  00040A  9495               	bcf	3989,2,c	;volatile
   756                           
   757                           ;system.c: 69: TRISDbits.TRISD3 = 0;
   758  00040C  9695               	bcf	3989,3,c	;volatile
   759                           
   760                           ;system.c: 70: TRISDbits.TRISD4 = 0;
   761  00040E  9895               	bcf	3989,4,c	;volatile
   762                           
   763                           ;system.c: 71: TRISDbits.TRISD5 = 0;
   764  000410  9A95               	bcf	3989,5,c	;volatile
   765                           
   766                           ;system.c: 72: TRISDbits.TRISD6 = 0;
   767  000412  9C95               	bcf	3989,6,c	;volatile
   768                           
   769                           ;system.c: 73: TRISDbits.TRISD7 = 0;
   770  000414  9E95               	bcf	3989,7,c	;volatile
   771                           
   772                           ;system.c: 75: TRISCbits.TRISC0 = 0;
   773  000416  9094               	bcf	3988,0,c	;volatile
   774                           
   775                           ;system.c: 76: TRISCbits.TRISC1 = 0;
   776  000418  9294               	bcf	3988,1,c	;volatile
   777                           
   778                           ;system.c: 77: TRISCbits.TRISC2 = 0;
   779  00041A  9494               	bcf	3988,2,c	;volatile
   780                           
   781                           ;system.c: 78: TRISCbits.TRISC3 = 0;
   782  00041C  9694               	bcf	3988,3,c	;volatile
   783                           
   784                           ;system.c: 79: TRISCbits.TRISC4 = 0;
   785  00041E  9894               	bcf	3988,4,c	;volatile
   786                           
   787                           ;system.c: 80: TRISCbits.TRISC5 = 0;
   788  000420  9A94               	bcf	3988,5,c	;volatile
   789                           
   790                           ;system.c: 81: TRISCbits.TRISC6 = 0;
   791  000422  9C94               	bcf	3988,6,c	;volatile
   792                           
   793                           ;system.c: 82: TRISCbits.TRISC7 = 0;
   794  000424  9E94               	bcf	3988,7,c	;volatile
   795                           
   796                           ;system.c: 85: TRISAbits.TRISA7 = 0;
   797  000426  9E92               	bcf	3986,7,c	;volatile
   798  000428  0012               	return		;funcret
   799  00042A                     __end_of_setActuatorCntrl:
   800                           	opt stack 0
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function _selectAN7 *****************
   804 ;; Defined at:
   805 ;;		line 68 in file "ADC_Config.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    2
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text3
   834  00046C                     __ptext3:
   835                           	opt stack 0
   836  00046C                     _selectAN7:
   837                           	opt stack 28
   838                           
   839                           ;ADC_Config.c: 70: ADCON0bits.CHS = 0x07;
   840                           
   841                           ;incstack = 0
   842  00046C  50C2               	movf	4034,w,c	;volatile
   843  00046E  0BC3               	andlw	-61
   844  000470  091C               	iorlw	28
   845  000472  6EC2               	movwf	4034,c	;volatile
   846  000474  0012               	return		;funcret
   847  000476                     __end_of_selectAN7:
   848                           	opt stack 0
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function _selectAN6 *****************
   852 ;; Defined at:
   853 ;;		line 62 in file "ADC_Config.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    2
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text4
   882  000476                     __ptext4:
   883                           	opt stack 0
   884  000476                     _selectAN6:
   885                           	opt stack 28
   886                           
   887                           ;ADC_Config.c: 64: ADCON0bits.CHS = 0x06;
   888                           
   889                           ;incstack = 0
   890  000476  50C2               	movf	4034,w,c	;volatile
   891  000478  0BC3               	andlw	-61
   892  00047A  0918               	iorlw	24
   893  00047C  6EC2               	movwf	4034,c	;volatile
   894  00047E  0012               	return		;funcret
   895  000480                     __end_of_selectAN6:
   896                           	opt stack 0
   897                           status	equ	0xFD8
   898                           
   899 ;; *************** function _selectAN5 *****************
   900 ;; Defined at:
   901 ;;		line 56 in file "ADC_Config.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    2
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text5
   930  000480                     __ptext5:
   931                           	opt stack 0
   932  000480                     _selectAN5:
   933                           	opt stack 28
   934                           
   935                           ;ADC_Config.c: 58: ADCON0bits.CHS = 0x05;
   936                           
   937                           ;incstack = 0
   938  000480  50C2               	movf	4034,w,c	;volatile
   939  000482  0BC3               	andlw	-61
   940  000484  0914               	iorlw	20
   941  000486  6EC2               	movwf	4034,c	;volatile
   942  000488  0012               	return		;funcret
   943  00048A                     __end_of_selectAN5:
   944                           	opt stack 0
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _selectAN4 *****************
   948 ;; Defined at:
   949 ;;		line 50 in file "ADC_Config.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    2
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text6
   978  00048A                     __ptext6:
   979                           	opt stack 0
   980  00048A                     _selectAN4:
   981                           	opt stack 28
   982                           
   983                           ;ADC_Config.c: 52: ADCON0bits.CHS = 0x04;
   984                           
   985                           ;incstack = 0
   986  00048A  50C2               	movf	4034,w,c	;volatile
   987  00048C  0BC3               	andlw	-61
   988  00048E  0910               	iorlw	16
   989  000490  6EC2               	movwf	4034,c	;volatile
   990  000492  0012               	return		;funcret
   991  000494                     __end_of_selectAN4:
   992                           	opt stack 0
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _selectAN3 *****************
   996 ;; Defined at:
   997 ;;		line 44 in file "ADC_Config.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    2
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text7
  1026  000494                     __ptext7:
  1027                           	opt stack 0
  1028  000494                     _selectAN3:
  1029                           	opt stack 28
  1030                           
  1031                           ;ADC_Config.c: 46: ADCON0bits.CHS = 0x03;
  1032                           
  1033                           ;incstack = 0
  1034  000494  50C2               	movf	4034,w,c	;volatile
  1035  000496  0BC3               	andlw	-61
  1036  000498  090C               	iorlw	12
  1037  00049A  6EC2               	movwf	4034,c	;volatile
  1038  00049C  0012               	return		;funcret
  1039  00049E                     __end_of_selectAN3:
  1040                           	opt stack 0
  1041                           status	equ	0xFD8
  1042                           
  1043 ;; *************** function _selectAN2 *****************
  1044 ;; Defined at:
  1045 ;;		line 38 in file "ADC_Config.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    2
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text8
  1074  00049E                     __ptext8:
  1075                           	opt stack 0
  1076  00049E                     _selectAN2:
  1077                           	opt stack 28
  1078                           
  1079                           ;ADC_Config.c: 40: ADCON0bits.CHS = 0x02;
  1080                           
  1081                           ;incstack = 0
  1082  00049E  50C2               	movf	4034,w,c	;volatile
  1083  0004A0  0BC3               	andlw	-61
  1084  0004A2  0908               	iorlw	8
  1085  0004A4  6EC2               	movwf	4034,c	;volatile
  1086  0004A6  0012               	return		;funcret
  1087  0004A8                     __end_of_selectAN2:
  1088                           	opt stack 0
  1089                           status	equ	0xFD8
  1090                           
  1091 ;; *************** function _selectAN1 *****************
  1092 ;; Defined at:
  1093 ;;		line 32 in file "ADC_Config.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    2
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text9
  1122  0004A8                     __ptext9:
  1123                           	opt stack 0
  1124  0004A8                     _selectAN1:
  1125                           	opt stack 28
  1126                           
  1127                           ;ADC_Config.c: 34: ADCON0bits.CHS = 0x01;
  1128                           
  1129                           ;incstack = 0
  1130  0004A8  50C2               	movf	4034,w,c	;volatile
  1131  0004AA  0BC3               	andlw	-61
  1132  0004AC  0904               	iorlw	4
  1133  0004AE  6EC2               	movwf	4034,c	;volatile
  1134  0004B0  0012               	return		;funcret
  1135  0004B2                     __end_of_selectAN1:
  1136                           	opt stack 0
  1137                           status	equ	0xFD8
  1138                           
  1139 ;; *************** function _selectAN0 *****************
  1140 ;; Defined at:
  1141 ;;		line 26 in file "ADC_Config.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		None
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    2
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text10
  1170  0004B2                     __ptext10:
  1171                           	opt stack 0
  1172  0004B2                     _selectAN0:
  1173                           	opt stack 28
  1174                           
  1175                           ;ADC_Config.c: 28: ADCON0bits.CHS = 0x00;
  1176                           
  1177                           ;incstack = 0
  1178  0004B2  94C2               	bcf	4034,2,c	;volatile
  1179  0004B4  96C2               	bcf	4034,3,c	;volatile
  1180  0004B6  98C2               	bcf	4034,4,c	;volatile
  1181  0004B8  9AC2               	bcf	4034,5,c	;volatile
  1182  0004BA  0012               	return		;funcret
  1183  0004BC                     __end_of_selectAN0:
  1184                           	opt stack 0
  1185                           status	equ	0xFD8
  1186                           
  1187 ;; *************** function _readADC *****************
  1188 ;; Defined at:
  1189 ;;		line 73 in file "ADC_Config.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  digitalVal      2   31[COMRAM] unsigned int 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  2   29[COMRAM] unsigned int 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1207 ;;Total ram usage:        4 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    2
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text11
  1218  00042A                     __ptext11:
  1219                           	opt stack 0
  1220  00042A                     _readADC:
  1221                           	opt stack 28
  1222                           
  1223                           ;ADC_Config.c: 75: unsigned int digitalVal;
  1224                           ;ADC_Config.c: 77: ADCON0bits.GO_NOT_DONE = 1;
  1225                           
  1226                           ;incstack = 0
  1227  00042A  82C2               	bsf	4034,1,c	;volatile
  1228  00042C                     l117:
  1229  00042C  B2C2               	btfsc	4034,1,c	;volatile
  1230  00042E  D7FE               	goto	l117
  1231                           
  1232                           ;ADC_Config.c: 83: digitalVal = ADRESL;
  1233  000430  CFC3 F020          	movff	4035,readADC@digitalVal	;volatile
  1234  000434  6A21               	clrf	readADC@digitalVal+1,c
  1235                           
  1236                           ;ADC_Config.c: 84: digitalVal += ADRESH << 8;
  1237  000436  50C4               	movf	4036,w,c	;volatile
  1238  000438  2621               	addwf	readADC@digitalVal+1,f,c
  1239                           
  1240                           ;ADC_Config.c: 85: return digitalVal;
  1241  00043A  C020  F01E         	movff	readADC@digitalVal,?_readADC
  1242  00043E  C021  F01F         	movff	readADC@digitalVal+1,?_readADC+1
  1243  000442  0012               	return	
  1244  000444                     __end_of_readADC:
  1245                           	opt stack 0
  1246                           status	equ	0xFD8
  1247                           
  1248 ;; *************** function _enable_interrupts *****************
  1249 ;; Defined at:
  1250 ;;		line 39 in file "config.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		None
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    2
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text12
  1279  000460                     __ptext12:
  1280                           	opt stack 0
  1281  000460                     _enable_interrupts:
  1282                           	opt stack 28
  1283                           
  1284                           ;config.c: 42: RCONbits.IPEN = 0;
  1285                           
  1286                           ;incstack = 0
  1287  000460  9ED0               	bcf	4048,7,c	;volatile
  1288                           
  1289                           ;config.c: 43: INTCONbits.GIE = 1;
  1290  000462  8EF2               	bsf	intcon,7,c	;volatile
  1291                           
  1292                           ;config.c: 44: INTCONbits.PEIE = 1;
  1293  000464  8CF2               	bsf	intcon,6,c	;volatile
  1294                           
  1295                           ;config.c: 47: PIE3bits.RXB0IE = 1;
  1296  000466  80A3               	bsf	4003,0,c	;volatile
  1297                           
  1298                           ;config.c: 48: PIE3bits.RXB1IE = 1;
  1299  000468  82A3               	bsf	4003,1,c	;volatile
  1300  00046A  0012               	return		;funcret
  1301  00046C                     __end_of_enable_interrupts:
  1302                           	opt stack 0
  1303                           intcon	equ	0xFF2
  1304                           status	equ	0xFD8
  1305                           
  1306 ;; *************** function _ecan_init *****************
  1307 ;; Defined at:
  1308 ;;		line 11 in file "can.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  mask0           2   33[COMRAM] short 
  1313 ;;  sid0            2   31[COMRAM] short 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1326 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1327 ;;Total ram usage:        6 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    2
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text13
  1338  000314                     __ptext13:
  1339                           	opt stack 0
  1340  000314                     _ecan_init:
  1341                           	opt stack 28
  1342                           
  1343                           ;can.c: 14: TRISBbits.TRISB2 = 0;
  1344                           
  1345                           ;incstack = 0
  1346  000314  9493               	bcf	3987,2,c	;volatile
  1347                           
  1348                           ;can.c: 15: TRISBbits.TRISB3 = 1;
  1349  000316  8693               	bsf	3987,3,c	;volatile
  1350                           
  1351                           ;can.c: 18: CANCONbits.REQOP2 = 1;
  1352  000318  8E6F               	bsf	3951,7,c	;volatile
  1353  00031A                     l225:
  1354  00031A  AE6E               	btfss	3950,7,c	;volatile
  1355  00031C  AC6E               	btfss	3950,6,c	;volatile
  1356  00031E  D002               	goto	l229
  1357  000320  BA6E               	btfsc	3950,5,c	;volatile
  1358  000322  D7FB               	goto	l225
  1359  000324                     l229:
  1360                           
  1361                           ;can.c: 26: CIOCONbits.ENDRHI = 0;
  1362  000324  9A73               	bcf	3955,5,c	;volatile
  1363                           
  1364                           ;can.c: 29: BRGCON1bits.SJW1 = 0;
  1365  000326  9E70               	bcf	3952,7,c	;volatile
  1366                           
  1367                           ;can.c: 30: BRGCON1bits.SJW0 = 0;
  1368  000328  9C70               	bcf	3952,6,c	;volatile
  1369                           
  1370                           ;can.c: 31: BRGCON1bits.BRP5 = 0;
  1371  00032A  9A70               	bcf	3952,5,c	;volatile
  1372                           
  1373                           ;can.c: 32: BRGCON1bits.BRP4 = 0;
  1374  00032C  9870               	bcf	3952,4,c	;volatile
  1375                           
  1376                           ;can.c: 33: BRGCON1bits.BRP3 = 0;
  1377  00032E  9670               	bcf	3952,3,c	;volatile
  1378                           
  1379                           ;can.c: 34: BRGCON1bits.BRP2 = 0;
  1380  000330  9470               	bcf	3952,2,c	;volatile
  1381                           
  1382                           ;can.c: 35: BRGCON1bits.BRP1 = 0;
  1383  000332  9270               	bcf	3952,1,c	;volatile
  1384                           
  1385                           ;can.c: 36: BRGCON1bits.BRP0 = 1;
  1386  000334  8070               	bsf	3952,0,c	;volatile
  1387                           
  1388                           ;can.c: 38: BRGCON2bits.SEG2PHTS = 1;
  1389  000336  8E71               	bsf	3953,7,c	;volatile
  1390                           
  1391                           ;can.c: 39: BRGCON2bits.SAM = 1;
  1392  000338  8C71               	bsf	3953,6,c	;volatile
  1393                           
  1394                           ;can.c: 40: BRGCON2bits.SEG1PH2 = 0;
  1395  00033A  9A71               	bcf	3953,5,c	;volatile
  1396                           
  1397                           ;can.c: 41: BRGCON2bits.SEG1PH1 = 0;
  1398  00033C  9871               	bcf	3953,4,c	;volatile
  1399                           
  1400                           ;can.c: 42: BRGCON2bits.SEG1PH0 = 1;
  1401  00033E  8671               	bsf	3953,3,c	;volatile
  1402                           
  1403                           ;can.c: 43: BRGCON2bits.PRSEG2 = 0;
  1404  000340  9471               	bcf	3953,2,c	;volatile
  1405                           
  1406                           ;can.c: 44: BRGCON2bits.PRSEG1 = 1;
  1407  000342  8271               	bsf	3953,1,c	;volatile
  1408                           
  1409                           ;can.c: 45: BRGCON2bits.PRSEG0 = 0;
  1410  000344  9071               	bcf	3953,0,c	;volatile
  1411                           
  1412                           ;can.c: 49: BRGCON3bits.SEG2PH2 = 0;
  1413  000346  9472               	bcf	3954,2,c	;volatile
  1414                           
  1415                           ;can.c: 50: BRGCON3bits. SEG2PH1 = 0;
  1416  000348  9272               	bcf	3954,1,c	;volatile
  1417                           
  1418                           ;can.c: 51: BRGCON3bits. SEG2PH0 = 1;
  1419  00034A  8072               	bsf	3954,0,c	;volatile
  1420                           
  1421                           ;can.c: 54: ECANCONbits.MDSEL1 = 0;
  1422  00034C  9E77               	bcf	3959,7,c	;volatile
  1423                           
  1424                           ;can.c: 55: ECANCONbits.MDSEL0 = 0;
  1425  00034E  9C77               	bcf	3959,6,c	;volatile
  1426                           
  1427                           ;can.c: 62: RXB0CONbits.RXM1 = 0;
  1428  000350  9C60               	bcf	3936,6,c	;volatile
  1429                           
  1430                           ;can.c: 63: RXB0CONbits.RXM0 = 1;
  1431  000352  8A60               	bsf	3936,5,c	;volatile
  1432                           
  1433                           ;can.c: 78: short sid0 = 0x00A;
  1434  000354  0E00               	movlw	0
  1435  000356  6E21               	movwf	ecan_init@sid0+1,c
  1436  000358  0E0A               	movlw	10
  1437  00035A  6E20               	movwf	ecan_init@sid0,c
  1438                           
  1439                           ;can.c: 79: short mask0 = 0x7FF;
  1440  00035C  0E07               	movlw	7
  1441  00035E  6E23               	movwf	ecan_init@mask0+1,c
  1442  000360  6822               	setf	ecan_init@mask0,c
  1443                           
  1444                           ;can.c: 81: RXF0SIDH = sid0 >> 3;
  1445  000362  C020  F01E         	movff	ecan_init@sid0,??_ecan_init
  1446  000366  C021  F01F         	movff	ecan_init@sid0+1,??_ecan_init+1
  1447  00036A  341F               	rlcf	??_ecan_init+1,w,c
  1448  00036C  321F               	rrcf	??_ecan_init+1,f,c
  1449  00036E  321E               	rrcf	??_ecan_init,f,c
  1450  000370  341F               	rlcf	??_ecan_init+1,w,c
  1451  000372  321F               	rrcf	??_ecan_init+1,f,c
  1452  000374  321E               	rrcf	??_ecan_init,f,c
  1453  000376  341F               	rlcf	??_ecan_init+1,w,c
  1454  000378  321F               	rrcf	??_ecan_init+1,f,c
  1455  00037A  321E               	rrcf	??_ecan_init,f,c
  1456  00037C  501E               	movf	??_ecan_init,w,c
  1457  00037E  010F               	movlb	15	; () banked
  1458  000380  6F00               	movwf	0,b	;volatile
  1459                           
  1460                           ; BSR set to: 15
  1461                           ;can.c: 82: RXF0SIDL = sid0 << 5;
  1462  000382  3820               	swapf	ecan_init@sid0,w,c
  1463  000384  46E8               	rlncf	wreg,f,c
  1464  000386  0BE0               	andlw	224
  1465  000388  010F               	movlb	15	; () banked
  1466  00038A  6F01               	movwf	1,b	;volatile
  1467                           
  1468                           ; BSR set to: 15
  1469                           ;can.c: 83: RXM0SIDH = mask0 >> 3;
  1470  00038C  C022  F01E         	movff	ecan_init@mask0,??_ecan_init
  1471  000390  C023  F01F         	movff	ecan_init@mask0+1,??_ecan_init+1
  1472  000394  341F               	rlcf	??_ecan_init+1,w,c
  1473  000396  321F               	rrcf	??_ecan_init+1,f,c
  1474  000398  321E               	rrcf	??_ecan_init,f,c
  1475  00039A  341F               	rlcf	??_ecan_init+1,w,c
  1476  00039C  321F               	rrcf	??_ecan_init+1,f,c
  1477  00039E  321E               	rrcf	??_ecan_init,f,c
  1478  0003A0  341F               	rlcf	??_ecan_init+1,w,c
  1479  0003A2  321F               	rrcf	??_ecan_init+1,f,c
  1480  0003A4  321E               	rrcf	??_ecan_init,f,c
  1481  0003A6  501E               	movf	??_ecan_init,w,c
  1482  0003A8  010F               	movlb	15	; () banked
  1483  0003AA  6F18               	movwf	24,b	;volatile
  1484                           
  1485                           ; BSR set to: 15
  1486                           ;can.c: 84: RXM0SIDL = mask0 << 5;
  1487  0003AC  3822               	swapf	ecan_init@mask0,w,c
  1488  0003AE  46E8               	rlncf	wreg,f,c
  1489  0003B0  0BE0               	andlw	224
  1490  0003B2  010F               	movlb	15	; () banked
  1491  0003B4  6F19               	movwf	25,b	;volatile
  1492                           
  1493                           ; BSR set to: 15
  1494                           ;can.c: 85: RXF0SIDLbits.EXIDEN = 0;
  1495  0003B6  010F               	movlb	15	; () banked
  1496  0003B8  9701               	bcf	1,3,b	;volatile
  1497                           
  1498                           ; BSR set to: 15
  1499                           ;can.c: 86: RXFCON0bits.RXF0EN = 1;
  1500  0003BA  010D               	movlb	13	; () banked
  1501  0003BC  81D4               	bsf	212,0,b	;volatile
  1502                           
  1503                           ; BSR set to: 13
  1504                           ;can.c: 104: CANCONbits.REQOP2 = 0;
  1505  0003BE  9E6F               	bcf	3951,7,c	;volatile
  1506                           
  1507                           ; BSR set to: 13
  1508                           ;can.c: 105: CANCONbits.REQOP1 = 0;
  1509  0003C0  9C6F               	bcf	3951,6,c	;volatile
  1510                           
  1511                           ; BSR set to: 13
  1512                           ;can.c: 106: CANCONbits.REQOP0 = 0;
  1513  0003C2  9A6F               	bcf	3951,5,c	;volatile
  1514  0003C4                     l230:
  1515  0003C4  AE6E               	btfss	3950,7,c	;volatile
  1516  0003C6  0012               	return	
  1517  0003C8  AC6E               	btfss	3950,6,c	;volatile
  1518  0003CA  0012               	return	
  1519  0003CC  AA6E               	btfss	3950,5,c	;volatile
  1520  0003CE  0012               	return	
  1521  0003D0  D7F9               	goto	l230
  1522  0003D2                     __end_of_ecan_init:
  1523                           	opt stack 0
  1524                           intcon	equ	0xFF2
  1525                           wreg	equ	0xFE8
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _ConfigureOscillator *****************
  1529 ;; Defined at:
  1530 ;;		line 24 in file "config.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		None
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    2
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text14
  1559  000452                     __ptext14:
  1560                           	opt stack 0
  1561  000452                     _ConfigureOscillator:
  1562                           	opt stack 28
  1563                           
  1564                           ;config.c: 29: OSCCONbits.IRCF2 = 1;
  1565                           
  1566                           ;incstack = 0
  1567  000452  8CD3               	bsf	4051,6,c	;volatile
  1568                           
  1569                           ;config.c: 30: OSCCONbits.IRCF1 = 1;
  1570  000454  8AD3               	bsf	4051,5,c	;volatile
  1571                           
  1572                           ;config.c: 31: OSCCONbits.IRCF0 = 1;
  1573  000456  88D3               	bsf	4051,4,c	;volatile
  1574                           
  1575                           ;config.c: 33: OSCCONbits.SCS1 = 0;
  1576  000458  92D3               	bcf	4051,1,c	;volatile
  1577                           
  1578                           ;config.c: 34: OSCCONbits.SCS0 = 0;
  1579  00045A  90D3               	bcf	4051,0,c	;volatile
  1580                           
  1581                           ;config.c: 36: OSCTUNEbits.PLLEN = 1;
  1582  00045C  8C9B               	bsf	3995,6,c	;volatile
  1583  00045E  0012               	return		;funcret
  1584  000460                     __end_of_ConfigureOscillator:
  1585                           	opt stack 0
  1586                           intcon	equ	0xFF2
  1587                           wreg	equ	0xFE8
  1588                           status	equ	0xFD8
  1589                           
  1590 ;; *************** function _ISR *****************
  1591 ;; Defined at:
  1592 ;;		line 547 in file "main.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  newMessage     11   18[COMRAM] struct Message
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1607 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1608 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1609 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1610 ;;Total ram usage:       25 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    1
  1613 ;; This function calls:
  1614 ;;		_ecan_receive_rxb0
  1615 ;;		_ecan_rxb0_clear
  1616 ;; This function is called by:
  1617 ;;		Interrupt level 2
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	intcode
  1622  000008                     __pintcode:
  1623                           	opt stack 0
  1624  000008                     _ISR:
  1625                           	opt stack 28
  1626                           
  1627                           ;incstack = 0
  1628  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1629  00000A  CFFA F005          	movff	pclath,??_ISR
  1630  00000E  CFFB F006          	movff	pclatu,??_ISR+1
  1631  000012  CFE9 F007          	movff	fsr0l,??_ISR+2
  1632  000016  CFEA F008          	movff	fsr0h,??_ISR+3
  1633  00001A  CFE1 F009          	movff	fsr1l,??_ISR+4
  1634  00001E  CFE2 F00A          	movff	fsr1h,??_ISR+5
  1635  000022  CFD9 F00B          	movff	fsr2l,??_ISR+6
  1636  000026  CFDA F00C          	movff	fsr2h,??_ISR+7
  1637  00002A  CFF3 F00D          	movff	prodl,??_ISR+8
  1638  00002E  CFF4 F00E          	movff	prodh,??_ISR+9
  1639  000032  CFF6 F00F          	movff	tblptrl,??_ISR+10
  1640  000036  CFF7 F010          	movff	tblptrh,??_ISR+11
  1641  00003A  CFF8 F011          	movff	tblptru,??_ISR+12
  1642  00003E  CFF5 F012          	movff	tablat,??_ISR+13
  1643                           
  1644                           ;main.c: 549: if(PIR3bits.RXB0IF)
  1645  000042  A0A4               	btfss	4004,0,c	;volatile
  1646  000044  D020               	goto	i2l62
  1647                           
  1648                           ;main.c: 550: {
  1649                           ;main.c: 551: LATAbits.LATA7 ^= 1;
  1650  000046  7E89               	btg	3977,7,c	;volatile
  1651                           
  1652                           ;main.c: 552: Message newMessage;
  1653                           ;main.c: 553: ecan_receive_rxb0(&newMessage);
  1654  000048  0E13               	movlw	low ISR@newMessage
  1655  00004A  6E01               	movwf	ecan_receive_rxb0@mess,c
  1656  00004C  0E00               	movlw	high ISR@newMessage
  1657  00004E  6E02               	movwf	ecan_receive_rxb0@mess+1,c
  1658  000050  EC19  F001         	call	_ecan_receive_rxb0	;wreg free
  1659                           
  1660                           ;main.c: 559: if (newMessage.data[0] == 0x00)
  1661  000054  5013               	movf	ISR@newMessage,w,c
  1662  000056  A4D8               	btfss	status,2,c
  1663  000058  D004               	goto	i2l1210
  1664                           
  1665                           ;main.c: 560: {
  1666                           ;main.c: 561: FORW = 0;
  1667  00005A  0E00               	movlw	0
  1668  00005C  6E39               	movwf	_FORW,c
  1669                           
  1670                           ;main.c: 562: BACK = 0;
  1671  00005E  0E00               	movlw	0
  1672  000060  6E38               	movwf	_BACK,c
  1673  000062                     i2l1210:
  1674                           
  1675                           ;main.c: 564: }
  1676                           ;main.c: 565: if (newMessage.data[0] == 0x01)
  1677  000062  0413               	decf	ISR@newMessage,w,c
  1678  000064  A4D8               	btfss	status,2,c
  1679  000066  D004               	goto	i2l1214
  1680                           
  1681                           ;main.c: 566: {
  1682                           ;main.c: 567: FORW = 1;
  1683  000068  0E01               	movlw	1
  1684  00006A  6E39               	movwf	_FORW,c
  1685                           
  1686                           ;main.c: 568: BACK = 0;
  1687  00006C  0E00               	movlw	0
  1688  00006E  6E38               	movwf	_BACK,c
  1689  000070                     i2l1214:
  1690                           
  1691                           ;main.c: 569: }
  1692                           ;main.c: 570: if (newMessage.data[0] == 0x02)
  1693  000070  0E02               	movlw	2
  1694  000072  1813               	xorwf	ISR@newMessage,w,c
  1695  000074  A4D8               	btfss	status,2,c
  1696  000076  D004               	goto	i2l1218
  1697                           
  1698                           ;main.c: 571: {
  1699                           ;main.c: 572: FORW = 0;
  1700  000078  0E00               	movlw	0
  1701  00007A  6E39               	movwf	_FORW,c
  1702                           
  1703                           ;main.c: 573: BACK = 1;
  1704  00007C  0E01               	movlw	1
  1705  00007E  6E38               	movwf	_BACK,c
  1706  000080                     i2l1218:
  1707                           
  1708                           ;main.c: 574: }
  1709                           ;main.c: 576: ecan_rxb0_clear();
  1710  000080  EC5E  F002         	call	_ecan_rxb0_clear	;wreg free
  1711                           
  1712                           ;main.c: 577: PIR3bits.RXB0IF = 0;
  1713  000084  90A4               	bcf	4004,0,c	;volatile
  1714  000086                     i2l62:
  1715  000086  C012  FFF5         	movff	??_ISR+13,tablat
  1716  00008A  C011  FFF8         	movff	??_ISR+12,tblptru
  1717  00008E  C010  FFF7         	movff	??_ISR+11,tblptrh
  1718  000092  C00F  FFF6         	movff	??_ISR+10,tblptrl
  1719  000096  C00E  FFF4         	movff	??_ISR+9,prodh
  1720  00009A  C00D  FFF3         	movff	??_ISR+8,prodl
  1721  00009E  C00C  FFDA         	movff	??_ISR+7,fsr2h
  1722  0000A2  C00B  FFD9         	movff	??_ISR+6,fsr2l
  1723  0000A6  C00A  FFE2         	movff	??_ISR+5,fsr1h
  1724  0000AA  C009  FFE1         	movff	??_ISR+4,fsr1l
  1725  0000AE  C008  FFEA         	movff	??_ISR+3,fsr0h
  1726  0000B2  C007  FFE9         	movff	??_ISR+2,fsr0l
  1727  0000B6  C006  FFFB         	movff	??_ISR+1,pclatu
  1728  0000BA  C005  FFFA         	movff	??_ISR,pclath
  1729  0000BE  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1730  0000C0  0011               	retfie		f
  1731  0000C2                     __end_of_ISR:
  1732                           	opt stack 0
  1733                           pclatu	equ	0xFFB
  1734                           pclath	equ	0xFFA
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           prodh	equ	0xFF4
  1740                           prodl	equ	0xFF3
  1741                           intcon	equ	0xFF2
  1742                           fsr0h	equ	0xFEA
  1743                           fsr0l	equ	0xFE9
  1744                           wreg	equ	0xFE8
  1745                           fsr1h	equ	0xFE2
  1746                           fsr1l	equ	0xFE1
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _ecan_rxb0_clear *****************
  1752 ;; Defined at:
  1753 ;;		line 203 in file "can.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		None
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_ISR
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text16
  1781  0004BC                     __ptext16:
  1782                           	opt stack 0
  1783  0004BC                     _ecan_rxb0_clear:
  1784                           	opt stack 28
  1785                           
  1786                           ;can.c: 205: RXB0CONbits.RXB0FUL = 0;
  1787                           
  1788                           ;incstack = 0
  1789  0004BC  9E60               	bcf	3936,7,c	;volatile
  1790  0004BE  0012               	return		;funcret
  1791  0004C0                     __end_of_ecan_rxb0_clear:
  1792                           	opt stack 0
  1793                           pclatu	equ	0xFFB
  1794                           pclath	equ	0xFFA
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           intcon	equ	0xFF2
  1802                           fsr0h	equ	0xFEA
  1803                           fsr0l	equ	0xFE9
  1804                           wreg	equ	0xFE8
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           fsr2h	equ	0xFDA
  1808                           fsr2l	equ	0xFD9
  1809                           status	equ	0xFD8
  1810                           
  1811 ;; *************** function _ecan_receive_rxb0 *****************
  1812 ;; Defined at:
  1813 ;;		line 137 in file "can.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  mess            2    0[COMRAM] PTR struct Message
  1816 ;;		 -> ISR@newMessage(11), 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1832 ;;Total ram usage:        4 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_ISR
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text17
  1842  000232                     __ptext17:
  1843                           	opt stack 0
  1844  000232                     _ecan_receive_rxb0:
  1845                           	opt stack 28
  1846                           
  1847                           ;can.c: 143: mess->data[7] = RXB0D7;
  1848                           
  1849                           ;incstack = 0
  1850  000232  EE20 F007          	lfsr	2,7
  1851  000236  5001               	movf	ecan_receive_rxb0@mess,w,c
  1852  000238  26D9               	addwf	fsr2l,f,c
  1853  00023A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1854  00023C  22DA               	addwfc	fsr2h,f,c
  1855  00023E  CF6D FFDF          	movff	3949,indf2	;volatile
  1856                           
  1857                           ;can.c: 144: mess->data[6] = RXB0D6;
  1858  000242  EE20 F006          	lfsr	2,6
  1859  000246  5001               	movf	ecan_receive_rxb0@mess,w,c
  1860  000248  26D9               	addwf	fsr2l,f,c
  1861  00024A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1862  00024C  22DA               	addwfc	fsr2h,f,c
  1863  00024E  CF6C FFDF          	movff	3948,indf2	;volatile
  1864                           
  1865                           ;can.c: 145: mess->data[5] = RXB0D5;
  1866  000252  EE20 F005          	lfsr	2,5
  1867  000256  5001               	movf	ecan_receive_rxb0@mess,w,c
  1868  000258  26D9               	addwf	fsr2l,f,c
  1869  00025A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1870  00025C  22DA               	addwfc	fsr2h,f,c
  1871  00025E  CF6B FFDF          	movff	3947,indf2	;volatile
  1872                           
  1873                           ;can.c: 146: mess->data[4] = RXB0D4;
  1874  000262  EE20 F004          	lfsr	2,4
  1875  000266  5001               	movf	ecan_receive_rxb0@mess,w,c
  1876  000268  26D9               	addwf	fsr2l,f,c
  1877  00026A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1878  00026C  22DA               	addwfc	fsr2h,f,c
  1879  00026E  CF6A FFDF          	movff	3946,indf2	;volatile
  1880                           
  1881                           ;can.c: 147: mess->data[3] = RXB0D3;
  1882  000272  EE20 F003          	lfsr	2,3
  1883  000276  5001               	movf	ecan_receive_rxb0@mess,w,c
  1884  000278  26D9               	addwf	fsr2l,f,c
  1885  00027A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1886  00027C  22DA               	addwfc	fsr2h,f,c
  1887  00027E  CF69 FFDF          	movff	3945,indf2	;volatile
  1888                           
  1889                           ;can.c: 148: mess->data[2] = RXB0D2;
  1890  000282  EE20 F002          	lfsr	2,2
  1891  000286  5001               	movf	ecan_receive_rxb0@mess,w,c
  1892  000288  26D9               	addwf	fsr2l,f,c
  1893  00028A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1894  00028C  22DA               	addwfc	fsr2h,f,c
  1895  00028E  CF68 FFDF          	movff	3944,indf2	;volatile
  1896                           
  1897                           ;can.c: 149: mess->data[1] = RXB0D1;
  1898  000292  EE20 F001          	lfsr	2,1
  1899  000296  5001               	movf	ecan_receive_rxb0@mess,w,c
  1900  000298  26D9               	addwf	fsr2l,f,c
  1901  00029A  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1902  00029C  22DA               	addwfc	fsr2h,f,c
  1903  00029E  CF67 FFDF          	movff	3943,indf2	;volatile
  1904                           
  1905                           ;can.c: 150: mess->data[0] = RXB0D0;
  1906  0002A2  C001  FFD9         	movff	ecan_receive_rxb0@mess,fsr2l
  1907  0002A6  C002  FFDA         	movff	ecan_receive_rxb0@mess+1,fsr2h
  1908  0002AA  CF66 FFDF          	movff	3942,indf2	;volatile
  1909                           
  1910                           ;can.c: 153: mess->sid = RXB0SIDH << 3;
  1911  0002AE  5061               	movf	3937,w,c	;volatile
  1912  0002B0  6E03               	movwf	??_ecan_receive_rxb0& (0+255),c
  1913  0002B2  6A04               	clrf	(??_ecan_receive_rxb0+1)& (0+255),c
  1914  0002B4  90D8               	bcf	status,0,c
  1915  0002B6  3603               	rlcf	??_ecan_receive_rxb0,f,c
  1916  0002B8  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  1917  0002BA  90D8               	bcf	status,0,c
  1918  0002BC  3603               	rlcf	??_ecan_receive_rxb0,f,c
  1919  0002BE  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  1920  0002C0  90D8               	bcf	status,0,c
  1921  0002C2  3603               	rlcf	??_ecan_receive_rxb0,f,c
  1922  0002C4  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  1923  0002C6  EE20 F008          	lfsr	2,8
  1924  0002CA  5001               	movf	ecan_receive_rxb0@mess,w,c
  1925  0002CC  26D9               	addwf	fsr2l,f,c
  1926  0002CE  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1927  0002D0  22DA               	addwfc	fsr2h,f,c
  1928  0002D2  C003  FFDE         	movff	??_ecan_receive_rxb0,postinc2
  1929  0002D6  C004  FFDD         	movff	??_ecan_receive_rxb0+1,postdec2
  1930                           
  1931                           ;can.c: 154: mess->sid |= RXB0SIDL >> 5;
  1932  0002DA  EE20 F008          	lfsr	2,8
  1933  0002DE  5001               	movf	ecan_receive_rxb0@mess,w,c
  1934  0002E0  26D9               	addwf	fsr2l,f,c
  1935  0002E2  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1936  0002E4  22DA               	addwfc	fsr2h,f,c
  1937  0002E6  CF62 F003          	movff	3938,??_ecan_receive_rxb0	;volatile
  1938  0002EA  0E05               	movlw	5
  1939  0002EC  6E04               	movwf	(??_ecan_receive_rxb0+1)& (0+255),c
  1940  0002EE                     i2u22_45:
  1941  0002EE  90D8               	bcf	status,0,c
  1942  0002F0  3203               	rrcf	??_ecan_receive_rxb0,f,c
  1943  0002F2  2E04               	decfsz	(??_ecan_receive_rxb0+1)& (0+255),f,c
  1944  0002F4  D7FC               	goto	i2u22_45
  1945  0002F6  5003               	movf	??_ecan_receive_rxb0,w,c
  1946  0002F8  12DE               	iorwf	postinc2,f,c
  1947  0002FA  0E00               	movlw	0
  1948  0002FC  12DD               	iorwf	postdec2,f,c
  1949                           
  1950                           ;can.c: 157: mess->len = 0x0F & RXB0DLC;
  1951  0002FE  EE20 F00A          	lfsr	2,10
  1952  000302  5001               	movf	ecan_receive_rxb0@mess,w,c
  1953  000304  26D9               	addwf	fsr2l,f,c
  1954  000306  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  1955  000308  22DA               	addwfc	fsr2h,f,c
  1956  00030A  5065               	movf	3941,w,c	;volatile
  1957  00030C  0B0F               	andlw	15
  1958  00030E  6EDF               	movwf	indf2,c
  1959                           
  1960                           ;can.c: 160: RXB0CONbits.RXB0FUL = 0;
  1961  000310  9E60               	bcf	3936,7,c	;volatile
  1962  000312  0012               	return		;funcret
  1963  000314                     __end_of_ecan_receive_rxb0:
  1964                           	opt stack 0
  1965  0000                     pclatu	equ	0xFFB
  1966                           pclath	equ	0xFFA
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           prodh	equ	0xFF4
  1972                           prodl	equ	0xFF3
  1973                           intcon	equ	0xFF2
  1974                           fsr0h	equ	0xFEA
  1975                           fsr0l	equ	0xFE9
  1976                           wreg	equ	0xFE8
  1977                           fsr1h	equ	0xFE2
  1978                           fsr1l	equ	0xFE1
  1979                           indf2	equ	0xFDF
  1980                           postinc2	equ	0xFDE
  1981                           postdec2	equ	0xFDD
  1982                           fsr2h	equ	0xFDA
  1983                           fsr2l	equ	0xFD9
  1984                           status	equ	0xFD8
  1985                           pclatu	equ	0xFFB
  1986                           pclath	equ	0xFFA
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon	equ	0xFF2
  1994                           fsr0h	equ	0xFEA
  1995                           fsr0l	equ	0xFE9
  1996                           wreg	equ	0xFE8
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           postinc2	equ	0xFDE
  2001                           postdec2	equ	0xFDD
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8
  2005                           
  2006                           	psect	rparam
  2007  0000                     pclatu	equ	0xFFB
  2008                           pclath	equ	0xFFA
  2009                           tblptru	equ	0xFF8
  2010                           tblptrh	equ	0xFF7
  2011                           tblptrl	equ	0xFF6
  2012                           tablat	equ	0xFF5
  2013                           prodh	equ	0xFF4
  2014                           prodl	equ	0xFF3
  2015                           intcon	equ	0xFF2
  2016                           fsr0h	equ	0xFEA
  2017                           fsr0l	equ	0xFE9
  2018                           wreg	equ	0xFE8
  2019                           fsr1h	equ	0xFE2
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           postinc2	equ	0xFDE
  2023                           postdec2	equ	0xFDD
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028                           	psect	temp
  2029  00003A                     btemp:
  2030                           	opt stack 0
  2031  00003A                     	ds	1
  2032  0000                     int$flags	set	btemp
  2033                           pclatu	equ	0xFFB
  2034                           pclath	equ	0xFFA
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           intcon	equ	0xFF2
  2042                           fsr0h	equ	0xFEA
  2043                           fsr0l	equ	0xFE9
  2044                           wreg	equ	0xFE8
  2045                           fsr1h	equ	0xFE2
  2046                           fsr1l	equ	0xFE1
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           postdec2	equ	0xFDD
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    ecan_receive_rxb0@mess	PTR struct Message size(2) Largest target is 11
		 -> ISR@newMessage(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_ecan_init

Critical Paths under _ISR in COMRAM

    _ISR->_ecan_receive_rxb0

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     102
                                             35 COMRAM    20    20      0
                _ConfigureOscillator
                          _ecan_init
                  _enable_interrupts
                            _readADC
                          _selectAN0
                          _selectAN1
                          _selectAN2
                          _selectAN3
                          _selectAN4
                          _selectAN5
                          _selectAN6
                          _selectAN7
                   _setActuatorCntrl
                        _setAnalogIn
 ---------------------------------------------------------------------------------
 (1) _setAnalogIn                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setActuatorCntrl                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN7                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN6                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN5                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      24
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ecan_init                                            6     6      0      60
                                             29 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 25    25      0     409
                                              4 COMRAM    25    25      0
                  _ecan_receive_rxb0
                    _ecan_rxb0_clear
 ---------------------------------------------------------------------------------
 (3) _ecan_rxb0_clear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ecan_receive_rxb0                                    4     2      2     306
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _ecan_init
   _enable_interrupts
   _readADC
   _selectAN0
   _selectAN1
   _selectAN2
   _selectAN3
   _selectAN4
   _selectAN5
   _selectAN6
   _selectAN7
   _setActuatorCntrl
   _setAnalogIn

 _ISR (ROOT)
   _ecan_receive_rxb0
   _ecan_rxb0_clear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      39       1       60.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      20        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Mar  7 19:48:25 2016

                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                   __CFG_LVP$ON 000000                           l117 042C  
                         l230 03C4                           l225 031A                           l229 0324  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _ISR 0008  
                         wreg 000FE8                          ?_ISR 0001                  __CFG_WDT$OFF 000000  
                        l1150 012A                          l1194 0204                          l1188 01D6  
                        _BACK 0038                          _FORW 0039                          i2l62 0086  
                        _main 00C6                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                   main@retract 0024  
                        btemp 003A                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 00C2                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010                         ??_ISR 0005  
     __end_of_ecan_rxb0_clear 04C0                         ?_main 0001           _ConfigureOscillator 0452  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000  
               __CFG_WRT5$OFF 000000      __end_of_setActuatorCntrl 042A                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                __CFG_EBTR4$OFF 000000                __CFG_EBTR5$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
             __end_of_readADC 0444                __CFG_EBTRB$OFF 000000                         tablat 000FF5  
                       status 000FD8                __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001  
             __initialization 0444                  ?_setAnalogIn 0001                  __end_of_main 0232  
               main@actuator0 0028                 main@actuator1 002A                 main@actuator2 002C  
               main@actuator3 002E                 main@actuator4 0030                 main@actuator5 0032  
               main@actuator6 0034                 main@actuator7 0036                        ??_main 0024  
               __activetblptr 000000                 ISR@newMessage 0013                        _ADRESH 000FC4  
                      _ADRESL 000FC3               __CFG_BBSIZ$1024 000000                        i2l1210 0062  
                      i2l1214 0070                        i2l1218 0080                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB0D4 000F4A                        _TXB0D5 000F4B  
                      _TXB0D6 000F4C                        _TXB0D7 000F4D         ??_ConfigureOscillator 001E  
              __CFG_XINST$OFF 000000                __CFG_STVREN$ON 000000              ?_ecan_rxb0_clear 0001  
                   ??_readADC 0020               __CFG_BOREN$BOHW 000000                 ecan_init@sid0 0020  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0448                 ___rparam_used 000001  
              __pcstackCOMRAM 0001            __size_of_ecan_init 00BE            __size_of_selectAN0 000A  
          __size_of_selectAN1 000A            __size_of_selectAN2 000A            __size_of_selectAN3 000A  
          __size_of_selectAN4 000A            __size_of_selectAN5 000A            __size_of_selectAN6 000A  
          __size_of_selectAN7 000A          __size_of_setAnalogIn 0034                       i2u22_45 02EE  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55             ?_setActuatorCntrl 0001  
                     _TXB0DLC 000F45             __end_of_ecan_init 03D2            ??_setActuatorCntrl 001E  
                     __Hparam 0000                       __Lparam 0000                       __pcinit 0444  
                     __ramtop 0D00                       __ptext0 00C6                       __ptext1 03D2  
                     __ptext2 0406                       __ptext3 046C                       __ptext4 0476  
                     __ptext5 0480                       __ptext6 048A                       __ptext7 0494  
                     __ptext8 049E                       __ptext9 04A8                       _readADC 042A  
                __size_of_ISR 00BA             __end_of_selectAN0 04BC             __end_of_selectAN1 04B2  
           __end_of_selectAN2 04A8             __end_of_selectAN3 049E          end_of_initialization 0448  
           __end_of_selectAN4 0494             __end_of_selectAN5 048A             __end_of_selectAN6 0480  
           __end_of_selectAN7 0476                ecan_init@mask0 0022                       postdec2 000FDD  
                     postinc2 000FDE                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
 __end_of_ConfigureOscillator 0460                    main@extend 0026             readADC@digitalVal 0020  
                 _ECANCONbits 000F77             _enable_interrupts 0460      __size_of_ecan_rxb0_clear 0004  
          ?_enable_interrupts 0001           start_initialization 0444                   __end_of_ISR 00C2  
         ??_enable_interrupts 001E                   _CANSTATbits 000F6E              __CFG_OSC$IRCIO67 000000  
            __CFG_LPT1OSC$OFF 000000     __end_of_enable_interrupts 046C                   __pbssCOMRAM 0038  
                 _BRGCON1bits 000F70                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
                   _ecan_init 0314     __size_of_setActuatorCntrl 0024                 ??_setAnalogIn 001E  
                   __pintcode 0008                      ?_readADC 001E             ??_ecan_rxb0_clear 0001  
                    _LATAbits 000F89                      _LATCbits 000F8B                      _LATDbits 000F8C  
                  ?_ecan_init 0001                     _selectAN0 04B2                     _selectAN1 04A8  
                   _selectAN2 049E                     _selectAN3 0494                     _selectAN4 048A  
                   _selectAN5 0480                     _selectAN6 0476                     _selectAN7 046C  
                    _PIE3bits 000FA3                      _PIR3bits 000FA4                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXB1SIDH 000F51                      _RXB1SIDL 000F52                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01                      _TXB0SIDH 000F41                      _TXB0SIDL 000F42  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19    __size_of_enable_interrupts 000C  
         __end_of_setAnalogIn 0406                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0             _ecan_receive_rxb0 0232                    _CANCONbits 000F6F  
          ?_ecan_receive_rxb0 0001                    ?_selectAN0 0001                    ?_selectAN1 0001  
                  ?_selectAN2 0001                    ?_selectAN3 0001                    ?_selectAN4 0001  
                  ?_selectAN5 0001                    ?_selectAN6 0001                    ?_selectAN7 0001  
                    __Hrparam 0000           ??_ecan_receive_rxb0 0003                      __Lrparam 0000  
                  _CIOCONbits 000F73              __size_of_readADC 001A                  _RXF0SIDLbits 000F01  
   __end_of_ecan_receive_rxb0 0314                      __ptext10 04B2                      __ptext11 042A  
                    __ptext12 0460                      __ptext13 0314                      __ptext14 0452  
                    __ptext16 04BC                      __ptext17 0232                 __size_of_main 016C  
                 ??_ecan_init 001E  __size_of_ConfigureOscillator 000E                  _TXB0SIDLbits 000F42  
            _setActuatorCntrl 0406                   _setAnalogIn 03D2                      int$flags 003A  
                 _RXB0CONbits 000F60                   _RXB1CONbits 000F50                   _OSCTUNEbits 000F9B  
                  _INTCONbits 000FF2                      intlevel2 0000                   ??_selectAN0 001E  
                 ??_selectAN1 001E                   ??_selectAN2 001E                   ??_selectAN3 001E  
                 ??_selectAN4 001E                   ??_selectAN5 001E                   ??_selectAN6 001E  
                 ??_selectAN7 001E                   _TXB0CONbits 000F40                    _OSCCONbits 000FD3  
       ecan_receive_rxb0@mess 0001                   _RXFCON0bits 000DD4               _ecan_rxb0_clear 04BC  
  __size_of_ecan_receive_rxb0 00E2  
