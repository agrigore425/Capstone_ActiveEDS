

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 10 07:29:21 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	idataCOMRAM
    31  017774                     __pidataCOMRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for _extendPos
    35  017774  0320               	dw	800
    36                           
    37                           ;initializer for _retractPos
    38  017776  00C8               	dw	200
    39  0000                     _RXFCON0bits	set	3540
    40  0000                     _RXB1CONbits	set	3920
    41  0000                     _RXB1D0	set	3926
    42  0000                     _RXB1D1	set	3927
    43  0000                     _RXB1D2	set	3928
    44  0000                     _RXB1D3	set	3929
    45  0000                     _RXB1D4	set	3930
    46  0000                     _RXB1D5	set	3931
    47  0000                     _RXB1D6	set	3932
    48  0000                     _RXB1D7	set	3933
    49  0000                     _RXB1SIDH	set	3921
    50  0000                     _RXB1SIDL	set	3922
    51  0000                     _RXF0SIDH	set	3840
    52  0000                     _RXF0SIDL	set	3841
    53  0000                     _RXF0SIDLbits	set	3841
    54  0000                     _RXM0SIDH	set	3864
    55  0000                     _RXM0SIDL	set	3865
    56  0000                     _TXB0CONbits	set	3904
    57  0000                     _TXB0D0	set	3910
    58  0000                     _TXB0D1	set	3911
    59  0000                     _TXB0D2	set	3912
    60  0000                     _TXB0D3	set	3913
    61  0000                     _TXB0D4	set	3914
    62  0000                     _TXB0D5	set	3915
    63  0000                     _TXB0D6	set	3916
    64  0000                     _TXB0D7	set	3917
    65  0000                     _TXB0DLC	set	3909
    66  0000                     _TXB0SIDH	set	3905
    67  0000                     _TXB0SIDL	set	3906
    68  0000                     _TXB0SIDLbits	set	3906
    69  0000                     _RXB1DLC	set	3925
    70  0000                     _ADCON0bits	set	4034
    71  0000                     _ADCON1bits	set	4033
    72  0000                     _ADCON2bits	set	4032
    73  0000                     _ADRESH	set	4036
    74  0000                     _ADRESL	set	4035
    75  0000                     _BRGCON1bits	set	3952
    76  0000                     _BRGCON2bits	set	3953
    77  0000                     _BRGCON3bits	set	3954
    78  0000                     _CANCONbits	set	3951
    79  0000                     _CANSTATbits	set	3950
    80  0000                     _CIOCONbits	set	3955
    81  0000                     _ECANCONbits	set	3959
    82  0000                     _INTCONbits	set	4082
    83  0000                     _LATAbits	set	3977
    84  0000                     _LATCbits	set	3979
    85  0000                     _LATDbits	set	3980
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _OSCTUNEbits	set	3995
    88  0000                     _PIE3bits	set	4003
    89  0000                     _RCONbits	set	4048
    90  0000                     _RXB0CONbits	set	3936
    91  0000                     _RXB0D0	set	3942
    92  0000                     _RXB0D1	set	3943
    93  0000                     _RXB0D2	set	3944
    94  0000                     _RXB0D3	set	3945
    95  0000                     _RXB0D4	set	3946
    96  0000                     _RXB0D5	set	3947
    97  0000                     _RXB0D6	set	3948
    98  0000                     _RXB0D7	set	3949
    99  0000                     _RXB0SIDH	set	3937
   100  0000                     _RXB0SIDL	set	3938
   101  0000                     _TRISAbits	set	3986
   102  0000                     _TRISBbits	set	3987
   103  0000                     _TRISCbits	set	3988
   104  0000                     _TRISDbits	set	3989
   105  0000                     _TRISEbits	set	3990
   106  0000                     _RXB0DLC	set	3941
   107                           
   108                           ; #config settings
   109  0000                     
   110                           	psect	cinit
   111  017814                     __pcinit:
   112                           	opt stack 0
   113  017814                     start_initialization:
   114                           	opt stack 0
   115  017814                     __initialization:
   116                           	opt stack 0
   117                           
   118                           ; Clear objects allocated to COMRAM (18 bytes)
   119  017814  EE00  F02E         	lfsr	0,__pbssCOMRAM
   120  017818  0E12               	movlw	18
   121  01781A                     clear_0:
   122  01781A  6AEE               	clrf	postinc0,c
   123  01781C  06E8               	decf	wreg,f,c
   124  01781E  E1FD               	bnz	clear_0
   125                           
   126                           ; Initialize objects allocated to COMRAM (4 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  017820  0E74               	movlw	low __pidataCOMRAM
   129  017822  6EF6               	movwf	tblptrl,c
   130  017824  0E77               	movlw	high __pidataCOMRAM
   131  017826  6EF7               	movwf	tblptrh,c
   132  017828  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   133  01782A  6EF8               	movwf	tblptru,c
   134  01782C  EE00  F040         	lfsr	0,__pdataCOMRAM
   135  017830  EE10 F004          	lfsr	1,4
   136  017834                     copy_data0:
   137  017834  0009               	tblrd		*+
   138  017836  CFF5 FFEE          	movff	tablat,postinc0
   139  01783A  50E5               	movf	postdec1,w,c
   140  01783C  50E1               	movf	fsr1l,w,c
   141  01783E  E1FA               	bnz	copy_data0
   142  017840                     end_of_initialization:
   143                           	opt stack 0
   144  017840                     __end_of__initialization:
   145                           	opt stack 0
   146  017840  0100               	movlb	0
   147  017842  EFC6  F0BD         	goto	_main	;jump to C main() function
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           postdec1	equ	0xFE5
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	bssCOMRAM
   158  00002E                     __pbssCOMRAM:
   159                           	opt stack 0
   160  00002E                     _margin7:
   161                           	opt stack 0
   162  00002E                     	ds	2
   163  000030                     _BACK:
   164                           	opt stack 0
   165  000030                     	ds	1
   166  000031                     _FORW:
   167                           	opt stack 0
   168  000031                     	ds	1
   169  000032                     _margin0:
   170                           	opt stack 0
   171  000032                     	ds	2
   172  000034                     _margin1:
   173                           	opt stack 0
   174  000034                     	ds	2
   175  000036                     _margin2:
   176                           	opt stack 0
   177  000036                     	ds	2
   178  000038                     _margin3:
   179                           	opt stack 0
   180  000038                     	ds	2
   181  00003A                     _margin4:
   182                           	opt stack 0
   183  00003A                     	ds	2
   184  00003C                     _margin5:
   185                           	opt stack 0
   186  00003C                     	ds	2
   187  00003E                     _margin6:
   188                           	opt stack 0
   189  00003E                     	ds	2
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	dataCOMRAM
   200  000040                     __pdataCOMRAM:
   201                           	opt stack 0
   202  000040                     _extendPos:
   203                           	opt stack 0
   204  000040                     	ds	2
   205  000042                     _retractPos:
   206                           	opt stack 0
   207  000042                     	ds	2
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           postdec1	equ	0xFE5
   215                           fsr1l	equ	0xFE1
   216                           
   217                           	psect	cstackCOMRAM
   218  000001                     __pcstackCOMRAM:
   219                           	opt stack 0
   220  000001                     ??_ecan_init:
   221  000001                     ?_readADC:
   222                           	opt stack 0
   223  000001                     ecan_receive_rxb0@mess:
   224                           	opt stack 0
   225  000001                     movement@current_pos:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x0
   229  000001                     	ds	2
   230  000003                     ??_ecan_receive_rxb0:
   231  000003                     readADC@digitalVal:
   232                           	opt stack 0
   233  000003                     ecan_init@sid0:
   234                           	opt stack 0
   235  000003                     movement@set_point:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x2
   239  000003                     	ds	2
   240  000005                     ecan_init@mask0:
   241                           	opt stack 0
   242  000005                     movement@actuator:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  000005                     	ds	2
   247  000007                     movement@margin:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x6
   251  000007                     	ds	2
   252  000009                     
   253                           ; 1 bytes @ 0x8
   254  000009                     	ds	2
   255  00000B                     movement@move0:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0xA
   259  00000B                     	ds	2
   260  00000D                     movement@move1:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0xC
   264  00000D                     	ds	2
   265  00000F                     main@actuator7:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xE
   269  00000F                     	ds	2
   270  000011                     main@actuator0:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x10
   274  000011                     	ds	2
   275  000013                     main@actuator1:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x12
   279  000013                     	ds	2
   280  000015                     main@actuator2:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x14
   284  000015                     	ds	2
   285  000017                     main@actuator3:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x16
   289  000017                     	ds	2
   290  000019                     main@actuator4:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x18
   294  000019                     	ds	2
   295  00001B                     main@actuator5:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x1A
   299  00001B                     	ds	2
   300  00001D                     main@actuator6:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x1C
   304  00001D                     	ds	2
   305  00001F                     main@retractPos:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x1E
   309  00001F                     	ds	2
   310  000021                     main@newMessage:
   311                           	opt stack 0
   312                           
   313                           ; 11 bytes @ 0x20
   314  000021                     	ds	11
   315  00002C                     main@extendPos:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x2B
   319  00002C                     	ds	2
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 53 in file "main.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  newMessage     11   32[COMRAM] struct Message
   339 ;;  extendPos       2   43[COMRAM] unsigned int 
   340 ;;  retractPos      2   30[COMRAM] unsigned int 
   341 ;;  actuator6       2   28[COMRAM] unsigned int 
   342 ;;  actuator5       2   26[COMRAM] unsigned int 
   343 ;;  actuator4       2   24[COMRAM] unsigned int 
   344 ;;  actuator3       2   22[COMRAM] unsigned int 
   345 ;;  actuator2       2   20[COMRAM] unsigned int 
   346 ;;  actuator1       2   18[COMRAM] unsigned int 
   347 ;;  actuator0       2   16[COMRAM] unsigned int 
   348 ;;  actuator7       2   14[COMRAM] unsigned int 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   359 ;;      Locals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   361 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   362 ;;Total ram usage:       31 bytes
   363 ;; Hardware stack levels required when called:    1
   364 ;; This function calls:
   365 ;;		_ConfigureOscillator
   366 ;;		_ecan_init
   367 ;;		_ecan_receive_rxb0
   368 ;;		_ecan_rxb0_clear
   369 ;;		_movement
   370 ;;		_readADC
   371 ;;		_selectAN0
   372 ;;		_selectAN1
   373 ;;		_selectAN2
   374 ;;		_selectAN3
   375 ;;		_selectAN4
   376 ;;		_selectAN5
   377 ;;		_selectAN6
   378 ;;		_selectAN7
   379 ;;		_setActuatorCntrl
   380 ;;		_setAnalogIn
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text0
   387  017B8C                     __ptext0:
   388                           	opt stack 0
   389  017B8C                     _main:
   390                           	opt stack 30
   391                           
   392                           ;main.c: 56: ConfigureOscillator();
   393                           
   394                           ;incstack = 0
   395  017B8C  ECE4  F0BB         	call	_ConfigureOscillator	;wreg free
   396                           
   397                           ;main.c: 57: ecan_init();
   398  017B90  EC3D  F0BC         	call	_ecan_init	;wreg free
   399                           
   400                           ;main.c: 61: setAnalogIn();
   401  017B94  EC23  F0BC         	call	_setAnalogIn	;wreg free
   402                           
   403                           ;main.c: 62: setActuatorCntrl();
   404  017B98  ECF8  F0BB         	call	_setActuatorCntrl	;wreg free
   405                           
   406                           ;main.c: 63: unsigned int actuator0 = 0;
   407  017B9C  0E00               	movlw	0
   408  017B9E  6E12               	movwf	main@actuator0+1,c
   409  017BA0  0E00               	movlw	0
   410  017BA2  6E11               	movwf	main@actuator0,c
   411                           
   412                           ;main.c: 64: unsigned int actuator1 = 0;
   413  017BA4  0E00               	movlw	0
   414  017BA6  6E14               	movwf	main@actuator1+1,c
   415  017BA8  0E00               	movlw	0
   416  017BAA  6E13               	movwf	main@actuator1,c
   417                           
   418                           ;main.c: 65: unsigned int actuator2 = 0;
   419  017BAC  0E00               	movlw	0
   420  017BAE  6E16               	movwf	main@actuator2+1,c
   421  017BB0  0E00               	movlw	0
   422  017BB2  6E15               	movwf	main@actuator2,c
   423                           
   424                           ;main.c: 66: unsigned int actuator3 = 0;
   425  017BB4  0E00               	movlw	0
   426  017BB6  6E18               	movwf	main@actuator3+1,c
   427  017BB8  0E00               	movlw	0
   428  017BBA  6E17               	movwf	main@actuator3,c
   429                           
   430                           ;main.c: 67: unsigned int actuator4 = 0;
   431  017BBC  0E00               	movlw	0
   432  017BBE  6E1A               	movwf	main@actuator4+1,c
   433  017BC0  0E00               	movlw	0
   434  017BC2  6E19               	movwf	main@actuator4,c
   435                           
   436                           ;main.c: 68: unsigned int actuator5 = 0;
   437  017BC4  0E00               	movlw	0
   438  017BC6  6E1C               	movwf	main@actuator5+1,c
   439  017BC8  0E00               	movlw	0
   440  017BCA  6E1B               	movwf	main@actuator5,c
   441                           
   442                           ;main.c: 69: unsigned int actuator6 = 0;
   443  017BCC  0E00               	movlw	0
   444  017BCE  6E1E               	movwf	main@actuator6+1,c
   445  017BD0  0E00               	movlw	0
   446  017BD2  6E1D               	movwf	main@actuator6,c
   447                           
   448                           ;main.c: 70: unsigned int actuator7 = 0;
   449  017BD4  0E00               	movlw	0
   450  017BD6  6E10               	movwf	main@actuator7+1,c
   451  017BD8  0E00               	movlw	0
   452  017BDA  6E0F               	movwf	main@actuator7,c
   453                           
   454                           ;main.c: 73: unsigned int retractPos = 200;
   455  017BDC  0E00               	movlw	0
   456  017BDE  6E20               	movwf	main@retractPos+1,c
   457  017BE0  0EC8               	movlw	200
   458  017BE2  6E1F               	movwf	main@retractPos,c
   459                           
   460                           ;main.c: 74: unsigned int extendPos = 800;
   461  017BE4  0E03               	movlw	3
   462  017BE6  6E2D               	movwf	main@extendPos+1,c
   463  017BE8  0E20               	movlw	32
   464  017BEA  6E2C               	movwf	main@extendPos,c
   465  017BEC                     l1604:
   466                           
   467                           ;main.c: 77: {
   468                           ;main.c: 78: if(RXB0CONbits.RXB0FUL)
   469  017BEC  AE60               	btfss	3936,7,c	;volatile
   470  017BEE  D03F               	goto	l1640
   471                           
   472                           ;main.c: 79: {
   473                           ;main.c: 80: Message newMessage;
   474                           ;main.c: 81: ecan_receive_rxb0(&newMessage);
   475  017BF0  0E21               	movlw	low main@newMessage
   476  017BF2  6E01               	movwf	ecan_receive_rxb0@mess,c
   477  017BF4  0E00               	movlw	high main@newMessage
   478  017BF6  6E02               	movwf	ecan_receive_rxb0@mess+1,c
   479  017BF8  EC9C  F0BC         	call	_ecan_receive_rxb0	;wreg free
   480                           
   481                           ;main.c: 83: margin0 = 0;
   482  017BFC  0E00               	movlw	0
   483  017BFE  6E33               	movwf	_margin0+1,c
   484  017C00  0E00               	movlw	0
   485  017C02  6E32               	movwf	_margin0,c
   486                           
   487                           ;main.c: 84: margin1 = 0;
   488  017C04  0E00               	movlw	0
   489  017C06  6E35               	movwf	_margin1+1,c
   490  017C08  0E00               	movlw	0
   491  017C0A  6E34               	movwf	_margin1,c
   492                           
   493                           ;main.c: 85: margin2 = 0;
   494  017C0C  0E00               	movlw	0
   495  017C0E  6E37               	movwf	_margin2+1,c
   496  017C10  0E00               	movlw	0
   497  017C12  6E36               	movwf	_margin2,c
   498                           
   499                           ;main.c: 86: margin3 = 0;
   500  017C14  0E00               	movlw	0
   501  017C16  6E39               	movwf	_margin3+1,c
   502  017C18  0E00               	movlw	0
   503  017C1A  6E38               	movwf	_margin3,c
   504                           
   505                           ;main.c: 87: margin4 = 0;
   506  017C1C  0E00               	movlw	0
   507  017C1E  6E3B               	movwf	_margin4+1,c
   508  017C20  0E00               	movlw	0
   509  017C22  6E3A               	movwf	_margin4,c
   510                           
   511                           ;main.c: 88: margin5 = 0;
   512  017C24  0E00               	movlw	0
   513  017C26  6E3D               	movwf	_margin5+1,c
   514  017C28  0E00               	movlw	0
   515  017C2A  6E3C               	movwf	_margin5,c
   516                           
   517                           ;main.c: 89: margin6 = 0;
   518  017C2C  0E00               	movlw	0
   519  017C2E  6E3F               	movwf	_margin6+1,c
   520  017C30  0E00               	movlw	0
   521  017C32  6E3E               	movwf	_margin6,c
   522                           
   523                           ;main.c: 90: margin7 = 0;
   524  017C34  0E00               	movlw	0
   525  017C36  6E2F               	movwf	_margin7+1,c
   526  017C38  0E00               	movlw	0
   527  017C3A  6E2E               	movwf	_margin7,c
   528                           
   529                           ;main.c: 92: LATAbits.LATA7 ^= 1;
   530  017C3C  7E89               	btg	3977,7,c	;volatile
   531                           
   532                           ;main.c: 100: if (newMessage.data[0] == 0x00)
   533  017C3E  5021               	movf	main@newMessage,w,c
   534  017C40  A4D8               	btfss	status,2,c
   535  017C42  D004               	goto	l1630
   536                           
   537                           ;main.c: 101: {
   538                           ;main.c: 102: FORW = 0;
   539  017C44  0E00               	movlw	0
   540  017C46  6E31               	movwf	_FORW,c
   541                           
   542                           ;main.c: 103: BACK = 0;
   543  017C48  0E00               	movlw	0
   544  017C4A  6E30               	movwf	_BACK,c
   545  017C4C                     l1630:
   546                           
   547                           ;main.c: 104: }
   548                           ;main.c: 105: if (newMessage.data[0] == 0x01)
   549  017C4C  0421               	decf	main@newMessage,w,c
   550  017C4E  A4D8               	btfss	status,2,c
   551  017C50  D004               	goto	l1634
   552                           
   553                           ;main.c: 106: {
   554                           ;main.c: 107: FORW = 1;
   555  017C52  0E01               	movlw	1
   556  017C54  6E31               	movwf	_FORW,c
   557                           
   558                           ;main.c: 108: BACK = 0;
   559  017C56  0E00               	movlw	0
   560  017C58  6E30               	movwf	_BACK,c
   561  017C5A                     l1634:
   562                           
   563                           ;main.c: 109: }
   564                           ;main.c: 110: if (newMessage.data[0] == 0x02)
   565  017C5A  0E02               	movlw	2
   566  017C5C  1821               	xorwf	main@newMessage,w,c
   567  017C5E  A4D8               	btfss	status,2,c
   568  017C60  D004               	goto	l1638
   569                           
   570                           ;main.c: 111: {
   571                           ;main.c: 112: FORW = 0;
   572  017C62  0E00               	movlw	0
   573  017C64  6E31               	movwf	_FORW,c
   574                           
   575                           ;main.c: 113: BACK = 1;
   576  017C66  0E01               	movlw	1
   577  017C68  6E30               	movwf	_BACK,c
   578  017C6A                     l1638:
   579                           
   580                           ;main.c: 114: }
   581                           ;main.c: 116: ecan_rxb0_clear();
   582  017C6A  ECB8  F0BB         	call	_ecan_rxb0_clear	;wreg free
   583  017C6E                     l1640:
   584                           
   585                           ;main.c: 117: }
   586                           ;main.c: 124: selectAN0();
   587  017C6E  ECBC  F0BB         	call	_selectAN0	;wreg free
   588                           
   589                           ;main.c: 125: actuator0 = readADC();
   590  017C72  ECEB  F0BB         	call	_readADC	;wreg free
   591  017C76  C001  F011         	movff	?_readADC,main@actuator0
   592  017C7A  C002  F012         	movff	?_readADC+1,main@actuator0+1
   593                           
   594                           ;main.c: 129: selectAN1();
   595  017C7E  ECC1  F0BB         	call	_selectAN1	;wreg free
   596                           
   597                           ;main.c: 130: actuator1 = readADC();
   598  017C82  ECEB  F0BB         	call	_readADC	;wreg free
   599  017C86  C001  F013         	movff	?_readADC,main@actuator1
   600  017C8A  C002  F014         	movff	?_readADC+1,main@actuator1+1
   601                           
   602                           ;main.c: 134: selectAN2();
   603  017C8E  ECC6  F0BB         	call	_selectAN2	;wreg free
   604                           
   605                           ;main.c: 135: actuator2 = readADC();
   606  017C92  ECEB  F0BB         	call	_readADC	;wreg free
   607  017C96  C001  F015         	movff	?_readADC,main@actuator2
   608  017C9A  C002  F016         	movff	?_readADC+1,main@actuator2+1
   609                           
   610                           ;main.c: 139: selectAN3();
   611  017C9E  ECCB  F0BB         	call	_selectAN3	;wreg free
   612                           
   613                           ;main.c: 140: actuator3 = readADC();
   614  017CA2  ECEB  F0BB         	call	_readADC	;wreg free
   615  017CA6  C001  F017         	movff	?_readADC,main@actuator3
   616  017CAA  C002  F018         	movff	?_readADC+1,main@actuator3+1
   617                           
   618                           ;main.c: 144: selectAN4();
   619  017CAE  ECD0  F0BB         	call	_selectAN4	;wreg free
   620                           
   621                           ;main.c: 145: actuator4 = readADC();
   622  017CB2  ECEB  F0BB         	call	_readADC	;wreg free
   623  017CB6  C001  F019         	movff	?_readADC,main@actuator4
   624  017CBA  C002  F01A         	movff	?_readADC+1,main@actuator4+1
   625                           
   626                           ;main.c: 149: selectAN5();
   627  017CBE  ECD5  F0BB         	call	_selectAN5	;wreg free
   628                           
   629                           ;main.c: 150: actuator5 = readADC();
   630  017CC2  ECEB  F0BB         	call	_readADC	;wreg free
   631  017CC6  C001  F01B         	movff	?_readADC,main@actuator5
   632  017CCA  C002  F01C         	movff	?_readADC+1,main@actuator5+1
   633                           
   634                           ;main.c: 154: selectAN6();
   635  017CCE  ECDA  F0BB         	call	_selectAN6	;wreg free
   636                           
   637                           ;main.c: 155: actuator6 = readADC();
   638  017CD2  ECEB  F0BB         	call	_readADC	;wreg free
   639  017CD6  C001  F01D         	movff	?_readADC,main@actuator6
   640  017CDA  C002  F01E         	movff	?_readADC+1,main@actuator6+1
   641                           
   642                           ;main.c: 159: selectAN7();
   643  017CDE  ECDF  F0BB         	call	_selectAN7	;wreg free
   644                           
   645                           ;main.c: 160: actuator7 = readADC();
   646  017CE2  ECEB  F0BB         	call	_readADC	;wreg free
   647  017CE6  C001  F00F         	movff	?_readADC,main@actuator7
   648  017CEA  C002  F010         	movff	?_readADC+1,main@actuator7+1
   649                           
   650                           ;main.c: 164: if(FORW == 1 && BACK == 0)
   651  017CEE  0431               	decf	_FORW,w,c
   652  017CF0  A4D8               	btfss	status,2,c
   653  017CF2  D082               	goto	l1678
   654  017CF4  5030               	movf	_BACK,w,c
   655  017CF6  A4D8               	btfss	status,2,c
   656  017CF8  D07F               	goto	l1678
   657                           
   658                           ;main.c: 165: {
   659                           ;main.c: 173: movement(actuator0, retractPos, 0, &margin0);
   660  017CFA  C011  F001         	movff	main@actuator0,movement@current_pos
   661  017CFE  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   662  017D02  C01F  F003         	movff	main@retractPos,movement@set_point
   663  017D06  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   664  017D0A  0E00               	movlw	0
   665  017D0C  6E06               	movwf	movement@actuator+1,c
   666  017D0E  0E00               	movlw	0
   667  017D10  6E05               	movwf	movement@actuator,c
   668  017D12  0E32               	movlw	low _margin0
   669  017D14  6E07               	movwf	movement@margin,c
   670  017D16  0E00               	movlw	high _margin0
   671  017D18  6E08               	movwf	movement@margin+1,c
   672  017D1A  EC0D  F0BD         	call	_movement	;wreg free
   673                           
   674                           ;main.c: 174: movement(actuator1, extendPos, 1, &margin1);
   675  017D1E  C013  F001         	movff	main@actuator1,movement@current_pos
   676  017D22  C014  F002         	movff	main@actuator1+1,movement@current_pos+1
   677  017D26  C02C  F003         	movff	main@extendPos,movement@set_point
   678  017D2A  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   679  017D2E  0E00               	movlw	0
   680  017D30  6E06               	movwf	movement@actuator+1,c
   681  017D32  0E01               	movlw	1
   682  017D34  6E05               	movwf	movement@actuator,c
   683  017D36  0E34               	movlw	low _margin1
   684  017D38  6E07               	movwf	movement@margin,c
   685  017D3A  0E00               	movlw	high _margin1
   686  017D3C  6E08               	movwf	movement@margin+1,c
   687  017D3E  EC0D  F0BD         	call	_movement	;wreg free
   688                           
   689                           ;main.c: 175: movement(actuator2, retractPos, 2, &margin2);
   690  017D42  C015  F001         	movff	main@actuator2,movement@current_pos
   691  017D46  C016  F002         	movff	main@actuator2+1,movement@current_pos+1
   692  017D4A  C01F  F003         	movff	main@retractPos,movement@set_point
   693  017D4E  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   694  017D52  0E00               	movlw	0
   695  017D54  6E06               	movwf	movement@actuator+1,c
   696  017D56  0E02               	movlw	2
   697  017D58  6E05               	movwf	movement@actuator,c
   698  017D5A  0E36               	movlw	low _margin2
   699  017D5C  6E07               	movwf	movement@margin,c
   700  017D5E  0E00               	movlw	high _margin2
   701  017D60  6E08               	movwf	movement@margin+1,c
   702  017D62  EC0D  F0BD         	call	_movement	;wreg free
   703                           
   704                           ;main.c: 176: movement(actuator3, extendPos, 3, &margin3);
   705  017D66  C017  F001         	movff	main@actuator3,movement@current_pos
   706  017D6A  C018  F002         	movff	main@actuator3+1,movement@current_pos+1
   707  017D6E  C02C  F003         	movff	main@extendPos,movement@set_point
   708  017D72  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   709  017D76  0E00               	movlw	0
   710  017D78  6E06               	movwf	movement@actuator+1,c
   711  017D7A  0E03               	movlw	3
   712  017D7C  6E05               	movwf	movement@actuator,c
   713  017D7E  0E38               	movlw	low _margin3
   714  017D80  6E07               	movwf	movement@margin,c
   715  017D82  0E00               	movlw	high _margin3
   716  017D84  6E08               	movwf	movement@margin+1,c
   717  017D86  EC0D  F0BD         	call	_movement	;wreg free
   718                           
   719                           ;main.c: 177: movement(actuator4, extendPos, 4, &margin4);
   720  017D8A  C019  F001         	movff	main@actuator4,movement@current_pos
   721  017D8E  C01A  F002         	movff	main@actuator4+1,movement@current_pos+1
   722  017D92  C02C  F003         	movff	main@extendPos,movement@set_point
   723  017D96  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   724  017D9A  0E00               	movlw	0
   725  017D9C  6E06               	movwf	movement@actuator+1,c
   726  017D9E  0E04               	movlw	4
   727  017DA0  6E05               	movwf	movement@actuator,c
   728  017DA2  0E3A               	movlw	low _margin4
   729  017DA4  6E07               	movwf	movement@margin,c
   730  017DA6  0E00               	movlw	high _margin4
   731  017DA8  6E08               	movwf	movement@margin+1,c
   732  017DAA  EC0D  F0BD         	call	_movement	;wreg free
   733                           
   734                           ;main.c: 178: movement(actuator5, retractPos, 5, &margin5);
   735  017DAE  C01B  F001         	movff	main@actuator5,movement@current_pos
   736  017DB2  C01C  F002         	movff	main@actuator5+1,movement@current_pos+1
   737  017DB6  C01F  F003         	movff	main@retractPos,movement@set_point
   738  017DBA  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   739  017DBE  0E00               	movlw	0
   740  017DC0  6E06               	movwf	movement@actuator+1,c
   741  017DC2  0E05               	movlw	5
   742  017DC4  6E05               	movwf	movement@actuator,c
   743  017DC6  0E3C               	movlw	low _margin5
   744  017DC8  6E07               	movwf	movement@margin,c
   745  017DCA  0E00               	movlw	high _margin5
   746  017DCC  6E08               	movwf	movement@margin+1,c
   747  017DCE  EC0D  F0BD         	call	_movement	;wreg free
   748                           
   749                           ;main.c: 179: movement(actuator6, extendPos, 6, &margin6);
   750  017DD2  C01D  F001         	movff	main@actuator6,movement@current_pos
   751  017DD6  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
   752  017DDA  C02C  F003         	movff	main@extendPos,movement@set_point
   753  017DDE  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   754  017DE2  0E00               	movlw	0
   755  017DE4  6E06               	movwf	movement@actuator+1,c
   756  017DE6  0E06               	movlw	6
   757  017DE8  6E05               	movwf	movement@actuator,c
   758  017DEA  0E3E               	movlw	low _margin6
   759  017DEC  6E07               	movwf	movement@margin,c
   760  017DEE  0E00               	movlw	high _margin6
   761  017DF0  6E08               	movwf	movement@margin+1,c
   762  017DF2  EC0D  F0BD         	call	_movement	;wreg free
   763                           
   764                           ;main.c: 190: } else if(BACK == 1 && FORW == 0) {
   765  017DF6  D6FA               	goto	l1604
   766  017DF8                     l1678:
   767  017DF8  0430               	decf	_BACK,w,c
   768  017DFA  A4D8               	btfss	status,2,c
   769  017DFC  D082               	goto	l1684
   770  017DFE  5031               	movf	_FORW,w,c
   771  017E00  A4D8               	btfss	status,2,c
   772  017E02  D07F               	goto	l1684
   773                           
   774                           ;main.c: 194: movement(actuator0, extendPos, 0, &margin0);
   775  017E04  C011  F001         	movff	main@actuator0,movement@current_pos
   776  017E08  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   777  017E0C  C02C  F003         	movff	main@extendPos,movement@set_point
   778  017E10  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   779  017E14  0E00               	movlw	0
   780  017E16  6E06               	movwf	movement@actuator+1,c
   781  017E18  0E00               	movlw	0
   782  017E1A  6E05               	movwf	movement@actuator,c
   783  017E1C  0E32               	movlw	low _margin0
   784  017E1E  6E07               	movwf	movement@margin,c
   785  017E20  0E00               	movlw	high _margin0
   786  017E22  6E08               	movwf	movement@margin+1,c
   787  017E24  EC0D  F0BD         	call	_movement	;wreg free
   788                           
   789                           ;main.c: 195: movement(actuator1, retractPos, 1, &margin1);
   790  017E28  C013  F001         	movff	main@actuator1,movement@current_pos
   791  017E2C  C014  F002         	movff	main@actuator1+1,movement@current_pos+1
   792  017E30  C01F  F003         	movff	main@retractPos,movement@set_point
   793  017E34  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   794  017E38  0E00               	movlw	0
   795  017E3A  6E06               	movwf	movement@actuator+1,c
   796  017E3C  0E01               	movlw	1
   797  017E3E  6E05               	movwf	movement@actuator,c
   798  017E40  0E34               	movlw	low _margin1
   799  017E42  6E07               	movwf	movement@margin,c
   800  017E44  0E00               	movlw	high _margin1
   801  017E46  6E08               	movwf	movement@margin+1,c
   802  017E48  EC0D  F0BD         	call	_movement	;wreg free
   803                           
   804                           ;main.c: 196: movement(actuator2, extendPos, 2, &margin2);
   805  017E4C  C015  F001         	movff	main@actuator2,movement@current_pos
   806  017E50  C016  F002         	movff	main@actuator2+1,movement@current_pos+1
   807  017E54  C02C  F003         	movff	main@extendPos,movement@set_point
   808  017E58  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   809  017E5C  0E00               	movlw	0
   810  017E5E  6E06               	movwf	movement@actuator+1,c
   811  017E60  0E02               	movlw	2
   812  017E62  6E05               	movwf	movement@actuator,c
   813  017E64  0E36               	movlw	low _margin2
   814  017E66  6E07               	movwf	movement@margin,c
   815  017E68  0E00               	movlw	high _margin2
   816  017E6A  6E08               	movwf	movement@margin+1,c
   817  017E6C  EC0D  F0BD         	call	_movement	;wreg free
   818                           
   819                           ;main.c: 197: movement(actuator3, retractPos, 3, &margin3);
   820  017E70  C017  F001         	movff	main@actuator3,movement@current_pos
   821  017E74  C018  F002         	movff	main@actuator3+1,movement@current_pos+1
   822  017E78  C01F  F003         	movff	main@retractPos,movement@set_point
   823  017E7C  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   824  017E80  0E00               	movlw	0
   825  017E82  6E06               	movwf	movement@actuator+1,c
   826  017E84  0E03               	movlw	3
   827  017E86  6E05               	movwf	movement@actuator,c
   828  017E88  0E38               	movlw	low _margin3
   829  017E8A  6E07               	movwf	movement@margin,c
   830  017E8C  0E00               	movlw	high _margin3
   831  017E8E  6E08               	movwf	movement@margin+1,c
   832  017E90  EC0D  F0BD         	call	_movement	;wreg free
   833                           
   834                           ;main.c: 198: movement(actuator4, retractPos, 4, &margin4);
   835  017E94  C019  F001         	movff	main@actuator4,movement@current_pos
   836  017E98  C01A  F002         	movff	main@actuator4+1,movement@current_pos+1
   837  017E9C  C01F  F003         	movff	main@retractPos,movement@set_point
   838  017EA0  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   839  017EA4  0E00               	movlw	0
   840  017EA6  6E06               	movwf	movement@actuator+1,c
   841  017EA8  0E04               	movlw	4
   842  017EAA  6E05               	movwf	movement@actuator,c
   843  017EAC  0E3A               	movlw	low _margin4
   844  017EAE  6E07               	movwf	movement@margin,c
   845  017EB0  0E00               	movlw	high _margin4
   846  017EB2  6E08               	movwf	movement@margin+1,c
   847  017EB4  EC0D  F0BD         	call	_movement	;wreg free
   848                           
   849                           ;main.c: 199: movement(actuator5, extendPos, 5, &margin5);
   850  017EB8  C01B  F001         	movff	main@actuator5,movement@current_pos
   851  017EBC  C01C  F002         	movff	main@actuator5+1,movement@current_pos+1
   852  017EC0  C02C  F003         	movff	main@extendPos,movement@set_point
   853  017EC4  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   854  017EC8  0E00               	movlw	0
   855  017ECA  6E06               	movwf	movement@actuator+1,c
   856  017ECC  0E05               	movlw	5
   857  017ECE  6E05               	movwf	movement@actuator,c
   858  017ED0  0E3C               	movlw	low _margin5
   859  017ED2  6E07               	movwf	movement@margin,c
   860  017ED4  0E00               	movlw	high _margin5
   861  017ED6  6E08               	movwf	movement@margin+1,c
   862  017ED8  EC0D  F0BD         	call	_movement	;wreg free
   863                           
   864                           ;main.c: 200: movement(actuator6, retractPos, 6, &margin6);
   865  017EDC  C01D  F001         	movff	main@actuator6,movement@current_pos
   866  017EE0  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
   867  017EE4  C01F  F003         	movff	main@retractPos,movement@set_point
   868  017EE8  C020  F004         	movff	main@retractPos+1,movement@set_point+1
   869  017EEC  0E00               	movlw	0
   870  017EEE  6E06               	movwf	movement@actuator+1,c
   871  017EF0  0E06               	movlw	6
   872  017EF2  6E05               	movwf	movement@actuator,c
   873  017EF4  0E3E               	movlw	low _margin6
   874  017EF6  6E07               	movwf	movement@margin,c
   875  017EF8  0E00               	movlw	high _margin6
   876  017EFA  6E08               	movwf	movement@margin+1,c
   877  017EFC  EC0D  F0BD         	call	_movement	;wreg free
   878                           
   879                           ;main.c: 207: } else {
   880  017F00  D675               	goto	l1604
   881  017F02                     l1684:
   882                           
   883                           ;main.c: 210: movement(actuator0, extendPos, 0, &margin0);
   884  017F02  C011  F001         	movff	main@actuator0,movement@current_pos
   885  017F06  C012  F002         	movff	main@actuator0+1,movement@current_pos+1
   886  017F0A  C02C  F003         	movff	main@extendPos,movement@set_point
   887  017F0E  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   888  017F12  0E00               	movlw	0
   889  017F14  6E06               	movwf	movement@actuator+1,c
   890  017F16  0E00               	movlw	0
   891  017F18  6E05               	movwf	movement@actuator,c
   892  017F1A  0E32               	movlw	low _margin0
   893  017F1C  6E07               	movwf	movement@margin,c
   894  017F1E  0E00               	movlw	high _margin0
   895  017F20  6E08               	movwf	movement@margin+1,c
   896  017F22  EC0D  F0BD         	call	_movement	;wreg free
   897                           
   898                           ;main.c: 211: movement(actuator1, extendPos, 1, &margin1);
   899  017F26  C013  F001         	movff	main@actuator1,movement@current_pos
   900  017F2A  C014  F002         	movff	main@actuator1+1,movement@current_pos+1
   901  017F2E  C02C  F003         	movff	main@extendPos,movement@set_point
   902  017F32  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   903  017F36  0E00               	movlw	0
   904  017F38  6E06               	movwf	movement@actuator+1,c
   905  017F3A  0E01               	movlw	1
   906  017F3C  6E05               	movwf	movement@actuator,c
   907  017F3E  0E34               	movlw	low _margin1
   908  017F40  6E07               	movwf	movement@margin,c
   909  017F42  0E00               	movlw	high _margin1
   910  017F44  6E08               	movwf	movement@margin+1,c
   911  017F46  EC0D  F0BD         	call	_movement	;wreg free
   912                           
   913                           ;main.c: 212: movement(actuator2, extendPos, 2, &margin2);
   914  017F4A  C015  F001         	movff	main@actuator2,movement@current_pos
   915  017F4E  C016  F002         	movff	main@actuator2+1,movement@current_pos+1
   916  017F52  C02C  F003         	movff	main@extendPos,movement@set_point
   917  017F56  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   918  017F5A  0E00               	movlw	0
   919  017F5C  6E06               	movwf	movement@actuator+1,c
   920  017F5E  0E02               	movlw	2
   921  017F60  6E05               	movwf	movement@actuator,c
   922  017F62  0E36               	movlw	low _margin2
   923  017F64  6E07               	movwf	movement@margin,c
   924  017F66  0E00               	movlw	high _margin2
   925  017F68  6E08               	movwf	movement@margin+1,c
   926  017F6A  EC0D  F0BD         	call	_movement	;wreg free
   927                           
   928                           ;main.c: 213: movement(actuator3, extendPos, 3, &margin3);
   929  017F6E  C017  F001         	movff	main@actuator3,movement@current_pos
   930  017F72  C018  F002         	movff	main@actuator3+1,movement@current_pos+1
   931  017F76  C02C  F003         	movff	main@extendPos,movement@set_point
   932  017F7A  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   933  017F7E  0E00               	movlw	0
   934  017F80  6E06               	movwf	movement@actuator+1,c
   935  017F82  0E03               	movlw	3
   936  017F84  6E05               	movwf	movement@actuator,c
   937  017F86  0E38               	movlw	low _margin3
   938  017F88  6E07               	movwf	movement@margin,c
   939  017F8A  0E00               	movlw	high _margin3
   940  017F8C  6E08               	movwf	movement@margin+1,c
   941  017F8E  EC0D  F0BD         	call	_movement	;wreg free
   942                           
   943                           ;main.c: 214: movement(actuator4, extendPos, 4, &margin4);
   944  017F92  C019  F001         	movff	main@actuator4,movement@current_pos
   945  017F96  C01A  F002         	movff	main@actuator4+1,movement@current_pos+1
   946  017F9A  C02C  F003         	movff	main@extendPos,movement@set_point
   947  017F9E  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   948  017FA2  0E00               	movlw	0
   949  017FA4  6E06               	movwf	movement@actuator+1,c
   950  017FA6  0E04               	movlw	4
   951  017FA8  6E05               	movwf	movement@actuator,c
   952  017FAA  0E3A               	movlw	low _margin4
   953  017FAC  6E07               	movwf	movement@margin,c
   954  017FAE  0E00               	movlw	high _margin4
   955  017FB0  6E08               	movwf	movement@margin+1,c
   956  017FB2  EC0D  F0BD         	call	_movement	;wreg free
   957                           
   958                           ;main.c: 215: movement(actuator5, extendPos, 5, &margin5);
   959  017FB6  C01B  F001         	movff	main@actuator5,movement@current_pos
   960  017FBA  C01C  F002         	movff	main@actuator5+1,movement@current_pos+1
   961  017FBE  C02C  F003         	movff	main@extendPos,movement@set_point
   962  017FC2  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   963  017FC6  0E00               	movlw	0
   964  017FC8  6E06               	movwf	movement@actuator+1,c
   965  017FCA  0E05               	movlw	5
   966  017FCC  6E05               	movwf	movement@actuator,c
   967  017FCE  0E3C               	movlw	low _margin5
   968  017FD0  6E07               	movwf	movement@margin,c
   969  017FD2  0E00               	movlw	high _margin5
   970  017FD4  6E08               	movwf	movement@margin+1,c
   971  017FD6  EC0D  F0BD         	call	_movement	;wreg free
   972                           
   973                           ;main.c: 216: movement(actuator6, extendPos, 6, &margin6);
   974  017FDA  C01D  F001         	movff	main@actuator6,movement@current_pos
   975  017FDE  C01E  F002         	movff	main@actuator6+1,movement@current_pos+1
   976  017FE2  C02C  F003         	movff	main@extendPos,movement@set_point
   977  017FE6  C02D  F004         	movff	main@extendPos+1,movement@set_point+1
   978  017FEA  0E00               	movlw	0
   979  017FEC  6E06               	movwf	movement@actuator+1,c
   980  017FEE  0E06               	movlw	6
   981  017FF0  6E05               	movwf	movement@actuator,c
   982  017FF2  0E3E               	movlw	low _margin6
   983  017FF4  6E07               	movwf	movement@margin,c
   984  017FF6  0E00               	movlw	high _margin6
   985  017FF8  6E08               	movwf	movement@margin+1,c
   986  017FFA  EC0D  F0BD         	call	_movement	;wreg free
   987  017FFE  D5F6               	goto	l1604
   988  018000                     __end_of_main:
   989                           	opt stack 0
   990                           tblptru	equ	0xFF8
   991                           tblptrh	equ	0xFF7
   992                           tblptrl	equ	0xFF6
   993                           tablat	equ	0xFF5
   994                           postinc0	equ	0xFEE
   995                           wreg	equ	0xFE8
   996                           postdec1	equ	0xFE5
   997                           fsr1l	equ	0xFE1
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function _setAnalogIn *****************
  1001 ;; Defined at:
  1002 ;;		line 24 in file "system.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		None
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text1
  1030  017846                     __ptext1:
  1031                           	opt stack 0
  1032  017846                     _setAnalogIn:
  1033                           	opt stack 30
  1034                           
  1035                           ;system.c: 27: ADCON1bits.PCFG = 0;
  1036                           
  1037                           ;incstack = 0
  1038  017846  90C1               	bcf	4033,0,c	;volatile
  1039  017848  92C1               	bcf	4033,1,c	;volatile
  1040  01784A  94C1               	bcf	4033,2,c	;volatile
  1041  01784C  96C1               	bcf	4033,3,c	;volatile
  1042                           
  1043                           ;system.c: 28: ADCON2bits.ADFM = 1;
  1044  01784E  8EC0               	bsf	4032,7,c	;volatile
  1045                           
  1046                           ;system.c: 32: ADCON1bits.VCFG0 = 0;
  1047  017850  98C1               	bcf	4033,4,c	;volatile
  1048                           
  1049                           ;system.c: 33: ADCON1bits.VCFG1 = 0;
  1050  017852  9AC1               	bcf	4033,5,c	;volatile
  1051                           
  1052                           ;system.c: 36: ADCON2bits.ACQT2 = 0;
  1053  017854  9AC0               	bcf	4032,5,c	;volatile
  1054                           
  1055                           ;system.c: 37: ADCON2bits.ACQT1 = 1;
  1056  017856  88C0               	bsf	4032,4,c	;volatile
  1057                           
  1058                           ;system.c: 38: ADCON2bits.ACQT0 = 0;
  1059  017858  96C0               	bcf	4032,3,c	;volatile
  1060                           
  1061                           ;system.c: 41: ADCON2bits.ADCS2 = 0;
  1062  01785A  94C0               	bcf	4032,2,c	;volatile
  1063                           
  1064                           ;system.c: 42: ADCON2bits.ADCS1 = 1;
  1065  01785C  82C0               	bsf	4032,1,c	;volatile
  1066                           
  1067                           ;system.c: 43: ADCON2bits.ADCS0 = 0;
  1068  01785E  90C0               	bcf	4032,0,c	;volatile
  1069                           
  1070                           ;system.c: 47: TRISAbits.TRISA0 = 1;
  1071  017860  8092               	bsf	3986,0,c	;volatile
  1072                           
  1073                           ;system.c: 48: TRISAbits.TRISA1 = 1;
  1074  017862  8292               	bsf	3986,1,c	;volatile
  1075                           
  1076                           ;system.c: 49: TRISAbits.TRISA2 = 1;
  1077  017864  8492               	bsf	3986,2,c	;volatile
  1078                           
  1079                           ;system.c: 50: TRISAbits.TRISA3 = 1;
  1080  017866  8692               	bsf	3986,3,c	;volatile
  1081                           
  1082                           ;system.c: 51: TRISAbits.TRISA5 = 1;
  1083  017868  8A92               	bsf	3986,5,c	;volatile
  1084                           
  1085                           ;system.c: 52: TRISEbits.TRISE0 = 1;
  1086  01786A  8096               	bsf	3990,0,c	;volatile
  1087                           
  1088                           ;system.c: 53: TRISEbits.TRISE1 = 1;
  1089  01786C  8296               	bsf	3990,1,c	;volatile
  1090                           
  1091                           ;system.c: 54: TRISEbits.TRISE2 = 1;
  1092  01786E  8496               	bsf	3990,2,c	;volatile
  1093                           
  1094                           ;system.c: 55: TRISBbits.TRISB1 = 1;
  1095  017870  8293               	bsf	3987,1,c	;volatile
  1096                           
  1097                           ;system.c: 56: TRISBbits.TRISB4 = 1;
  1098  017872  8893               	bsf	3987,4,c	;volatile
  1099                           
  1100                           ;system.c: 57: TRISBbits.TRISB0 = 1;
  1101  017874  8093               	bsf	3987,0,c	;volatile
  1102                           
  1103                           ;system.c: 60: ADCON0bits.ADON = 1;
  1104  017876  80C2               	bsf	4034,0,c	;volatile
  1105  017878  0012               	return		;funcret
  1106  01787A                     __end_of_setAnalogIn:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1l	equ	0xFE1
  1116                           status	equ	0xFD8
  1117                           
  1118 ;; *************** function _setActuatorCntrl *****************
  1119 ;; Defined at:
  1120 ;;		line 63 in file "system.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		None
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text2
  1148  0177F0                     __ptext2:
  1149                           	opt stack 0
  1150  0177F0                     _setActuatorCntrl:
  1151                           	opt stack 30
  1152                           
  1153                           ;system.c: 66: TRISDbits.TRISD0 = 0;
  1154                           
  1155                           ;incstack = 0
  1156  0177F0  9095               	bcf	3989,0,c	;volatile
  1157                           
  1158                           ;system.c: 67: TRISDbits.TRISD1 = 0;
  1159  0177F2  9295               	bcf	3989,1,c	;volatile
  1160                           
  1161                           ;system.c: 68: TRISDbits.TRISD2 = 0;
  1162  0177F4  9495               	bcf	3989,2,c	;volatile
  1163                           
  1164                           ;system.c: 69: TRISDbits.TRISD3 = 0;
  1165  0177F6  9695               	bcf	3989,3,c	;volatile
  1166                           
  1167                           ;system.c: 70: TRISDbits.TRISD4 = 0;
  1168  0177F8  9895               	bcf	3989,4,c	;volatile
  1169                           
  1170                           ;system.c: 71: TRISDbits.TRISD5 = 0;
  1171  0177FA  9A95               	bcf	3989,5,c	;volatile
  1172                           
  1173                           ;system.c: 72: TRISDbits.TRISD6 = 0;
  1174  0177FC  9C95               	bcf	3989,6,c	;volatile
  1175                           
  1176                           ;system.c: 73: TRISDbits.TRISD7 = 0;
  1177  0177FE  9E95               	bcf	3989,7,c	;volatile
  1178                           
  1179                           ;system.c: 75: TRISCbits.TRISC0 = 0;
  1180  017800  9094               	bcf	3988,0,c	;volatile
  1181                           
  1182                           ;system.c: 76: TRISCbits.TRISC1 = 0;
  1183  017802  9294               	bcf	3988,1,c	;volatile
  1184                           
  1185                           ;system.c: 77: TRISCbits.TRISC2 = 0;
  1186  017804  9494               	bcf	3988,2,c	;volatile
  1187                           
  1188                           ;system.c: 78: TRISCbits.TRISC3 = 0;
  1189  017806  9694               	bcf	3988,3,c	;volatile
  1190                           
  1191                           ;system.c: 79: TRISCbits.TRISC4 = 0;
  1192  017808  9894               	bcf	3988,4,c	;volatile
  1193                           
  1194                           ;system.c: 80: TRISCbits.TRISC5 = 0;
  1195  01780A  9A94               	bcf	3988,5,c	;volatile
  1196                           
  1197                           ;system.c: 81: TRISCbits.TRISC6 = 0;
  1198  01780C  9C94               	bcf	3988,6,c	;volatile
  1199                           
  1200                           ;system.c: 82: TRISCbits.TRISC7 = 0;
  1201  01780E  9E94               	bcf	3988,7,c	;volatile
  1202                           
  1203                           ;system.c: 85: TRISAbits.TRISA7 = 0;
  1204  017810  9E92               	bcf	3986,7,c	;volatile
  1205  017812  0012               	return		;funcret
  1206  017814                     __end_of_setActuatorCntrl:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           postinc0	equ	0xFEE
  1213                           wreg	equ	0xFE8
  1214                           postdec1	equ	0xFE5
  1215                           fsr1l	equ	0xFE1
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _selectAN7 *****************
  1219 ;; Defined at:
  1220 ;;		line 68 in file "ADC_Config.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text3
  1248  0177BE                     __ptext3:
  1249                           	opt stack 0
  1250  0177BE                     _selectAN7:
  1251                           	opt stack 30
  1252                           
  1253                           ;ADC_Config.c: 70: ADCON0bits.CHS = 0x07;
  1254                           
  1255                           ;incstack = 0
  1256  0177BE  50C2               	movf	4034,w,c	;volatile
  1257  0177C0  0BC3               	andlw	-61
  1258  0177C2  091C               	iorlw	28
  1259  0177C4  6EC2               	movwf	4034,c	;volatile
  1260  0177C6  0012               	return		;funcret
  1261  0177C8                     __end_of_selectAN7:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           postinc0	equ	0xFEE
  1268                           wreg	equ	0xFE8
  1269                           postdec1	equ	0xFE5
  1270                           fsr1l	equ	0xFE1
  1271                           status	equ	0xFD8
  1272                           
  1273 ;; *************** function _selectAN6 *****************
  1274 ;; Defined at:
  1275 ;;		line 62 in file "ADC_Config.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text4
  1303  0177B4                     __ptext4:
  1304                           	opt stack 0
  1305  0177B4                     _selectAN6:
  1306                           	opt stack 30
  1307                           
  1308                           ;ADC_Config.c: 64: ADCON0bits.CHS = 0x06;
  1309                           
  1310                           ;incstack = 0
  1311  0177B4  50C2               	movf	4034,w,c	;volatile
  1312  0177B6  0BC3               	andlw	-61
  1313  0177B8  0918               	iorlw	24
  1314  0177BA  6EC2               	movwf	4034,c	;volatile
  1315  0177BC  0012               	return		;funcret
  1316  0177BE                     __end_of_selectAN6:
  1317                           	opt stack 0
  1318                           tblptru	equ	0xFF8
  1319                           tblptrh	equ	0xFF7
  1320                           tblptrl	equ	0xFF6
  1321                           tablat	equ	0xFF5
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           postdec1	equ	0xFE5
  1325                           fsr1l	equ	0xFE1
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _selectAN5 *****************
  1329 ;; Defined at:
  1330 ;;		line 56 in file "ADC_Config.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text5
  1358  0177AA                     __ptext5:
  1359                           	opt stack 0
  1360  0177AA                     _selectAN5:
  1361                           	opt stack 30
  1362                           
  1363                           ;ADC_Config.c: 58: ADCON0bits.CHS = 0x05;
  1364                           
  1365                           ;incstack = 0
  1366  0177AA  50C2               	movf	4034,w,c	;volatile
  1367  0177AC  0BC3               	andlw	-61
  1368  0177AE  0914               	iorlw	20
  1369  0177B0  6EC2               	movwf	4034,c	;volatile
  1370  0177B2  0012               	return		;funcret
  1371  0177B4                     __end_of_selectAN5:
  1372                           	opt stack 0
  1373                           tblptru	equ	0xFF8
  1374                           tblptrh	equ	0xFF7
  1375                           tblptrl	equ	0xFF6
  1376                           tablat	equ	0xFF5
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           postdec1	equ	0xFE5
  1380                           fsr1l	equ	0xFE1
  1381                           status	equ	0xFD8
  1382                           
  1383 ;; *************** function _selectAN4 *****************
  1384 ;; Defined at:
  1385 ;;		line 50 in file "ADC_Config.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text6
  1413  0177A0                     __ptext6:
  1414                           	opt stack 0
  1415  0177A0                     _selectAN4:
  1416                           	opt stack 30
  1417                           
  1418                           ;ADC_Config.c: 52: ADCON0bits.CHS = 0x04;
  1419                           
  1420                           ;incstack = 0
  1421  0177A0  50C2               	movf	4034,w,c	;volatile
  1422  0177A2  0BC3               	andlw	-61
  1423  0177A4  0910               	iorlw	16
  1424  0177A6  6EC2               	movwf	4034,c	;volatile
  1425  0177A8  0012               	return		;funcret
  1426  0177AA                     __end_of_selectAN4:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           postdec1	equ	0xFE5
  1435                           fsr1l	equ	0xFE1
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _selectAN3 *****************
  1439 ;; Defined at:
  1440 ;;		line 44 in file "ADC_Config.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text7
  1468  017796                     __ptext7:
  1469                           	opt stack 0
  1470  017796                     _selectAN3:
  1471                           	opt stack 30
  1472                           
  1473                           ;ADC_Config.c: 46: ADCON0bits.CHS = 0x03;
  1474                           
  1475                           ;incstack = 0
  1476  017796  50C2               	movf	4034,w,c	;volatile
  1477  017798  0BC3               	andlw	-61
  1478  01779A  090C               	iorlw	12
  1479  01779C  6EC2               	movwf	4034,c	;volatile
  1480  01779E  0012               	return		;funcret
  1481  0177A0                     __end_of_selectAN3:
  1482                           	opt stack 0
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           postdec1	equ	0xFE5
  1490                           fsr1l	equ	0xFE1
  1491                           status	equ	0xFD8
  1492                           
  1493 ;; *************** function _selectAN2 *****************
  1494 ;; Defined at:
  1495 ;;		line 38 in file "ADC_Config.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text8
  1523  01778C                     __ptext8:
  1524                           	opt stack 0
  1525  01778C                     _selectAN2:
  1526                           	opt stack 30
  1527                           
  1528                           ;ADC_Config.c: 40: ADCON0bits.CHS = 0x02;
  1529                           
  1530                           ;incstack = 0
  1531  01778C  50C2               	movf	4034,w,c	;volatile
  1532  01778E  0BC3               	andlw	-61
  1533  017790  0908               	iorlw	8
  1534  017792  6EC2               	movwf	4034,c	;volatile
  1535  017794  0012               	return		;funcret
  1536  017796                     __end_of_selectAN2:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1l	equ	0xFE1
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _selectAN1 *****************
  1549 ;; Defined at:
  1550 ;;		line 32 in file "ADC_Config.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text9
  1578  017782                     __ptext9:
  1579                           	opt stack 0
  1580  017782                     _selectAN1:
  1581                           	opt stack 30
  1582                           
  1583                           ;ADC_Config.c: 34: ADCON0bits.CHS = 0x01;
  1584                           
  1585                           ;incstack = 0
  1586  017782  50C2               	movf	4034,w,c	;volatile
  1587  017784  0BC3               	andlw	-61
  1588  017786  0904               	iorlw	4
  1589  017788  6EC2               	movwf	4034,c	;volatile
  1590  01778A  0012               	return		;funcret
  1591  01778C                     __end_of_selectAN1:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           postdec1	equ	0xFE5
  1600                           fsr1l	equ	0xFE1
  1601                           status	equ	0xFD8
  1602                           
  1603 ;; *************** function _selectAN0 *****************
  1604 ;; Defined at:
  1605 ;;		line 26 in file "ADC_Config.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		None
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text10
  1633  017778                     __ptext10:
  1634                           	opt stack 0
  1635  017778                     _selectAN0:
  1636                           	opt stack 30
  1637                           
  1638                           ;ADC_Config.c: 28: ADCON0bits.CHS = 0x00;
  1639                           
  1640                           ;incstack = 0
  1641  017778  94C2               	bcf	4034,2,c	;volatile
  1642  01777A  96C2               	bcf	4034,3,c	;volatile
  1643  01777C  98C2               	bcf	4034,4,c	;volatile
  1644  01777E  9AC2               	bcf	4034,5,c	;volatile
  1645  017780  0012               	return		;funcret
  1646  017782                     __end_of_selectAN0:
  1647                           	opt stack 0
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postdec1	equ	0xFE5
  1655                           fsr1l	equ	0xFE1
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _readADC *****************
  1659 ;; Defined at:
  1660 ;;		line 73 in file "ADC_Config.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  digitalVal      2    2[COMRAM] unsigned int 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2    0[COMRAM] unsigned int 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;Total ram usage:        4 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text11
  1688  0177D6                     __ptext11:
  1689                           	opt stack 0
  1690  0177D6                     _readADC:
  1691                           	opt stack 30
  1692                           
  1693                           ;ADC_Config.c: 75: unsigned int digitalVal;
  1694                           ;ADC_Config.c: 77: ADCON0bits.GO_NOT_DONE = 1;
  1695                           
  1696                           ;incstack = 0
  1697  0177D6  82C2               	bsf	4034,1,c	;volatile
  1698  0177D8                     l125:
  1699  0177D8  B2C2               	btfsc	4034,1,c	;volatile
  1700  0177DA  D7FE               	goto	l125
  1701                           
  1702                           ;ADC_Config.c: 83: digitalVal = ADRESL;
  1703  0177DC  CFC3 F003          	movff	4035,readADC@digitalVal	;volatile
  1704  0177E0  6A04               	clrf	readADC@digitalVal+1,c
  1705                           
  1706                           ;ADC_Config.c: 84: digitalVal += ADRESH << 8;
  1707  0177E2  50C4               	movf	4036,w,c	;volatile
  1708  0177E4  2604               	addwf	readADC@digitalVal+1,f,c
  1709                           
  1710                           ;ADC_Config.c: 85: return digitalVal;
  1711  0177E6  C003  F001         	movff	readADC@digitalVal,?_readADC
  1712  0177EA  C004  F002         	movff	readADC@digitalVal+1,?_readADC+1
  1713  0177EE  0012               	return	
  1714  0177F0                     __end_of_readADC:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           postinc0	equ	0xFEE
  1721                           wreg	equ	0xFE8
  1722                           postdec1	equ	0xFE5
  1723                           fsr1l	equ	0xFE1
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _movement *****************
  1727 ;; Defined at:
  1728 ;;		line 28 in file "movements.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  current_pos     2    0[COMRAM] unsigned int 
  1731 ;;  set_point       2    2[COMRAM] unsigned int 
  1732 ;;  actuator        2    4[COMRAM] int 
  1733 ;;  margin          2    6[COMRAM] PTR int 
  1734 ;;		 -> margin6(2), margin5(2), margin4(2), margin3(2), 
  1735 ;;		 -> margin2(2), margin1(2), margin0(2), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  move1           2   12[COMRAM] int 
  1738 ;;  move0           2   10[COMRAM] int 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;Total ram usage:       14 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text12
  1762  017A1A                     __ptext12:
  1763                           	opt stack 0
  1764  017A1A                     _movement:
  1765                           	opt stack 30
  1766                           
  1767                           ;movements.c: 30: int move0;
  1768                           ;movements.c: 31: int move1;
  1769                           ;movements.c: 33: if(*margin == 0)
  1770                           
  1771                           ;incstack = 0
  1772  017A1A  C007  FFD9         	movff	movement@margin,fsr2l
  1773  017A1E  C008  FFDA         	movff	movement@margin+1,fsr2h
  1774  017A22  50DE               	movf	postinc2,w,c
  1775  017A24  10DE               	iorwf	postinc2,w,c
  1776  017A26  A4D8               	btfss	status,2,c
  1777  017A28  D02B               	goto	l1542
  1778                           
  1779                           ;movements.c: 34: {
  1780                           ;movements.c: 35: if (current_pos < set_point)
  1781  017A2A  5003               	movf	movement@set_point,w,c
  1782  017A2C  5C01               	subwf	movement@current_pos,w,c
  1783  017A2E  5004               	movf	movement@set_point+1,w,c
  1784  017A30  5802               	subwfb	movement@current_pos+1,w,c
  1785  017A32  B0D8               	btfsc	status,0,c
  1786  017A34  D008               	goto	l1534
  1787                           
  1788                           ;movements.c: 36: {
  1789                           ;movements.c: 37: move0 = 0;
  1790  017A36  0E00               	movlw	0
  1791  017A38  6E0C               	movwf	movement@move0+1,c
  1792  017A3A  0E00               	movlw	0
  1793  017A3C  6E0B               	movwf	movement@move0,c
  1794                           
  1795                           ;movements.c: 38: move1 = 1;
  1796  017A3E  0E00               	movlw	0
  1797  017A40  6E0E               	movwf	movement@move1+1,c
  1798  017A42  0E01               	movlw	1
  1799  017A44  D00A               	goto	L1
  1800  017A46                     l1534:
  1801  017A46  5001               	movf	movement@current_pos,w,c
  1802  017A48  5C03               	subwf	movement@set_point,w,c
  1803  017A4A  5002               	movf	movement@current_pos+1,w,c
  1804  017A4C  5804               	subwfb	movement@set_point+1,w,c
  1805  017A4E  B0D8               	btfsc	status,0,c
  1806  017A50  D006               	goto	l1538
  1807                           
  1808                           ;movements.c: 40: {
  1809                           ;movements.c: 41: move0 = 1;
  1810  017A52  0E00               	movlw	0
  1811  017A54  6E0C               	movwf	movement@move0+1,c
  1812  017A56  0E01               	movlw	1
  1813  017A58  D016               	goto	L2
  1814  017A5A                     L1:
  1815  017A5A  6E0D               	movwf	movement@move1,c
  1816                           
  1817                           ;movements.c: 43: } else
  1818  017A5C  D019               	goto	l1544
  1819  017A5E                     l1538:
  1820                           
  1821                           ;movements.c: 44: {
  1822                           ;movements.c: 45: move0 = 0;
  1823  017A5E  0E00               	movlw	0
  1824  017A60  6E0C               	movwf	movement@move0+1,c
  1825  017A62  0E00               	movlw	0
  1826  017A64  6E0B               	movwf	movement@move0,c
  1827                           
  1828                           ;movements.c: 46: move1 = 0;
  1829  017A66  0E00               	movlw	0
  1830  017A68  6E0E               	movwf	movement@move1+1,c
  1831  017A6A  0E00               	movlw	0
  1832  017A6C  6E0D               	movwf	movement@move1,c
  1833                           
  1834                           ;movements.c: 47: *margin = 1;
  1835  017A6E  C007  FFD9         	movff	movement@margin,fsr2l
  1836  017A72  C008  FFDA         	movff	movement@margin+1,fsr2h
  1837  017A76  0E01               	movlw	1
  1838  017A78  6EDE               	movwf	postinc2,c
  1839  017A7A  0E00               	movlw	0
  1840  017A7C  6EDD               	movwf	postdec2,c
  1841                           
  1842                           ;movements.c: 48: }
  1843                           ;movements.c: 49: } else
  1844  017A7E  D008               	goto	l1544
  1845  017A80                     l1542:
  1846                           
  1847                           ;movements.c: 50: {
  1848                           ;movements.c: 51: move0 = 0;
  1849  017A80  0E00               	movlw	0
  1850  017A82  6E0C               	movwf	movement@move0+1,c
  1851  017A84  0E00               	movlw	0
  1852  017A86                     L2:
  1853  017A86  6E0B               	movwf	movement@move0,c
  1854                           
  1855                           ;movements.c: 52: move1 = 0;
  1856  017A88  0E00               	movlw	0
  1857  017A8A  6E0E               	movwf	movement@move1+1,c
  1858  017A8C  0E00               	movlw	0
  1859  017A8E  D7E5               	goto	L1
  1860  017A90                     l1544:
  1861                           
  1862                           ;movements.c: 53: }
  1863                           ;movements.c: 75: if(actuator == 0)
  1864  017A90  5005               	movf	movement@actuator,w,c
  1865  017A92  1006               	iorwf	movement@actuator+1,w,c
  1866  017A94  A4D8               	btfss	status,2,c
  1867  017A96  D00B               	goto	l1548
  1868                           
  1869                           ;movements.c: 76: {
  1870                           ;movements.c: 77: LATCbits.LATC0 = move0;
  1871  017A98  B00B               	btfsc	movement@move0,0,c
  1872  017A9A  D002               	bra	u1005
  1873  017A9C  908B               	bcf	3979,0,c	;volatile
  1874  017A9E  D001               	bra	u1006
  1875  017AA0                     u1005:
  1876  017AA0  808B               	bsf	3979,0,c	;volatile
  1877  017AA2                     u1006:
  1878                           
  1879                           ;movements.c: 78: LATCbits.LATC1 = move1;
  1880  017AA2  B00D               	btfsc	movement@move1,0,c
  1881  017AA4  D002               	bra	u1015
  1882  017AA6  928B               	bcf	3979,1,c	;volatile
  1883  017AA8  D001               	bra	u1016
  1884  017AAA                     u1015:
  1885  017AAA  828B               	bsf	3979,1,c	;volatile
  1886  017AAC                     u1016:
  1887                           
  1888                           ;movements.c: 79: } else if (actuator == 1)
  1889  017AAC  0012               	return	
  1890  017AAE                     l1548:
  1891  017AAE  0405               	decf	movement@actuator,w,c
  1892  017AB0  1006               	iorwf	movement@actuator+1,w,c
  1893  017AB2  A4D8               	btfss	status,2,c
  1894  017AB4  D00B               	goto	l1552
  1895                           
  1896                           ;movements.c: 80: {
  1897                           ;movements.c: 81: LATCbits.LATC2 = move0;
  1898  017AB6  B00B               	btfsc	movement@move0,0,c
  1899  017AB8  D002               	bra	u1035
  1900  017ABA  948B               	bcf	3979,2,c	;volatile
  1901  017ABC  D001               	bra	u1036
  1902  017ABE                     u1035:
  1903  017ABE  848B               	bsf	3979,2,c	;volatile
  1904  017AC0                     u1036:
  1905                           
  1906                           ;movements.c: 82: LATCbits.LATC3 = move1;
  1907  017AC0  B00D               	btfsc	movement@move1,0,c
  1908  017AC2  D002               	bra	u1045
  1909  017AC4  968B               	bcf	3979,3,c	;volatile
  1910  017AC6  D001               	bra	u1046
  1911  017AC8                     u1045:
  1912  017AC8  868B               	bsf	3979,3,c	;volatile
  1913  017ACA                     u1046:
  1914                           
  1915                           ;movements.c: 83: } else if (actuator == 2)
  1916  017ACA  0012               	return	
  1917  017ACC                     l1552:
  1918  017ACC  0E02               	movlw	2
  1919  017ACE  1805               	xorwf	movement@actuator,w,c
  1920  017AD0  1006               	iorwf	movement@actuator+1,w,c
  1921  017AD2  A4D8               	btfss	status,2,c
  1922  017AD4  D00B               	goto	l1556
  1923                           
  1924                           ;movements.c: 84: {
  1925                           ;movements.c: 85: LATDbits.LATD0 = move0;
  1926  017AD6  B00B               	btfsc	movement@move0,0,c
  1927  017AD8  D002               	bra	u1065
  1928  017ADA  908C               	bcf	3980,0,c	;volatile
  1929  017ADC  D001               	bra	u1066
  1930  017ADE                     u1065:
  1931  017ADE  808C               	bsf	3980,0,c	;volatile
  1932  017AE0                     u1066:
  1933                           
  1934                           ;movements.c: 86: LATDbits.LATD1 = move1;
  1935  017AE0  B00D               	btfsc	movement@move1,0,c
  1936  017AE2  D002               	bra	u1075
  1937  017AE4  928C               	bcf	3980,1,c	;volatile
  1938  017AE6  D001               	bra	u1076
  1939  017AE8                     u1075:
  1940  017AE8  828C               	bsf	3980,1,c	;volatile
  1941  017AEA                     u1076:
  1942                           
  1943                           ;movements.c: 87: } else if (actuator == 3)
  1944  017AEA  0012               	return	
  1945  017AEC                     l1556:
  1946  017AEC  0E03               	movlw	3
  1947  017AEE  1805               	xorwf	movement@actuator,w,c
  1948  017AF0  1006               	iorwf	movement@actuator+1,w,c
  1949  017AF2  A4D8               	btfss	status,2,c
  1950  017AF4  D00B               	goto	l1560
  1951                           
  1952                           ;movements.c: 88: {
  1953                           ;movements.c: 89: LATDbits.LATD2 = move0;
  1954  017AF6  B00B               	btfsc	movement@move0,0,c
  1955  017AF8  D002               	bra	u1095
  1956  017AFA  948C               	bcf	3980,2,c	;volatile
  1957  017AFC  D001               	bra	u1096
  1958  017AFE                     u1095:
  1959  017AFE  848C               	bsf	3980,2,c	;volatile
  1960  017B00                     u1096:
  1961                           
  1962                           ;movements.c: 90: LATDbits.LATD3 = move1;
  1963  017B00  B00D               	btfsc	movement@move1,0,c
  1964  017B02  D002               	bra	u1105
  1965  017B04  968C               	bcf	3980,3,c	;volatile
  1966  017B06  D001               	bra	u1106
  1967  017B08                     u1105:
  1968  017B08  868C               	bsf	3980,3,c	;volatile
  1969  017B0A                     u1106:
  1970                           
  1971                           ;movements.c: 91: } else if (actuator == 4)
  1972  017B0A  0012               	return	
  1973  017B0C                     l1560:
  1974  017B0C  0E04               	movlw	4
  1975  017B0E  1805               	xorwf	movement@actuator,w,c
  1976  017B10  1006               	iorwf	movement@actuator+1,w,c
  1977  017B12  A4D8               	btfss	status,2,c
  1978  017B14  D00B               	goto	l1564
  1979                           
  1980                           ;movements.c: 92: {
  1981                           ;movements.c: 93: LATCbits.LATC4 = move0;
  1982  017B16  B00B               	btfsc	movement@move0,0,c
  1983  017B18  D002               	bra	u1125
  1984  017B1A  988B               	bcf	3979,4,c	;volatile
  1985  017B1C  D001               	bra	u1126
  1986  017B1E                     u1125:
  1987  017B1E  888B               	bsf	3979,4,c	;volatile
  1988  017B20                     u1126:
  1989                           
  1990                           ;movements.c: 94: LATCbits.LATC5 = move1;
  1991  017B20  B00D               	btfsc	movement@move1,0,c
  1992  017B22  D002               	bra	u1135
  1993  017B24  9A8B               	bcf	3979,5,c	;volatile
  1994  017B26  D001               	bra	u1136
  1995  017B28                     u1135:
  1996  017B28  8A8B               	bsf	3979,5,c	;volatile
  1997  017B2A                     u1136:
  1998                           
  1999                           ;movements.c: 95: } else if (actuator == 5)
  2000  017B2A  0012               	return	
  2001  017B2C                     l1564:
  2002  017B2C  0E05               	movlw	5
  2003  017B2E  1805               	xorwf	movement@actuator,w,c
  2004  017B30  1006               	iorwf	movement@actuator+1,w,c
  2005  017B32  A4D8               	btfss	status,2,c
  2006  017B34  D00B               	goto	l1568
  2007                           
  2008                           ;movements.c: 96: {
  2009                           ;movements.c: 97: LATCbits.LATC6 = move0;
  2010  017B36  B00B               	btfsc	movement@move0,0,c
  2011  017B38  D002               	bra	u1155
  2012  017B3A  9C8B               	bcf	3979,6,c	;volatile
  2013  017B3C  D001               	bra	u1156
  2014  017B3E                     u1155:
  2015  017B3E  8C8B               	bsf	3979,6,c	;volatile
  2016  017B40                     u1156:
  2017                           
  2018                           ;movements.c: 98: LATCbits.LATC7 = move1;
  2019  017B40  B00D               	btfsc	movement@move1,0,c
  2020  017B42  D002               	bra	u1165
  2021  017B44  9E8B               	bcf	3979,7,c	;volatile
  2022  017B46  D001               	bra	u1166
  2023  017B48                     u1165:
  2024  017B48  8E8B               	bsf	3979,7,c	;volatile
  2025  017B4A                     u1166:
  2026                           
  2027                           ;movements.c: 99: } else if (actuator == 6)
  2028  017B4A  0012               	return	
  2029  017B4C                     l1568:
  2030  017B4C  0E06               	movlw	6
  2031  017B4E  1805               	xorwf	movement@actuator,w,c
  2032  017B50  1006               	iorwf	movement@actuator+1,w,c
  2033  017B52  A4D8               	btfss	status,2,c
  2034  017B54  D00B               	goto	l1572
  2035                           
  2036                           ;movements.c: 100: {
  2037                           ;movements.c: 101: LATDbits.LATD4 = move0;
  2038  017B56  B00B               	btfsc	movement@move0,0,c
  2039  017B58  D002               	bra	u1185
  2040  017B5A  988C               	bcf	3980,4,c	;volatile
  2041  017B5C  D001               	bra	u1186
  2042  017B5E                     u1185:
  2043  017B5E  888C               	bsf	3980,4,c	;volatile
  2044  017B60                     u1186:
  2045                           
  2046                           ;movements.c: 102: LATDbits.LATD5 = move1;
  2047  017B60  B00D               	btfsc	movement@move1,0,c
  2048  017B62  D002               	bra	u1195
  2049  017B64  9A8C               	bcf	3980,5,c	;volatile
  2050  017B66  D001               	bra	u1196
  2051  017B68                     u1195:
  2052  017B68  8A8C               	bsf	3980,5,c	;volatile
  2053  017B6A                     u1196:
  2054                           
  2055                           ;movements.c: 103: } else if (actuator == 7)
  2056  017B6A  0012               	return	
  2057  017B6C                     l1572:
  2058  017B6C  0E07               	movlw	7
  2059  017B6E  1805               	xorwf	movement@actuator,w,c
  2060  017B70  1006               	iorwf	movement@actuator+1,w,c
  2061  017B72  A4D8               	btfss	status,2,c
  2062  017B74  0012               	return	
  2063                           
  2064                           ;movements.c: 104: {
  2065                           ;movements.c: 105: LATDbits.LATD6 = move0;
  2066  017B76  B00B               	btfsc	movement@move0,0,c
  2067  017B78  D002               	bra	u1215
  2068  017B7A  9C8C               	bcf	3980,6,c	;volatile
  2069  017B7C  D001               	bra	u1216
  2070  017B7E                     u1215:
  2071  017B7E  8C8C               	bsf	3980,6,c	;volatile
  2072  017B80                     u1216:
  2073                           
  2074                           ;movements.c: 106: LATDbits.LATD7 = move1;
  2075  017B80  B00D               	btfsc	movement@move1,0,c
  2076  017B82  D002               	bra	u1225
  2077  017B84  9E8C               	bcf	3980,7,c	;volatile
  2078  017B86  D001               	bra	u1226
  2079  017B88                     u1225:
  2080  017B88  8E8C               	bsf	3980,7,c	;volatile
  2081  017B8A                     u1226:
  2082  017B8A  0012               	return	
  2083  017B8C                     __end_of_movement:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1l	equ	0xFE1
  2093                           postinc2	equ	0xFDE
  2094                           postdec2	equ	0xFDD
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _ecan_rxb0_clear *****************
  2100 ;; Defined at:
  2101 ;;		line 203 in file "can.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		None
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text13
  2129  017770                     __ptext13:
  2130                           	opt stack 0
  2131  017770                     _ecan_rxb0_clear:
  2132                           	opt stack 30
  2133                           
  2134                           ;can.c: 205: RXB0CONbits.RXB0FUL = 0;
  2135                           
  2136                           ;incstack = 0
  2137  017770  9E60               	bcf	3936,7,c	;volatile
  2138  017772  0012               	return		;funcret
  2139  017774                     __end_of_ecan_rxb0_clear:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           postinc0	equ	0xFEE
  2146                           wreg	equ	0xFE8
  2147                           postdec1	equ	0xFE5
  2148                           fsr1l	equ	0xFE1
  2149                           postinc2	equ	0xFDE
  2150                           postdec2	equ	0xFDD
  2151                           fsr2h	equ	0xFDA
  2152                           fsr2l	equ	0xFD9
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _ecan_receive_rxb0 *****************
  2156 ;; Defined at:
  2157 ;;		line 137 in file "can.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  mess            2    0[COMRAM] PTR struct Message
  2160 ;;		 -> main@newMessage(11), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2176 ;;Total ram usage:        4 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text14
  2186  017938                     __ptext14:
  2187                           	opt stack 0
  2188  017938                     _ecan_receive_rxb0:
  2189                           	opt stack 30
  2190                           
  2191                           ;can.c: 143: mess->data[7] = RXB0D7;
  2192                           
  2193                           ;incstack = 0
  2194  017938  EE20 F007          	lfsr	2,7
  2195  01793C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2196  01793E  26D9               	addwf	fsr2l,f,c
  2197  017940  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2198  017942  22DA               	addwfc	fsr2h,f,c
  2199  017944  CF6D FFDF          	movff	3949,indf2	;volatile
  2200                           
  2201                           ;can.c: 144: mess->data[6] = RXB0D6;
  2202  017948  EE20 F006          	lfsr	2,6
  2203  01794C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2204  01794E  26D9               	addwf	fsr2l,f,c
  2205  017950  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2206  017952  22DA               	addwfc	fsr2h,f,c
  2207  017954  CF6C FFDF          	movff	3948,indf2	;volatile
  2208                           
  2209                           ;can.c: 145: mess->data[5] = RXB0D5;
  2210  017958  EE20 F005          	lfsr	2,5
  2211  01795C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2212  01795E  26D9               	addwf	fsr2l,f,c
  2213  017960  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2214  017962  22DA               	addwfc	fsr2h,f,c
  2215  017964  CF6B FFDF          	movff	3947,indf2	;volatile
  2216                           
  2217                           ;can.c: 146: mess->data[4] = RXB0D4;
  2218  017968  EE20 F004          	lfsr	2,4
  2219  01796C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2220  01796E  26D9               	addwf	fsr2l,f,c
  2221  017970  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2222  017972  22DA               	addwfc	fsr2h,f,c
  2223  017974  CF6A FFDF          	movff	3946,indf2	;volatile
  2224                           
  2225                           ;can.c: 147: mess->data[3] = RXB0D3;
  2226  017978  EE20 F003          	lfsr	2,3
  2227  01797C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2228  01797E  26D9               	addwf	fsr2l,f,c
  2229  017980  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2230  017982  22DA               	addwfc	fsr2h,f,c
  2231  017984  CF69 FFDF          	movff	3945,indf2	;volatile
  2232                           
  2233                           ;can.c: 148: mess->data[2] = RXB0D2;
  2234  017988  EE20 F002          	lfsr	2,2
  2235  01798C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2236  01798E  26D9               	addwf	fsr2l,f,c
  2237  017990  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2238  017992  22DA               	addwfc	fsr2h,f,c
  2239  017994  CF68 FFDF          	movff	3944,indf2	;volatile
  2240                           
  2241                           ;can.c: 149: mess->data[1] = RXB0D1;
  2242  017998  EE20 F001          	lfsr	2,1
  2243  01799C  5001               	movf	ecan_receive_rxb0@mess,w,c
  2244  01799E  26D9               	addwf	fsr2l,f,c
  2245  0179A0  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2246  0179A2  22DA               	addwfc	fsr2h,f,c
  2247  0179A4  CF67 FFDF          	movff	3943,indf2	;volatile
  2248                           
  2249                           ;can.c: 150: mess->data[0] = RXB0D0;
  2250  0179A8  C001  FFD9         	movff	ecan_receive_rxb0@mess,fsr2l
  2251  0179AC  C002  FFDA         	movff	ecan_receive_rxb0@mess+1,fsr2h
  2252  0179B0  CF66 FFDF          	movff	3942,indf2	;volatile
  2253                           
  2254                           ;can.c: 153: mess->sid = RXB0SIDH << 3;
  2255  0179B4  5061               	movf	3937,w,c	;volatile
  2256  0179B6  6E03               	movwf	??_ecan_receive_rxb0& (0+255),c
  2257  0179B8  6A04               	clrf	(??_ecan_receive_rxb0+1)& (0+255),c
  2258  0179BA  90D8               	bcf	status,0,c
  2259  0179BC  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2260  0179BE  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2261  0179C0  90D8               	bcf	status,0,c
  2262  0179C2  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2263  0179C4  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2264  0179C6  90D8               	bcf	status,0,c
  2265  0179C8  3603               	rlcf	??_ecan_receive_rxb0,f,c
  2266  0179CA  3604               	rlcf	??_ecan_receive_rxb0+1,f,c
  2267  0179CC  EE20 F008          	lfsr	2,8
  2268  0179D0  5001               	movf	ecan_receive_rxb0@mess,w,c
  2269  0179D2  26D9               	addwf	fsr2l,f,c
  2270  0179D4  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2271  0179D6  22DA               	addwfc	fsr2h,f,c
  2272  0179D8  C003  FFDE         	movff	??_ecan_receive_rxb0,postinc2
  2273  0179DC  C004  FFDD         	movff	??_ecan_receive_rxb0+1,postdec2
  2274                           
  2275                           ;can.c: 154: mess->sid |= RXB0SIDL >> 5;
  2276  0179E0  EE20 F008          	lfsr	2,8
  2277  0179E4  5001               	movf	ecan_receive_rxb0@mess,w,c
  2278  0179E6  26D9               	addwf	fsr2l,f,c
  2279  0179E8  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2280  0179EA  22DA               	addwfc	fsr2h,f,c
  2281  0179EC  CF62 F003          	movff	3938,??_ecan_receive_rxb0	;volatile
  2282  0179F0  0E05               	movlw	5
  2283  0179F2  6E04               	movwf	(??_ecan_receive_rxb0+1)& (0+255),c
  2284  0179F4                     u945:
  2285  0179F4  90D8               	bcf	status,0,c
  2286  0179F6  3203               	rrcf	??_ecan_receive_rxb0,f,c
  2287  0179F8  2E04               	decfsz	(??_ecan_receive_rxb0+1)& (0+255),f,c
  2288  0179FA  D7FC               	goto	u945
  2289  0179FC  5003               	movf	??_ecan_receive_rxb0,w,c
  2290  0179FE  12DE               	iorwf	postinc2,f,c
  2291  017A00  0E00               	movlw	0
  2292  017A02  12DD               	iorwf	postdec2,f,c
  2293                           
  2294                           ;can.c: 157: mess->len = 0x0F & RXB0DLC;
  2295  017A04  EE20 F00A          	lfsr	2,10
  2296  017A08  5001               	movf	ecan_receive_rxb0@mess,w,c
  2297  017A0A  26D9               	addwf	fsr2l,f,c
  2298  017A0C  5002               	movf	ecan_receive_rxb0@mess+1,w,c
  2299  017A0E  22DA               	addwfc	fsr2h,f,c
  2300  017A10  5065               	movf	3941,w,c	;volatile
  2301  017A12  0B0F               	andlw	15
  2302  017A14  6EDF               	movwf	indf2,c
  2303                           
  2304                           ;can.c: 160: RXB0CONbits.RXB0FUL = 0;
  2305  017A16  9E60               	bcf	3936,7,c	;volatile
  2306  017A18  0012               	return		;funcret
  2307  017A1A                     __end_of_ecan_receive_rxb0:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1l	equ	0xFE1
  2317                           indf2	equ	0xFDF
  2318                           postinc2	equ	0xFDE
  2319                           postdec2	equ	0xFDD
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function _ecan_init *****************
  2325 ;; Defined at:
  2326 ;;		line 11 in file "can.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  mask0           2    4[COMRAM] short 
  2331 ;;  sid0            2    2[COMRAM] short 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2344 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;Total ram usage:        6 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text15
  2355  01787A                     __ptext15:
  2356                           	opt stack 0
  2357  01787A                     _ecan_init:
  2358                           	opt stack 30
  2359                           
  2360                           ;can.c: 14: TRISBbits.TRISB2 = 0;
  2361                           
  2362                           ;incstack = 0
  2363  01787A  9493               	bcf	3987,2,c	;volatile
  2364                           
  2365                           ;can.c: 15: TRISBbits.TRISB3 = 1;
  2366  01787C  8693               	bsf	3987,3,c	;volatile
  2367                           
  2368                           ;can.c: 18: CANCONbits.REQOP2 = 1;
  2369  01787E  8E6F               	bsf	3951,7,c	;volatile
  2370  017880                     l233:
  2371  017880  AE6E               	btfss	3950,7,c	;volatile
  2372  017882  AC6E               	btfss	3950,6,c	;volatile
  2373  017884  D002               	goto	l237
  2374  017886  BA6E               	btfsc	3950,5,c	;volatile
  2375  017888  D7FB               	goto	l233
  2376  01788A                     l237:
  2377                           
  2378                           ;can.c: 26: CIOCONbits.ENDRHI = 0;
  2379  01788A  9A73               	bcf	3955,5,c	;volatile
  2380                           
  2381                           ;can.c: 29: BRGCON1bits.SJW1 = 0;
  2382  01788C  9E70               	bcf	3952,7,c	;volatile
  2383                           
  2384                           ;can.c: 30: BRGCON1bits.SJW0 = 0;
  2385  01788E  9C70               	bcf	3952,6,c	;volatile
  2386                           
  2387                           ;can.c: 31: BRGCON1bits.BRP5 = 0;
  2388  017890  9A70               	bcf	3952,5,c	;volatile
  2389                           
  2390                           ;can.c: 32: BRGCON1bits.BRP4 = 0;
  2391  017892  9870               	bcf	3952,4,c	;volatile
  2392                           
  2393                           ;can.c: 33: BRGCON1bits.BRP3 = 0;
  2394  017894  9670               	bcf	3952,3,c	;volatile
  2395                           
  2396                           ;can.c: 34: BRGCON1bits.BRP2 = 0;
  2397  017896  9470               	bcf	3952,2,c	;volatile
  2398                           
  2399                           ;can.c: 35: BRGCON1bits.BRP1 = 0;
  2400  017898  9270               	bcf	3952,1,c	;volatile
  2401                           
  2402                           ;can.c: 36: BRGCON1bits.BRP0 = 1;
  2403  01789A  8070               	bsf	3952,0,c	;volatile
  2404                           
  2405                           ;can.c: 38: BRGCON2bits.SEG2PHTS = 1;
  2406  01789C  8E71               	bsf	3953,7,c	;volatile
  2407                           
  2408                           ;can.c: 39: BRGCON2bits.SAM = 1;
  2409  01789E  8C71               	bsf	3953,6,c	;volatile
  2410                           
  2411                           ;can.c: 40: BRGCON2bits.SEG1PH2 = 0;
  2412  0178A0  9A71               	bcf	3953,5,c	;volatile
  2413                           
  2414                           ;can.c: 41: BRGCON2bits.SEG1PH1 = 0;
  2415  0178A2  9871               	bcf	3953,4,c	;volatile
  2416                           
  2417                           ;can.c: 42: BRGCON2bits.SEG1PH0 = 1;
  2418  0178A4  8671               	bsf	3953,3,c	;volatile
  2419                           
  2420                           ;can.c: 43: BRGCON2bits.PRSEG2 = 0;
  2421  0178A6  9471               	bcf	3953,2,c	;volatile
  2422                           
  2423                           ;can.c: 44: BRGCON2bits.PRSEG1 = 1;
  2424  0178A8  8271               	bsf	3953,1,c	;volatile
  2425                           
  2426                           ;can.c: 45: BRGCON2bits.PRSEG0 = 0;
  2427  0178AA  9071               	bcf	3953,0,c	;volatile
  2428                           
  2429                           ;can.c: 49: BRGCON3bits.SEG2PH2 = 0;
  2430  0178AC  9472               	bcf	3954,2,c	;volatile
  2431                           
  2432                           ;can.c: 50: BRGCON3bits. SEG2PH1 = 0;
  2433  0178AE  9272               	bcf	3954,1,c	;volatile
  2434                           
  2435                           ;can.c: 51: BRGCON3bits. SEG2PH0 = 1;
  2436  0178B0  8072               	bsf	3954,0,c	;volatile
  2437                           
  2438                           ;can.c: 54: ECANCONbits.MDSEL1 = 0;
  2439  0178B2  9E77               	bcf	3959,7,c	;volatile
  2440                           
  2441                           ;can.c: 55: ECANCONbits.MDSEL0 = 0;
  2442  0178B4  9C77               	bcf	3959,6,c	;volatile
  2443                           
  2444                           ;can.c: 62: RXB0CONbits.RXM1 = 0;
  2445  0178B6  9C60               	bcf	3936,6,c	;volatile
  2446                           
  2447                           ;can.c: 63: RXB0CONbits.RXM0 = 1;
  2448  0178B8  8A60               	bsf	3936,5,c	;volatile
  2449                           
  2450                           ;can.c: 78: short sid0 = 0x00A;
  2451  0178BA  0E00               	movlw	0
  2452  0178BC  6E04               	movwf	ecan_init@sid0+1,c
  2453  0178BE  0E0A               	movlw	10
  2454  0178C0  6E03               	movwf	ecan_init@sid0,c
  2455                           
  2456                           ;can.c: 79: short mask0 = 0x7FF;
  2457  0178C2  0E07               	movlw	7
  2458  0178C4  6E06               	movwf	ecan_init@mask0+1,c
  2459  0178C6  6805               	setf	ecan_init@mask0,c
  2460                           
  2461                           ;can.c: 81: RXF0SIDH = sid0 >> 3;
  2462  0178C8  C003  F001         	movff	ecan_init@sid0,??_ecan_init
  2463  0178CC  C004  F002         	movff	ecan_init@sid0+1,??_ecan_init+1
  2464  0178D0  3402               	rlcf	??_ecan_init+1,w,c
  2465  0178D2  3202               	rrcf	??_ecan_init+1,f,c
  2466  0178D4  3201               	rrcf	??_ecan_init,f,c
  2467  0178D6  3402               	rlcf	??_ecan_init+1,w,c
  2468  0178D8  3202               	rrcf	??_ecan_init+1,f,c
  2469  0178DA  3201               	rrcf	??_ecan_init,f,c
  2470  0178DC  3402               	rlcf	??_ecan_init+1,w,c
  2471  0178DE  3202               	rrcf	??_ecan_init+1,f,c
  2472  0178E0  3201               	rrcf	??_ecan_init,f,c
  2473  0178E2  5001               	movf	??_ecan_init,w,c
  2474  0178E4  010F               	movlb	15	; () banked
  2475  0178E6  6F00               	movwf	0,b	;volatile
  2476                           
  2477                           ; BSR set to: 15
  2478                           ;can.c: 82: RXF0SIDL = sid0 << 5;
  2479  0178E8  3803               	swapf	ecan_init@sid0,w,c
  2480  0178EA  46E8               	rlncf	wreg,f,c
  2481  0178EC  0BE0               	andlw	224
  2482  0178EE  010F               	movlb	15	; () banked
  2483  0178F0  6F01               	movwf	1,b	;volatile
  2484                           
  2485                           ; BSR set to: 15
  2486                           ;can.c: 83: RXM0SIDH = mask0 >> 3;
  2487  0178F2  C005  F001         	movff	ecan_init@mask0,??_ecan_init
  2488  0178F6  C006  F002         	movff	ecan_init@mask0+1,??_ecan_init+1
  2489  0178FA  3402               	rlcf	??_ecan_init+1,w,c
  2490  0178FC  3202               	rrcf	??_ecan_init+1,f,c
  2491  0178FE  3201               	rrcf	??_ecan_init,f,c
  2492  017900  3402               	rlcf	??_ecan_init+1,w,c
  2493  017902  3202               	rrcf	??_ecan_init+1,f,c
  2494  017904  3201               	rrcf	??_ecan_init,f,c
  2495  017906  3402               	rlcf	??_ecan_init+1,w,c
  2496  017908  3202               	rrcf	??_ecan_init+1,f,c
  2497  01790A  3201               	rrcf	??_ecan_init,f,c
  2498  01790C  5001               	movf	??_ecan_init,w,c
  2499  01790E  010F               	movlb	15	; () banked
  2500  017910  6F18               	movwf	24,b	;volatile
  2501                           
  2502                           ; BSR set to: 15
  2503                           ;can.c: 84: RXM0SIDL = mask0 << 5;
  2504  017912  3805               	swapf	ecan_init@mask0,w,c
  2505  017914  46E8               	rlncf	wreg,f,c
  2506  017916  0BE0               	andlw	224
  2507  017918  010F               	movlb	15	; () banked
  2508  01791A  6F19               	movwf	25,b	;volatile
  2509                           
  2510                           ; BSR set to: 15
  2511                           ;can.c: 85: RXF0SIDLbits.EXIDEN = 0;
  2512  01791C  010F               	movlb	15	; () banked
  2513  01791E  9701               	bcf	1,3,b	;volatile
  2514                           
  2515                           ; BSR set to: 15
  2516                           ;can.c: 86: RXFCON0bits.RXF0EN = 1;
  2517  017920  010D               	movlb	13	; () banked
  2518  017922  81D4               	bsf	212,0,b	;volatile
  2519                           
  2520                           ; BSR set to: 13
  2521                           ;can.c: 104: CANCONbits.REQOP2 = 0;
  2522  017924  9E6F               	bcf	3951,7,c	;volatile
  2523                           
  2524                           ; BSR set to: 13
  2525                           ;can.c: 105: CANCONbits.REQOP1 = 0;
  2526  017926  9C6F               	bcf	3951,6,c	;volatile
  2527                           
  2528                           ; BSR set to: 13
  2529                           ;can.c: 106: CANCONbits.REQOP0 = 0;
  2530  017928  9A6F               	bcf	3951,5,c	;volatile
  2531  01792A                     l238:
  2532  01792A  AE6E               	btfss	3950,7,c	;volatile
  2533  01792C  0012               	return	
  2534  01792E  AC6E               	btfss	3950,6,c	;volatile
  2535  017930  0012               	return	
  2536  017932  AA6E               	btfss	3950,5,c	;volatile
  2537  017934  0012               	return	
  2538  017936  D7F9               	goto	l238
  2539  017938                     __end_of_ecan_init:
  2540                           	opt stack 0
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           postdec1	equ	0xFE5
  2548                           fsr1l	equ	0xFE1
  2549                           indf2	equ	0xFDF
  2550                           postinc2	equ	0xFDE
  2551                           postdec2	equ	0xFDD
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _ConfigureOscillator *****************
  2557 ;; Defined at:
  2558 ;;		line 24 in file "config.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		None
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text16
  2586  0177C8                     __ptext16:
  2587                           	opt stack 0
  2588  0177C8                     _ConfigureOscillator:
  2589                           	opt stack 30
  2590                           
  2591                           ;config.c: 29: OSCCONbits.IRCF2 = 1;
  2592                           
  2593                           ;incstack = 0
  2594  0177C8  8CD3               	bsf	4051,6,c	;volatile
  2595                           
  2596                           ;config.c: 30: OSCCONbits.IRCF1 = 1;
  2597  0177CA  8AD3               	bsf	4051,5,c	;volatile
  2598                           
  2599                           ;config.c: 31: OSCCONbits.IRCF0 = 1;
  2600  0177CC  88D3               	bsf	4051,4,c	;volatile
  2601                           
  2602                           ;config.c: 33: OSCCONbits.SCS1 = 0;
  2603  0177CE  92D3               	bcf	4051,1,c	;volatile
  2604                           
  2605                           ;config.c: 34: OSCCONbits.SCS0 = 0;
  2606  0177D0  90D3               	bcf	4051,0,c	;volatile
  2607                           
  2608                           ;config.c: 36: OSCTUNEbits.PLLEN = 1;
  2609  0177D2  8C9B               	bsf	3995,6,c	;volatile
  2610  0177D4  0012               	return		;funcret
  2611  0177D6                     __end_of_ConfigureOscillator:
  2612                           	opt stack 0
  2613  0000                     tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           postdec1	equ	0xFE5
  2620                           fsr1l	equ	0xFE1
  2621                           indf2	equ	0xFDF
  2622                           postinc2	equ	0xFDE
  2623                           postdec2	equ	0xFDD
  2624                           fsr2h	equ	0xFDA
  2625                           fsr2l	equ	0xFD9
  2626                           status	equ	0xFD8
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           postdec1	equ	0xFE5
  2634                           fsr1l	equ	0xFE1
  2635                           indf2	equ	0xFDF
  2636                           postinc2	equ	0xFDE
  2637                           postdec2	equ	0xFDD
  2638                           fsr2h	equ	0xFDA
  2639                           fsr2l	equ	0xFD9
  2640                           status	equ	0xFD8
  2641                           
  2642                           	psect	rparam
  2643  0000                     tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec1	equ	0xFE5
  2650                           fsr1l	equ	0xFE1
  2651                           indf2	equ	0xFDF
  2652                           postinc2	equ	0xFDE
  2653                           postdec2	equ	0xFDD
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    movement@margin	PTR int  size(2) Largest target is 2
		 -> margin6(COMRAM[2]), margin5(COMRAM[2]), margin4(COMRAM[2]), margin3(COMRAM[2]), 
		 -> margin2(COMRAM[2]), margin1(COMRAM[2]), margin0(COMRAM[2]), 

    ecan_receive_rxb0@mess	PTR struct Message size(2) Largest target is 11
		 -> main@newMessage(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_movement

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0    7479
                                             14 COMRAM    31    31      0
                _ConfigureOscillator
                          _ecan_init
                  _ecan_receive_rxb0
                    _ecan_rxb0_clear
                           _movement
                            _readADC
                          _selectAN0
                          _selectAN1
                          _selectAN2
                          _selectAN3
                          _selectAN4
                          _selectAN5
                          _selectAN6
                          _selectAN7
                   _setActuatorCntrl
                        _setAnalogIn
 ---------------------------------------------------------------------------------
 (1) _setAnalogIn                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setActuatorCntrl                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN7                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN6                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN5                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _movement                                            14     6      8    6044
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ecan_rxb0_clear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ecan_receive_rxb0                                    4     2      2     306
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ecan_init                                            6     6      0      60
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _ecan_init
   _ecan_receive_rxb0
   _ecan_rxb0_clear
   _movement
   _readADC
   _selectAN0
   _selectAN1
   _selectAN2
   _selectAN3
   _selectAN4
   _selectAN5
   _selectAN6
   _selectAN7
   _setActuatorCntrl
   _setAnalogIn

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      43       1       70.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      20        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 10 07:29:21 2016

                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                   __CFG_LVP$ON 000000                           l125 77D8  
                         l233 7880                           l237 788A                           l238 792A  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           u945 79F4  
                         wreg 000FE8                  __CFG_WDT$OFF 000000                          l1604 7BEC  
                        l1534 7A46                          l1542 7A80                          l1630 7C4C  
                        l1560 7B0C                          l1552 7ACC                          l1544 7A90  
                        l1640 7C6E                          l1538 7A5E                          l1634 7C5A  
                        l1572 7B6C                          l1564 7B2C                          l1556 7AEC  
                        l1548 7AAE                          l1638 7C6A                          l1568 7B4C  
                        l1684 7F02                          l1678 7DF8                          _BACK 0030  
                        u1005 7AA0                          u1006 7AA2                          u1015 7AAA  
                        u1016 7AAC                          u1105 7B08                          u1106 7B0A  
                        u1035 7ABE                          u1036 7AC0                          u1125 7B1E  
                        u1045 7AC8                          u1126 7B20                          u1046 7ACA  
                        u1215 7B7E                          u1135 7B28                          u1216 7B80  
                        u1136 7B2A                          u1225 7B88                          u1065 7ADE  
                        u1226 7B8A                          u1066 7AE0                          u1155 7B3E  
                        u1075 7AE8                          u1156 7B40                          u1076 7AEA  
                        u1165 7B48                          u1166 7B4A                          u1095 7AFE  
                        u1096 7B00                          u1185 7B5E                          u1186 7B60  
                        u1195 7B68                          u1196 7B6A                          _FORW 0031  
                        _main 7B8C                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          start 0000  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000010  
     __end_of_ecan_rxb0_clear 7774                         ?_main 0001           _ConfigureOscillator 77C8  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000  
               __CFG_WRT5$OFF 000000      __end_of_setActuatorCntrl 7814                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                __CFG_EBTR4$OFF 000000                __CFG_EBTR5$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
             __end_of_readADC 77F0                __CFG_EBTRB$OFF 000000                         tablat 000FF5  
                       status 000FD8                __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001  
             __initialization 7814                  ?_setAnalogIn 0001                  __end_of_main 8000  
               main@actuator0 0011                 main@actuator1 0013                 main@actuator2 0015  
               main@actuator3 0017                 main@actuator4 0019                 main@actuator5 001B  
               main@actuator6 001D                 main@actuator7 000F                        ??_main 000F  
               __activetblptr 000000                        _ADRESH 000FC4                        _ADRESL 000FC3  
             __CFG_BBSIZ$1024 000000                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB0D4 000F4A                        _TXB0D5 000F4B                        _TXB0D6 000F4C  
                      _TXB0D7 000F4D         ??_ConfigureOscillator 0001              movement@actuator 0005  
              __CFG_XINST$OFF 000000                 main@extendPos 002C                __CFG_STVREN$ON 000000  
            ?_ecan_rxb0_clear 0001                        clear_0 781A                     ??_readADC 0003  
             __CFG_BOREN$BOHW 000000                 ecan_init@sid0 0003                  __pdataCOMRAM 0040  
            __end_of_movement 7B8C                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 7840  
               ___rparam_used 000001                __pcstackCOMRAM 0001            __size_of_ecan_init 00BE  
          __size_of_selectAN0 000A            __size_of_selectAN1 000A            __size_of_selectAN2 000A  
          __size_of_selectAN3 000A            __size_of_selectAN4 000A            __size_of_selectAN5 000A  
          __size_of_selectAN6 000A            __size_of_selectAN7 000A          __size_of_setAnalogIn 0034  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55             ?_setActuatorCntrl 0001  
                     _TXB0DLC 000F45             __end_of_ecan_init 7938            ??_setActuatorCntrl 0001  
              main@newMessage 0021                       __Hparam 0000                       __Lparam 0000  
                   ?_movement 0001                       __pcinit 7814                       __ramtop 0D00  
                     __ptext0 7B8C                       __ptext1 7846                       __ptext2 77F0  
                     __ptext3 77BE                       __ptext4 77B4                       __ptext5 77AA  
                     __ptext6 77A0                       __ptext7 7796                       __ptext8 778C  
                     __ptext9 7782                       _readADC 77D6                       _margin0 0032  
                     _margin1 0034                       _margin2 0036                       _margin3 0038  
                     _margin4 003A                       _margin5 003C                       _margin6 003E  
                     _margin7 002E                main@retractPos 001F             __end_of_selectAN0 7782  
           __end_of_selectAN1 778C             __end_of_selectAN2 7796             __end_of_selectAN3 77A0  
        end_of_initialization 7840             __end_of_selectAN4 77AA             __end_of_selectAN5 77B4  
           __end_of_selectAN6 77BE             __end_of_selectAN7 77C8                ecan_init@mask0 0005  
           movement@set_point 0003                    ??_movement 0009                       postdec1 000FE5  
                     postdec2 000FDD                    _retractPos 0042                       postinc0 000FEE  
                     postinc2 000FDE                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
 __end_of_ConfigureOscillator 77D6             readADC@digitalVal 0003                 __pidataCOMRAM 7774  
                 _ECANCONbits 000F77                movement@margin 0007      __size_of_ecan_rxb0_clear 0004  
         start_initialization 7814                   _CANSTATbits 000F6E              __CFG_OSC$IRCIO67 000000  
            __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 002E                   _BRGCON1bits 000F70  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72                     _ecan_init 787A  
   __size_of_setActuatorCntrl 0024                 ??_setAnalogIn 0001             __size_of_movement 0172  
                    ?_readADC 0001             ??_ecan_rxb0_clear 0001                     _extendPos 0040  
                    _LATAbits 000F89                      _LATCbits 000F8B                      _LATDbits 000F8C  
                  ?_ecan_init 0001                     _selectAN0 7778                     _selectAN1 7782  
                   _selectAN2 778C                     _selectAN3 7796                     _selectAN4 77A0  
                   _selectAN5 77AA                     _selectAN6 77B4                     _selectAN7 77BE  
                    _PIE3bits 000FA3           movement@current_pos 0001                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXB1SIDH 000F51                      _RXB1SIDL 000F52                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01                      _TXB0SIDH 000F41                      _TXB0SIDL 000F42  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19           __end_of_setAnalogIn 787A  
                  _ADCON0bits 000FC2                    _ADCON1bits 000FC1                    _ADCON2bits 000FC0  
           _ecan_receive_rxb0 7938                     copy_data0 7834                    _CANCONbits 000F6F  
               movement@move0 000B                 movement@move1 000D            ?_ecan_receive_rxb0 0001  
                  ?_selectAN0 0001                    ?_selectAN1 0001                    ?_selectAN2 0001  
                  ?_selectAN3 0001                    ?_selectAN4 0001                    ?_selectAN5 0001  
                  ?_selectAN6 0001                    ?_selectAN7 0001                      __Hrparam 0000  
         ??_ecan_receive_rxb0 0003                      __Lrparam 0000                    _CIOCONbits 000F73  
            __size_of_readADC 001A                  _RXF0SIDLbits 000F01     __end_of_ecan_receive_rxb0 7A1A  
                    __ptext10 7778                      __ptext11 77D6                      __ptext12 7A1A  
                    __ptext13 7770                      __ptext14 7938                      __ptext15 787A  
                    __ptext16 77C8                 __size_of_main 0474                   ??_ecan_init 0001  
__size_of_ConfigureOscillator 000E                  _TXB0SIDLbits 000F42              _setActuatorCntrl 77F0  
                    _movement 7A1A                   _setAnalogIn 7846                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50                   _OSCTUNEbits 000F9B                    _INTCONbits 000FF2  
                 ??_selectAN0 0001                   ??_selectAN1 0001                   ??_selectAN2 0001  
                 ??_selectAN3 0001                   ??_selectAN4 0001                   ??_selectAN5 0001  
                 ??_selectAN6 0001                   ??_selectAN7 0001                   _TXB0CONbits 000F40  
                  _OSCCONbits 000FD3         ecan_receive_rxb0@mess 0001                   _RXFCON0bits 000DD4  
             _ecan_rxb0_clear 7770    __size_of_ecan_receive_rxb0 00E2  
