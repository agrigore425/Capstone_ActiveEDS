

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Mar 14 03:43:31 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	idataCOMRAM
    38  001400                     __pidataCOMRAM:
    39                           	opt stack 0
    40                           
    41                           ;initializer for _extendPos
    42  001400  0320               	dw	800
    43                           
    44                           ;initializer for _retractPos
    45  001402  00C8               	dw	200
    46  0000                     _RXFCON0bits	set	3540
    47  0000                     _RXB1CONbits	set	3920
    48  0000                     _RXB1D0	set	3926
    49  0000                     _RXB1D1	set	3927
    50  0000                     _RXB1D2	set	3928
    51  0000                     _RXB1D3	set	3929
    52  0000                     _RXB1D4	set	3930
    53  0000                     _RXB1D5	set	3931
    54  0000                     _RXB1D6	set	3932
    55  0000                     _RXB1D7	set	3933
    56  0000                     _RXB1SIDH	set	3921
    57  0000                     _RXB1SIDL	set	3922
    58  0000                     _RXF0SIDH	set	3840
    59  0000                     _RXF0SIDL	set	3841
    60  0000                     _RXF0SIDLbits	set	3841
    61  0000                     _RXM0SIDH	set	3864
    62  0000                     _RXM0SIDL	set	3865
    63  0000                     _TXB0CONbits	set	3904
    64  0000                     _TXB0D0	set	3910
    65  0000                     _TXB0D1	set	3911
    66  0000                     _TXB0D2	set	3912
    67  0000                     _TXB0D3	set	3913
    68  0000                     _TXB0D4	set	3914
    69  0000                     _TXB0D5	set	3915
    70  0000                     _TXB0D6	set	3916
    71  0000                     _TXB0D7	set	3917
    72  0000                     _TXB0DLC	set	3909
    73  0000                     _TXB0SIDH	set	3905
    74  0000                     _TXB0SIDL	set	3906
    75  0000                     _TXB0SIDLbits	set	3906
    76  0000                     _RXB1DLC	set	3925
    77  0000                     _ADCON0bits	set	4034
    78  0000                     _ADCON1bits	set	4033
    79  0000                     _ADCON2bits	set	4032
    80  0000                     _ADRESH	set	4036
    81  0000                     _ADRESL	set	4035
    82  0000                     _BRGCON1bits	set	3952
    83  0000                     _BRGCON2bits	set	3953
    84  0000                     _BRGCON3bits	set	3954
    85  0000                     _CANCONbits	set	3951
    86  0000                     _CANSTATbits	set	3950
    87  0000                     _CIOCONbits	set	3955
    88  0000                     _ECANCONbits	set	3959
    89  0000                     _INTCONbits	set	4082
    90  0000                     _LATAbits	set	3977
    91  0000                     _LATBbits	set	3978
    92  0000                     _LATCbits	set	3979
    93  0000                     _LATDbits	set	3980
    94  0000                     _OSCCONbits	set	4051
    95  0000                     _OSCTUNEbits	set	3995
    96  0000                     _PIE3bits	set	4003
    97  0000                     _PIR1bits	set	3998
    98  0000                     _RCONbits	set	4048
    99  0000                     _RCREG	set	4014
   100  0000                     _RCSTAbits	set	4011
   101  0000                     _RXB0CONbits	set	3936
   102  0000                     _RXB0D0	set	3942
   103  0000                     _RXB0D1	set	3943
   104  0000                     _RXB0D2	set	3944
   105  0000                     _RXB0D3	set	3945
   106  0000                     _RXB0D4	set	3946
   107  0000                     _RXB0D5	set	3947
   108  0000                     _RXB0D6	set	3948
   109  0000                     _RXB0D7	set	3949
   110  0000                     _RXB0SIDH	set	3937
   111  0000                     _RXB0SIDL	set	3938
   112  0000                     _SPBRG	set	4015
   113  0000                     _TRISAbits	set	3986
   114  0000                     _TRISBbits	set	3987
   115  0000                     _TRISCbits	set	3988
   116  0000                     _TRISDbits	set	3989
   117  0000                     _TRISEbits	set	3990
   118  0000                     _TXREG	set	4013
   119  0000                     _TXSTAbits	set	4012
   120  0000                     _RXB0DLC	set	3941
   121  0000                     _RCIF	set	31989
   122  0000                     _TRMT	set	32097
   123                           
   124                           	psect	smallconst
   125  000D00                     __psmallconst:
   126                           	opt stack 0
   127  000D00  00                 	db	0
   128  000D01                     STR_2:
   129  000D01  43                 	db	67	;'C'
   130  000D02  6F                 	db	111	;'o'
   131  000D03  6D                 	db	109	;'m'
   132  000D04  6D                 	db	109	;'m'
   133  000D05  61                 	db	97	;'a'
   134  000D06  6E                 	db	110	;'n'
   135  000D07  64                 	db	100	;'d'
   136  000D08  20                 	db	32
   137  000D09  53                 	db	83	;'S'
   138  000D0A  65                 	db	101	;'e'
   139  000D0B  6E                 	db	110	;'n'
   140  000D0C  74                 	db	116	;'t'
   141  000D0D  20                 	db	32
   142  000D0E  28                 	db	40
   143  000D0F  41                 	db	65	;'A'
   144  000D10  72                 	db	114	;'r'
   145  000D11  72                 	db	114	;'r'
   146  000D12  61                 	db	97	;'a'
   147  000D13  79                 	db	121	;'y'
   148  000D14  20                 	db	32
   149  000D15  52                 	db	82	;'R'
   150  000D16  65                 	db	101	;'e'
   151  000D17  74                 	db	116	;'t'
   152  000D18  72                 	db	114	;'r'
   153  000D19  61                 	db	97	;'a'
   154  000D1A  63                 	db	99	;'c'
   155  000D1B  74                 	db	116	;'t'
   156  000D1C  65                 	db	101	;'e'
   157  000D1D  64                 	db	100	;'d'
   158  000D1E  29                 	db	41
   159  000D1F  0D                 	db	13
   160  000D20  0A                 	db	10
   161  000D21  00                 	db	0
   162  000D22                     STR_1:
   163  000D22  43                 	db	67	;'C'
   164  000D23  6F                 	db	111	;'o'
   165  000D24  6D                 	db	109	;'m'
   166  000D25  6D                 	db	109	;'m'
   167  000D26  61                 	db	97	;'a'
   168  000D27  6E                 	db	110	;'n'
   169  000D28  64                 	db	100	;'d'
   170  000D29  20                 	db	32
   171  000D2A  53                 	db	83	;'S'
   172  000D2B  65                 	db	101	;'e'
   173  000D2C  6E                 	db	110	;'n'
   174  000D2D  74                 	db	116	;'t'
   175  000D2E  20                 	db	32
   176  000D2F  28                 	db	40
   177  000D30  41                 	db	65	;'A'
   178  000D31  72                 	db	114	;'r'
   179  000D32  72                 	db	114	;'r'
   180  000D33  61                 	db	97	;'a'
   181  000D34  79                 	db	121	;'y'
   182  000D35  20                 	db	32
   183  000D36  45                 	db	69	;'E'
   184  000D37  78                 	db	120	;'x'
   185  000D38  74                 	db	116	;'t'
   186  000D39  65                 	db	101	;'e'
   187  000D3A  6E                 	db	110	;'n'
   188  000D3B  64                 	db	100	;'d'
   189  000D3C  65                 	db	101	;'e'
   190  000D3D  64                 	db	100	;'d'
   191  000D3E  29                 	db	41
   192  000D3F  0D                 	db	13
   193  000D40  0A                 	db	10
   194  000D41  00                 	db	0
   195  000D42                     STR_4:
   196  000D42  43                 	db	67	;'C'
   197  000D43  6F                 	db	111	;'o'
   198  000D44  6D                 	db	109	;'m'
   199  000D45  6D                 	db	109	;'m'
   200  000D46  61                 	db	97	;'a'
   201  000D47  6E                 	db	110	;'n'
   202  000D48  64                 	db	100	;'d'
   203  000D49  20                 	db	32
   204  000D4A  53                 	db	83	;'S'
   205  000D4B  65                 	db	101	;'e'
   206  000D4C  6E                 	db	110	;'n'
   207  000D4D  74                 	db	116	;'t'
   208  000D4E  20                 	db	32
   209  000D4F  28                 	db	40
   210  000D50  41                 	db	65	;'A'
   211  000D51  72                 	db	114	;'r'
   212  000D52  72                 	db	114	;'r'
   213  000D53  61                 	db	97	;'a'
   214  000D54  79                 	db	121	;'y'
   215  000D55  20                 	db	32
   216  000D56  42                 	db	66	;'B'
   217  000D57  61                 	db	97	;'a'
   218  000D58  63                 	db	99	;'c'
   219  000D59  6B                 	db	107	;'k'
   220  000D5A  77                 	db	119	;'w'
   221  000D5B  61                 	db	97	;'a'
   222  000D5C  72                 	db	114	;'r'
   223  000D5D  64                 	db	100	;'d'
   224  000D5E  29                 	db	41
   225  000D5F  0D                 	db	13
   226  000D60  0A                 	db	10
   227  000D61  00                 	db	0
   228  000D62                     STR_3:
   229  000D62  43                 	db	67	;'C'
   230  000D63  6F                 	db	111	;'o'
   231  000D64  6D                 	db	109	;'m'
   232  000D65  6D                 	db	109	;'m'
   233  000D66  61                 	db	97	;'a'
   234  000D67  6E                 	db	110	;'n'
   235  000D68  64                 	db	100	;'d'
   236  000D69  20                 	db	32
   237  000D6A  53                 	db	83	;'S'
   238  000D6B  65                 	db	101	;'e'
   239  000D6C  6E                 	db	110	;'n'
   240  000D6D  74                 	db	116	;'t'
   241  000D6E  20                 	db	32
   242  000D6F  28                 	db	40
   243  000D70  41                 	db	65	;'A'
   244  000D71  72                 	db	114	;'r'
   245  000D72  72                 	db	114	;'r'
   246  000D73  61                 	db	97	;'a'
   247  000D74  79                 	db	121	;'y'
   248  000D75  20                 	db	32
   249  000D76  46                 	db	70	;'F'
   250  000D77  6F                 	db	111	;'o'
   251  000D78  72                 	db	114	;'r'
   252  000D79  77                 	db	119	;'w'
   253  000D7A  61                 	db	97	;'a'
   254  000D7B  72                 	db	114	;'r'
   255  000D7C  64                 	db	100	;'d'
   256  000D7D  29                 	db	41
   257  000D7E  0D                 	db	13
   258  000D7F  0A                 	db	10
   259  000D80  00                 	db	0
   260                           
   261                           ; #config settings
   262  000D81  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	cinit
   265  00126C                     __pcinit:
   266                           	opt stack 0
   267  00126C                     start_initialization:
   268                           	opt stack 0
   269  00126C                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Clear objects allocated to COMRAM (20 bytes)
   273  00126C  EE00  F032         	lfsr	0,__pbssCOMRAM
   274  001270  0E14               	movlw	20
   275  001272                     clear_0:
   276  001272  6AEE               	clrf	postinc0,c
   277  001274  06E8               	decf	wreg,f,c
   278  001276  E1FD               	bnz	clear_0
   279                           
   280                           ; Initialize objects allocated to COMRAM (4 bytes)
   281                           ; load TBLPTR registers with __pidataCOMRAM
   282  001278  0E00               	movlw	low __pidataCOMRAM
   283  00127A  6EF6               	movwf	tblptrl,c
   284  00127C  0E14               	movlw	high __pidataCOMRAM
   285  00127E  6EF7               	movwf	tblptrh,c
   286  001280  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   287  001282  6EF8               	movwf	tblptru,c
   288  001284  EE00  F046         	lfsr	0,__pdataCOMRAM
   289  001288  EE10 F004          	lfsr	1,4
   290  00128C                     copy_data0:
   291  00128C  0009               	tblrd		*+
   292  00128E  CFF5 FFEE          	movff	tablat,postinc0
   293  001292  50E5               	movf	postdec1,w,c
   294  001294  50E1               	movf	fsr1l,w,c
   295  001296  E1FA               	bnz	copy_data0
   296  001298                     end_of_initialization:
   297                           	opt stack 0
   298  001298                     __end_of__initialization:
   299                           	opt stack 0
   300  001298  0E00               	movlw	low (__Lsmallconst shr (0+16))
   301  00129A  6EF8               	movwf	tblptru,c
   302  00129C  0E0D               	movlw	high __Lsmallconst
   303  00129E  6EF7               	movwf	tblptrh,c
   304  0012A0  0100               	movlb	0
   305  0012A2  EFC1  F006         	goto	_main	;jump to C main() function
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	bssCOMRAM
   316  000032                     __pbssCOMRAM:
   317                           	opt stack 0
   318  000032                     _margin0:
   319                           	opt stack 0
   320  000032                     	ds	2
   321  000034                     _margin1:
   322                           	opt stack 0
   323  000034                     	ds	2
   324  000036                     _margin2:
   325                           	opt stack 0
   326  000036                     	ds	2
   327  000038                     _margin3:
   328                           	opt stack 0
   329  000038                     	ds	2
   330  00003A                     _margin4:
   331                           	opt stack 0
   332  00003A                     	ds	2
   333  00003C                     _margin5:
   334                           	opt stack 0
   335  00003C                     	ds	2
   336  00003E                     _margin6:
   337                           	opt stack 0
   338  00003E                     	ds	2
   339  000040                     _margin7:
   340                           	opt stack 0
   341  000040                     	ds	2
   342  000042                     _BACK:
   343                           	opt stack 0
   344  000042                     	ds	1
   345  000043                     _EXTEND:
   346                           	opt stack 0
   347  000043                     	ds	1
   348  000044                     _FORW:
   349                           	opt stack 0
   350  000044                     	ds	1
   351  000045                     _RETRACT:
   352                           	opt stack 0
   353  000045                     	ds	1
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	dataCOMRAM
   364  000046                     __pdataCOMRAM:
   365                           	opt stack 0
   366  000046                     _extendPos:
   367                           	opt stack 0
   368  000046                     	ds	2
   369  000048                     _retractPos:
   370                           	opt stack 0
   371  000048                     	ds	2
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	cstackCOMRAM
   382  000001                     __pcstackCOMRAM:
   383                           	opt stack 0
   384  000001                     ??_ecan_init:
   385  000001                     ?_readADC:
   386                           	opt stack 0
   387  000001                     ?___aldiv:
   388                           	opt stack 0
   389  000001                     _uart_data_ready$2262:
   390                           	opt stack 0
   391  000001                     uart_write@data:
   392                           	opt stack 0
   393  000001                     ___aldiv@dividend:
   394                           	opt stack 0
   395                           
   396                           ; 4 bytes @ 0x0
   397  000001                     	ds	1
   398  000002                     uart_write_text@text:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x1
   402  000002                     	ds	1
   403  000003                     readADC@digitalVal:
   404                           	opt stack 0
   405  000003                     ecan_init@sid0:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x2
   409  000003                     	ds	1
   410  000004                     ??_uart_write_text:
   411                           
   412                           ; 1 bytes @ 0x3
   413  000004                     	ds	1
   414  000005                     ecan_init@mask0:
   415                           	opt stack 0
   416  000005                     ___aldiv@divisor:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x4
   420  000005                     	ds	1
   421  000006                     uart_write_text@i:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x5
   425  000006                     	ds	3
   426  000009                     ___aldiv@counter:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x8
   430  000009                     	ds	1
   431  00000A                     ___aldiv@sign:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x9
   435  00000A                     	ds	1
   436  00000B                     ___aldiv@quotient:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0xA
   440  00000B                     	ds	4
   441  00000F                     uart_init@baudrate:
   442                           	opt stack 0
   443                           
   444                           ; 4 bytes @ 0xE
   445  00000F                     	ds	4
   446  000013                     ??_uart_init:
   447                           
   448                           ; 1 bytes @ 0x12
   449  000013                     	ds	8
   450  00001B                     uart_init@x:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x1A
   454  00001B                     	ds	2
   455  00001D                     main@retractPos:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1C
   459  00001D                     	ds	2
   460  00001F                     main@extendPos:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x1E
   464  00001F                     	ds	2
   465  000021                     main@actuator0:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x20
   469  000021                     	ds	2
   470  000023                     main@actuator1:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x22
   474  000023                     	ds	2
   475  000025                     main@actuator2:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x24
   479  000025                     	ds	2
   480  000027                     main@actuator3:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x26
   484  000027                     	ds	2
   485  000029                     main@actuator4:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x28
   489  000029                     	ds	2
   490  00002B                     main@actuator5:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x2A
   494  00002B                     	ds	2
   495  00002D                     main@actuator6:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x2C
   499  00002D                     	ds	2
   500  00002F                     main@actuator7:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x2E
   504  00002F                     	ds	2
   505  000031                     main@message:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x30
   509  000031                     	ds	1
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1l	equ	0xFE1
   518                           
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 57 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  message         1   48[COMRAM] unsigned char 
   529 ;;  actuator7       2   46[COMRAM] unsigned int 
   530 ;;  actuator6       2   44[COMRAM] unsigned int 
   531 ;;  actuator5       2   42[COMRAM] unsigned int 
   532 ;;  actuator4       2   40[COMRAM] unsigned int 
   533 ;;  actuator3       2   38[COMRAM] unsigned int 
   534 ;;  actuator2       2   36[COMRAM] unsigned int 
   535 ;;  actuator1       2   34[COMRAM] unsigned int 
   536 ;;  actuator0       2   32[COMRAM] unsigned int 
   537 ;;  extendPos       2   30[COMRAM] unsigned int 
   538 ;;  retractPos      2   28[COMRAM] unsigned int 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   549 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   551 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   552 ;;Total ram usage:       21 bytes
   553 ;; Hardware stack levels required when called:    2
   554 ;; This function calls:
   555 ;;		_ConfigureOscillator
   556 ;;		_ecan_init
   557 ;;		_readADC
   558 ;;		_selectAN0
   559 ;;		_selectAN1
   560 ;;		_selectAN2
   561 ;;		_selectAN3
   562 ;;		_selectAN4
   563 ;;		_selectAN5
   564 ;;		_selectAN6
   565 ;;		_selectAN7
   566 ;;		_setActuatorCntrl
   567 ;;		_setAnalogIn
   568 ;;		_testALLOFF
   569 ;;		_testALLON
   570 ;;		_testEveryOther
   571 ;;		_uart_data_ready
   572 ;;		_uart_init
   573 ;;		_uart_read
   574 ;;		_uart_write_text
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text0
   581  000D82                     __ptext0:
   582                           	opt stack 0
   583  000D82                     _main:
   584                           	opt stack 29
   585                           
   586                           ;main.c: 60: ConfigureOscillator();
   587                           
   588                           ;incstack = 0
   589  000D82  ECC5  F009         	call	_ConfigureOscillator	;wreg free
   590                           
   591                           ;main.c: 61: ecan_init();
   592  000D86  EC66  F008         	call	_ecan_init	;wreg free
   593                           
   594                           ;main.c: 62: uart_init(9600);
   595  000D8A  0E80               	movlw	128
   596  000D8C  6E0F               	movwf	uart_init@baudrate,c
   597  000D8E  0E25               	movlw	37
   598  000D90  6E10               	movwf	uart_init@baudrate+1,c
   599  000D92  0E00               	movlw	0
   600  000D94  6E11               	movwf	uart_init@baudrate+2,c
   601  000D96  0E00               	movlw	0
   602  000D98  6E12               	movwf	uart_init@baudrate+3,c
   603  000D9A  ECC5  F008         	call	_uart_init	;wreg free
   604                           
   605                           ;main.c: 65: setAnalogIn();
   606  000D9E  EC53  F009         	call	_setAnalogIn	;wreg free
   607                           
   608                           ;main.c: 66: setActuatorCntrl();
   609  000DA2  EC6A  F009         	call	_setActuatorCntrl	;wreg free
   610                           
   611                           ;main.c: 67: unsigned int actuator0 = 0;
   612  000DA6  0E00               	movlw	0
   613  000DA8  6E22               	movwf	main@actuator0+1,c
   614  000DAA  0E00               	movlw	0
   615  000DAC  6E21               	movwf	main@actuator0,c
   616                           
   617                           ;main.c: 68: unsigned int actuator1 = 0;
   618  000DAE  0E00               	movlw	0
   619  000DB0  6E24               	movwf	main@actuator1+1,c
   620  000DB2  0E00               	movlw	0
   621  000DB4  6E23               	movwf	main@actuator1,c
   622                           
   623                           ;main.c: 69: unsigned int actuator2 = 0;
   624  000DB6  0E00               	movlw	0
   625  000DB8  6E26               	movwf	main@actuator2+1,c
   626  000DBA  0E00               	movlw	0
   627  000DBC  6E25               	movwf	main@actuator2,c
   628                           
   629                           ;main.c: 70: unsigned int actuator3 = 0;
   630  000DBE  0E00               	movlw	0
   631  000DC0  6E28               	movwf	main@actuator3+1,c
   632  000DC2  0E00               	movlw	0
   633  000DC4  6E27               	movwf	main@actuator3,c
   634                           
   635                           ;main.c: 71: unsigned int actuator4 = 0;
   636  000DC6  0E00               	movlw	0
   637  000DC8  6E2A               	movwf	main@actuator4+1,c
   638  000DCA  0E00               	movlw	0
   639  000DCC  6E29               	movwf	main@actuator4,c
   640                           
   641                           ;main.c: 72: unsigned int actuator5 = 0;
   642  000DCE  0E00               	movlw	0
   643  000DD0  6E2C               	movwf	main@actuator5+1,c
   644  000DD2  0E00               	movlw	0
   645  000DD4  6E2B               	movwf	main@actuator5,c
   646                           
   647                           ;main.c: 73: unsigned int actuator6 = 0;
   648  000DD6  0E00               	movlw	0
   649  000DD8  6E2E               	movwf	main@actuator6+1,c
   650  000DDA  0E00               	movlw	0
   651  000DDC  6E2D               	movwf	main@actuator6,c
   652                           
   653                           ;main.c: 74: unsigned int actuator7 = 0;
   654  000DDE  0E00               	movlw	0
   655  000DE0  6E30               	movwf	main@actuator7+1,c
   656  000DE2  0E00               	movlw	0
   657  000DE4  6E2F               	movwf	main@actuator7,c
   658                           
   659                           ;main.c: 76: LATAbits.LATA7 = 1;
   660  000DE6  8E89               	bsf	3977,7,c	;volatile
   661                           
   662                           ;main.c: 78: unsigned int retractPos = 200;
   663  000DE8  0E00               	movlw	0
   664  000DEA  6E1E               	movwf	main@retractPos+1,c
   665  000DEC  0EC8               	movlw	200
   666  000DEE  6E1D               	movwf	main@retractPos,c
   667                           
   668                           ;main.c: 79: unsigned int extendPos = 500;
   669  000DF0  0E01               	movlw	1
   670  000DF2  6E20               	movwf	main@extendPos+1,c
   671  000DF4  0EF4               	movlw	244
   672  000DF6  6E1F               	movwf	main@extendPos,c
   673  000DF8                     l1565:
   674                           
   675                           ;main.c: 84: {
   676                           ;main.c: 146: if(uart_data_ready())
   677  000DF8  ECBC  F009         	call	_uart_data_ready	;wreg free
   678  000DFC  0900               	iorlw	0
   679  000DFE  B4D8               	btfsc	status,2,c
   680  000E00  D06F               	goto	l1611
   681                           
   682                           ;main.c: 147: {
   683                           ;main.c: 148: char message = uart_read();
   684  000E02  ECD2  F009         	call	_uart_read	;wreg free
   685  000E06  6E31               	movwf	main@message,c
   686                           
   687                           ;main.c: 150: margin0 = 0;
   688  000E08  0E00               	movlw	0
   689  000E0A  6E33               	movwf	_margin0+1,c
   690  000E0C  0E00               	movlw	0
   691  000E0E  6E32               	movwf	_margin0,c
   692                           
   693                           ;main.c: 151: margin1 = 0;
   694  000E10  0E00               	movlw	0
   695  000E12  6E35               	movwf	_margin1+1,c
   696  000E14  0E00               	movlw	0
   697  000E16  6E34               	movwf	_margin1,c
   698                           
   699                           ;main.c: 152: margin2 = 0;
   700  000E18  0E00               	movlw	0
   701  000E1A  6E37               	movwf	_margin2+1,c
   702  000E1C  0E00               	movlw	0
   703  000E1E  6E36               	movwf	_margin2,c
   704                           
   705                           ;main.c: 153: margin3 = 0;
   706  000E20  0E00               	movlw	0
   707  000E22  6E39               	movwf	_margin3+1,c
   708  000E24  0E00               	movlw	0
   709  000E26  6E38               	movwf	_margin3,c
   710                           
   711                           ;main.c: 154: margin4 = 0;
   712  000E28  0E00               	movlw	0
   713  000E2A  6E3B               	movwf	_margin4+1,c
   714  000E2C  0E00               	movlw	0
   715  000E2E  6E3A               	movwf	_margin4,c
   716                           
   717                           ;main.c: 155: margin5 = 0;
   718  000E30  0E00               	movlw	0
   719  000E32  6E3D               	movwf	_margin5+1,c
   720  000E34  0E00               	movlw	0
   721  000E36  6E3C               	movwf	_margin5,c
   722                           
   723                           ;main.c: 156: margin6 = 0;
   724  000E38  0E00               	movlw	0
   725  000E3A  6E3F               	movwf	_margin6+1,c
   726  000E3C  0E00               	movlw	0
   727  000E3E  6E3E               	movwf	_margin6,c
   728                           
   729                           ;main.c: 157: margin7 = 0;
   730  000E40  0E00               	movlw	0
   731  000E42  6E41               	movwf	_margin7+1,c
   732  000E44  0E00               	movlw	0
   733  000E46  6E40               	movwf	_margin7,c
   734                           
   735                           ;main.c: 159: LATAbits.LATA7 ^= 1;
   736  000E48  7E89               	btg	3977,7,c	;volatile
   737                           
   738                           ;main.c: 161: if (message == 'e')
   739  000E4A  0E65               	movlw	101
   740  000E4C  1831               	xorwf	main@message,w,c
   741  000E4E  A4D8               	btfss	status,2,c
   742  000E50  D00F               	goto	l1593
   743                           
   744                           ;main.c: 162: {
   745                           ;main.c: 163: FORW = 0;
   746  000E52  0E00               	movlw	0
   747  000E54  6E44               	movwf	_FORW,c
   748                           
   749                           ;main.c: 164: BACK = 0;
   750  000E56  0E00               	movlw	0
   751  000E58  6E42               	movwf	_BACK,c
   752                           
   753                           ;main.c: 165: EXTEND = 1;
   754  000E5A  0E01               	movlw	1
   755  000E5C  6E43               	movwf	_EXTEND,c
   756                           
   757                           ;main.c: 166: RETRACT = 0;
   758  000E5E  0E00               	movlw	0
   759  000E60  6E45               	movwf	_RETRACT,c
   760                           
   761                           ;main.c: 167: uart_write_text("Command Sent (Array Extended)\r\n");
   762  000E62  0E22               	movlw	low STR_1
   763  000E64  6E02               	movwf	uart_write_text@text,c
   764  000E66  0E0D               	movlw	high STR_1
   765  000E68  6E03               	movwf	uart_write_text@text+1,c
   766  000E6A  EC11  F009         	call	_uart_write_text	;wreg free
   767                           
   768                           ;main.c: 168: }
   769  000E6E  D038               	goto	l1611
   770  000E70                     l1593:
   771                           
   772                           ;main.c: 169: else if (message == 'r')
   773  000E70  0E72               	movlw	114
   774  000E72  1831               	xorwf	main@message,w,c
   775  000E74  A4D8               	btfss	status,2,c
   776  000E76  D00F               	goto	l1599
   777                           
   778                           ;main.c: 170: {
   779                           ;main.c: 171: FORW = 0;
   780  000E78  0E00               	movlw	0
   781  000E7A  6E44               	movwf	_FORW,c
   782                           
   783                           ;main.c: 172: BACK = 0;
   784  000E7C  0E00               	movlw	0
   785  000E7E  6E42               	movwf	_BACK,c
   786                           
   787                           ;main.c: 173: EXTEND = 0;
   788  000E80  0E00               	movlw	0
   789  000E82  6E43               	movwf	_EXTEND,c
   790                           
   791                           ;main.c: 174: RETRACT = 1;
   792  000E84  0E01               	movlw	1
   793  000E86  6E45               	movwf	_RETRACT,c
   794                           
   795                           ;main.c: 175: uart_write_text("Command Sent (Array Retracted)\r\n");
   796  000E88  0E01               	movlw	low STR_2
   797  000E8A  6E02               	movwf	uart_write_text@text,c
   798  000E8C  0E0D               	movlw	high STR_2
   799  000E8E  6E03               	movwf	uart_write_text@text+1,c
   800  000E90  EC11  F009         	call	_uart_write_text	;wreg free
   801                           
   802                           ;main.c: 176: }
   803  000E94  D025               	goto	l1611
   804  000E96                     l1599:
   805                           
   806                           ;main.c: 177: else if (message == 'f')
   807  000E96  0E66               	movlw	102
   808  000E98  1831               	xorwf	main@message,w,c
   809  000E9A  A4D8               	btfss	status,2,c
   810  000E9C  D00F               	goto	l1605
   811                           
   812                           ;main.c: 178: {
   813                           ;main.c: 179: FORW = 1;
   814  000E9E  0E01               	movlw	1
   815  000EA0  6E44               	movwf	_FORW,c
   816                           
   817                           ;main.c: 180: BACK = 0;
   818  000EA2  0E00               	movlw	0
   819  000EA4  6E42               	movwf	_BACK,c
   820                           
   821                           ;main.c: 181: EXTEND = 0;
   822  000EA6  0E00               	movlw	0
   823  000EA8  6E43               	movwf	_EXTEND,c
   824                           
   825                           ;main.c: 182: RETRACT = 0;
   826  000EAA  0E00               	movlw	0
   827  000EAC  6E45               	movwf	_RETRACT,c
   828                           
   829                           ;main.c: 183: uart_write_text("Command Sent (Array Forward)\r\n");
   830  000EAE  0E62               	movlw	low STR_3
   831  000EB0  6E02               	movwf	uart_write_text@text,c
   832  000EB2  0E0D               	movlw	high STR_3
   833  000EB4  6E03               	movwf	uart_write_text@text+1,c
   834  000EB6  EC11  F009         	call	_uart_write_text	;wreg free
   835                           
   836                           ;main.c: 184: }
   837  000EBA  D012               	goto	l1611
   838  000EBC                     l1605:
   839                           
   840                           ;main.c: 185: else if (message == 'b')
   841  000EBC  0E62               	movlw	98
   842  000EBE  1831               	xorwf	main@message,w,c
   843  000EC0  A4D8               	btfss	status,2,c
   844  000EC2  D00E               	goto	l1611
   845                           
   846                           ;main.c: 186: {
   847                           ;main.c: 187: FORW = 0;
   848  000EC4  0E00               	movlw	0
   849  000EC6  6E44               	movwf	_FORW,c
   850                           
   851                           ;main.c: 188: BACK = 1;
   852  000EC8  0E01               	movlw	1
   853  000ECA  6E42               	movwf	_BACK,c
   854                           
   855                           ;main.c: 189: EXTEND = 0;
   856  000ECC  0E00               	movlw	0
   857  000ECE  6E43               	movwf	_EXTEND,c
   858                           
   859                           ;main.c: 190: RETRACT = 0;
   860  000ED0  0E00               	movlw	0
   861  000ED2  6E45               	movwf	_RETRACT,c
   862                           
   863                           ;main.c: 191: uart_write_text("Command Sent (Array Backward)\r\n");
   864  000ED4  0E42               	movlw	low STR_4
   865  000ED6  6E02               	movwf	uart_write_text@text,c
   866  000ED8  0E0D               	movlw	high STR_4
   867  000EDA  6E03               	movwf	uart_write_text@text+1,c
   868  000EDC  EC11  F009         	call	_uart_write_text	;wreg free
   869  000EE0                     l1611:
   870                           
   871                           ;main.c: 192: }
   872                           ;main.c: 193: }
   873                           ;main.c: 196: if(margin0 == 0){
   874  000EE0  5032               	movf	_margin0,w,c
   875  000EE2  1033               	iorwf	_margin0+1,w,c
   876  000EE4  A4D8               	btfss	status,2,c
   877  000EE6  D008               	goto	l1617
   878                           
   879                           ;main.c: 198: selectAN0();
   880  000EE8  ECFB  F009         	call	_selectAN0	;wreg free
   881                           
   882                           ;main.c: 199: actuator0 = readADC();
   883  000EEC  ECAF  F009         	call	_readADC	;wreg free
   884  000EF0  C001  F021         	movff	?_readADC,main@actuator0
   885  000EF4  C002  F022         	movff	?_readADC+1,main@actuator0+1
   886  000EF8                     l1617:
   887                           
   888                           ;main.c: 200: }
   889                           ;main.c: 201: if(margin1 == 0){
   890  000EF8  5034               	movf	_margin1,w,c
   891  000EFA  1035               	iorwf	_margin1+1,w,c
   892  000EFC  A4D8               	btfss	status,2,c
   893  000EFE  D008               	goto	l1621
   894                           
   895                           ;main.c: 204: selectAN1();
   896  000F00  ECF6  F009         	call	_selectAN1	;wreg free
   897                           
   898                           ;main.c: 205: actuator1 = readADC();
   899  000F04  ECAF  F009         	call	_readADC	;wreg free
   900  000F08  C001  F023         	movff	?_readADC,main@actuator1
   901  000F0C  C002  F024         	movff	?_readADC+1,main@actuator1+1
   902  000F10                     l1621:
   903                           
   904                           ;main.c: 206: }
   905                           ;main.c: 207: if(margin2 == 0){
   906  000F10  5036               	movf	_margin2,w,c
   907  000F12  1037               	iorwf	_margin2+1,w,c
   908  000F14  A4D8               	btfss	status,2,c
   909  000F16  D008               	goto	l1625
   910                           
   911                           ;main.c: 210: selectAN2();
   912  000F18  ECF1  F009         	call	_selectAN2	;wreg free
   913                           
   914                           ;main.c: 211: actuator2 = readADC();
   915  000F1C  ECAF  F009         	call	_readADC	;wreg free
   916  000F20  C001  F025         	movff	?_readADC,main@actuator2
   917  000F24  C002  F026         	movff	?_readADC+1,main@actuator2+1
   918  000F28                     l1625:
   919                           
   920                           ;main.c: 212: }
   921                           ;main.c: 213: if(margin3 == 0){
   922  000F28  5038               	movf	_margin3,w,c
   923  000F2A  1039               	iorwf	_margin3+1,w,c
   924  000F2C  A4D8               	btfss	status,2,c
   925  000F2E  D008               	goto	l1629
   926                           
   927                           ;main.c: 216: selectAN3();
   928  000F30  ECEC  F009         	call	_selectAN3	;wreg free
   929                           
   930                           ;main.c: 217: actuator3 = readADC();
   931  000F34  ECAF  F009         	call	_readADC	;wreg free
   932  000F38  C001  F027         	movff	?_readADC,main@actuator3
   933  000F3C  C002  F028         	movff	?_readADC+1,main@actuator3+1
   934  000F40                     l1629:
   935                           
   936                           ;main.c: 218: }
   937                           ;main.c: 220: if(margin4 == 0){
   938  000F40  503A               	movf	_margin4,w,c
   939  000F42  103B               	iorwf	_margin4+1,w,c
   940  000F44  A4D8               	btfss	status,2,c
   941  000F46  D008               	goto	l1633
   942                           
   943                           ;main.c: 223: selectAN4();
   944  000F48  ECE7  F009         	call	_selectAN4	;wreg free
   945                           
   946                           ;main.c: 224: actuator4 = readADC();
   947  000F4C  ECAF  F009         	call	_readADC	;wreg free
   948  000F50  C001  F029         	movff	?_readADC,main@actuator4
   949  000F54  C002  F02A         	movff	?_readADC+1,main@actuator4+1
   950  000F58                     l1633:
   951                           
   952                           ;main.c: 225: }
   953                           ;main.c: 226: if(margin5 == 0){
   954  000F58  503C               	movf	_margin5,w,c
   955  000F5A  103D               	iorwf	_margin5+1,w,c
   956  000F5C  A4D8               	btfss	status,2,c
   957  000F5E  D008               	goto	l1637
   958                           
   959                           ;main.c: 229: selectAN5();
   960  000F60  ECE2  F009         	call	_selectAN5	;wreg free
   961                           
   962                           ;main.c: 230: actuator5 = readADC();
   963  000F64  ECAF  F009         	call	_readADC	;wreg free
   964  000F68  C001  F02B         	movff	?_readADC,main@actuator5
   965  000F6C  C002  F02C         	movff	?_readADC+1,main@actuator5+1
   966  000F70                     l1637:
   967                           
   968                           ;main.c: 231: }
   969                           ;main.c: 233: if(margin6 == 0){
   970  000F70  503E               	movf	_margin6,w,c
   971  000F72  103F               	iorwf	_margin6+1,w,c
   972  000F74  A4D8               	btfss	status,2,c
   973  000F76  D008               	goto	l1641
   974                           
   975                           ;main.c: 236: selectAN6();
   976  000F78  ECDD  F009         	call	_selectAN6	;wreg free
   977                           
   978                           ;main.c: 237: actuator6 = readADC();
   979  000F7C  ECAF  F009         	call	_readADC	;wreg free
   980  000F80  C001  F02D         	movff	?_readADC,main@actuator6
   981  000F84  C002  F02E         	movff	?_readADC+1,main@actuator6+1
   982  000F88                     l1641:
   983                           
   984                           ;main.c: 238: }
   985                           ;main.c: 239: if(margin7 == 0){
   986  000F88  5040               	movf	_margin7,w,c
   987  000F8A  1041               	iorwf	_margin7+1,w,c
   988  000F8C  A4D8               	btfss	status,2,c
   989  000F8E  D008               	goto	l1645
   990                           
   991                           ;main.c: 242: selectAN7();
   992  000F90  ECD8  F009         	call	_selectAN7	;wreg free
   993                           
   994                           ;main.c: 243: actuator7 = readADC();
   995  000F94  ECAF  F009         	call	_readADC	;wreg free
   996  000F98  C001  F02F         	movff	?_readADC,main@actuator7
   997  000F9C  C002  F030         	movff	?_readADC+1,main@actuator7+1
   998  000FA0                     l1645:
   999                           
  1000                           ;main.c: 244: }
  1001                           ;main.c: 247: if(FORW == 1 && BACK == 0 && EXTEND == 0 && RETRACT == 0)
  1002  000FA0  0444               	decf	_FORW,w,c
  1003  000FA2  A4D8               	btfss	status,2,c
  1004  000FA4  D00C               	goto	l1655
  1005  000FA6  5042               	movf	_BACK,w,c
  1006  000FA8  A4D8               	btfss	status,2,c
  1007  000FAA  D009               	goto	l1655
  1008  000FAC  5043               	movf	_EXTEND,w,c
  1009  000FAE  A4D8               	btfss	status,2,c
  1010  000FB0  D006               	goto	l1655
  1011  000FB2  5045               	movf	_RETRACT,w,c
  1012  000FB4  A4D8               	btfss	status,2,c
  1013  000FB6  D003               	goto	l1655
  1014                           
  1015                           ;main.c: 248: {
  1016                           ;main.c: 252: testALLON();
  1017  000FB8  EC8D  F009         	call	_testALLON	;wreg free
  1018                           
  1019                           ;main.c: 271: } else if(BACK == 1 && FORW == 0 && EXTEND == 0 && RETRACT == 0) {
  1020  000FBC  D71D               	goto	l1565
  1021  000FBE                     l1655:
  1022  000FBE  0442               	decf	_BACK,w,c
  1023  000FC0  A4D8               	btfss	status,2,c
  1024  000FC2  D00C               	goto	l1665
  1025  000FC4  5044               	movf	_FORW,w,c
  1026  000FC6  A4D8               	btfss	status,2,c
  1027  000FC8  D009               	goto	l1665
  1028  000FCA  5043               	movf	_EXTEND,w,c
  1029  000FCC  A4D8               	btfss	status,2,c
  1030  000FCE  D006               	goto	l1665
  1031  000FD0  5045               	movf	_RETRACT,w,c
  1032  000FD2  A4D8               	btfss	status,2,c
  1033  000FD4  D003               	goto	l1665
  1034                           
  1035                           ;main.c: 274: testALLOFF();
  1036  000FD6  EC9E  F009         	call	_testALLOFF	;wreg free
  1037                           
  1038                           ;main.c: 289: } else if (FORW == 0 && BACK == 0 && EXTEND == 1 && RETRACT == 0){
  1039  000FDA  D70E               	goto	l1565
  1040  000FDC                     l1665:
  1041  000FDC  5044               	movf	_FORW,w,c
  1042  000FDE  A4D8               	btfss	status,2,c
  1043  000FE0  D00C               	goto	l1675
  1044  000FE2  5042               	movf	_BACK,w,c
  1045  000FE4  A4D8               	btfss	status,2,c
  1046  000FE6  D009               	goto	l1675
  1047  000FE8  0443               	decf	_EXTEND,w,c
  1048  000FEA  A4D8               	btfss	status,2,c
  1049  000FEC  D006               	goto	l1675
  1050  000FEE  5045               	movf	_RETRACT,w,c
  1051  000FF0  A4D8               	btfss	status,2,c
  1052  000FF2  D003               	goto	l1675
  1053                           
  1054                           ;main.c: 292: testEveryOther();
  1055  000FF4  EC7C  F009         	call	_testEveryOther	;wreg free
  1056                           
  1057                           ;main.c: 304: } else {
  1058  000FF8  D6FF               	goto	l1565
  1059  000FFA                     l1675:
  1060                           
  1061                           ;main.c: 305: testEveryOther();
  1062  000FFA  EC7C  F009         	call	_testEveryOther	;wreg free
  1063  000FFE  D6FC               	goto	l1565
  1064  001000                     __end_of_main:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postdec1	equ	0xFE5
  1073                           fsr1l	equ	0xFE1
  1074                           status	equ	0xFD8
  1075                           
  1076 ;; *************** function _uart_write_text *****************
  1077 ;; Defined at:
  1078 ;;		line 49 in file "uart.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  text            2    1[COMRAM] PTR unsigned char 
  1081 ;;		 -> STR_4(32), STR_3(31), STR_2(33), STR_1(32), 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  i               2    5[COMRAM] int 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1097 ;;Total ram usage:        6 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    1
  1100 ;; This function calls:
  1101 ;;		_uart_write
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text1
  1108  001222                     __ptext1:
  1109                           	opt stack 0
  1110  001222                     _uart_write_text:
  1111                           	opt stack 29
  1112                           
  1113                           ;uart.c: 51: int i;
  1114                           ;uart.c: 52: for(i = 0; text[i] != '\0'; i++)
  1115                           
  1116                           ;incstack = 0
  1117  001222  0E00               	movlw	0
  1118  001224  6E07               	movwf	uart_write_text@i+1,c
  1119  001226  0E00               	movlw	0
  1120  001228  6E06               	movwf	uart_write_text@i,c
  1121  00122A  D010               	goto	l1527
  1122  00122C                     l1523:
  1123                           
  1124                           ;uart.c: 53: uart_write(text[i]);
  1125  00122C  5006               	movf	uart_write_text@i,w,c
  1126  00122E  2402               	addwf	uart_write_text@text,w,c
  1127  001230  6E04               	movwf	??_uart_write_text& (0+255),c
  1128  001232  5007               	movf	uart_write_text@i+1,w,c
  1129  001234  2003               	addwfc	uart_write_text@text+1,w,c
  1130  001236  6E05               	movwf	(??_uart_write_text+1)& (0+255),c
  1131  001238  C004  FFF6         	movff	??_uart_write_text,tblptrl
  1132  00123C  C005  FFF7         	movff	??_uart_write_text+1,tblptrh
  1133  001240                     	if	0	;tblptru may be non-zero
  1134  001240                     	endif
  1135  001240                     	if	0	;tblptru may be non-zero
  1136  001240                     	endif
  1137  001240  0008               	tblrd		*
  1138  001242  50F5               	movf	tablat,w,c
  1139  001244  ECCC  F009         	call	_uart_write
  1140  001248  4A06               	infsnz	uart_write_text@i,f,c
  1141  00124A  2A07               	incf	uart_write_text@i+1,f,c
  1142  00124C                     l1527:
  1143  00124C  5006               	movf	uart_write_text@i,w,c
  1144  00124E  2402               	addwf	uart_write_text@text,w,c
  1145  001250  6E04               	movwf	??_uart_write_text& (0+255),c
  1146  001252  5007               	movf	uart_write_text@i+1,w,c
  1147  001254  2003               	addwfc	uart_write_text@text+1,w,c
  1148  001256  6E05               	movwf	(??_uart_write_text+1)& (0+255),c
  1149  001258  C004  FFF6         	movff	??_uart_write_text,tblptrl
  1150  00125C  C005  FFF7         	movff	??_uart_write_text+1,tblptrh
  1151  001260                     	if	0	;tblptru may be non-zero
  1152  001260                     	endif
  1153  001260                     	if	0	;tblptru may be non-zero
  1154  001260                     	endif
  1155  001260  0008               	tblrd		*
  1156  001262  50F5               	movf	tablat,w,c
  1157  001264  0900               	iorlw	0
  1158  001266  B4D8               	btfsc	status,2,c
  1159  001268  0012               	return	
  1160  00126A  D7E0               	goto	l1523
  1161  00126C                     __end_of_uart_write_text:
  1162                           	opt stack 0
  1163                           tblptru	equ	0xFF8
  1164                           tblptrh	equ	0xFF7
  1165                           tblptrl	equ	0xFF6
  1166                           tablat	equ	0xFF5
  1167                           postinc0	equ	0xFEE
  1168                           wreg	equ	0xFE8
  1169                           postdec1	equ	0xFE5
  1170                           fsr1l	equ	0xFE1
  1171                           status	equ	0xFD8
  1172                           
  1173 ;; *************** function _uart_write *****************
  1174 ;; Defined at:
  1175 ;;		line 42 in file "uart.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  data            1    wreg     unsigned char 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  data            1    0[COMRAM] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;Total ram usage:        1 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_uart_write_text
  1199 ;;		_uart_write_array
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text2
  1204  001398                     __ptext2:
  1205                           	opt stack 0
  1206  001398                     _uart_write:
  1207                           	opt stack 29
  1208                           
  1209                           ;incstack = 0
  1210                           ;uart_write@data stored from wreg
  1211  001398  6E01               	movwf	uart_write@data,c
  1212  00139A                     l394:
  1213  00139A  A2AC               	btfss	4012,1,c	;volatile
  1214  00139C  D7FE               	goto	l394
  1215                           
  1216                           ;uart.c: 45: TXREG = data;
  1217  00139E  C001  FFAD         	movff	uart_write@data,4013	;volatile
  1218  0013A2  0012               	return		;funcret
  1219  0013A4                     __end_of_uart_write:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1l	equ	0xFE1
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _uart_read *****************
  1232 ;; Defined at:
  1233 ;;		line 35 in file "uart.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      unsigned char 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;;		_uart_read_text
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text3
  1262  0013A4                     __ptext3:
  1263                           	opt stack 0
  1264  0013A4                     _uart_read:
  1265                           	opt stack 30
  1266  0013A4                     l386:
  1267  0013A4  AA9E               	btfss	3998,5,c	;volatile
  1268  0013A6  BA9E               	btfsc	3998,5,c	;volatile
  1269  0013A8  D001               	goto	l1143
  1270  0013AA  D7FC               	goto	l386
  1271  0013AC                     l1143:
  1272                           
  1273                           ;uart.c: 38: return RCREG;
  1274  0013AC  50AE               	movf	4014,w,c	;volatile
  1275  0013AE  0012               	return	
  1276  0013B0                     __end_of_uart_read:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1l	equ	0xFE1
  1286                           status	equ	0xFD8
  1287                           
  1288 ;; *************** function _uart_init *****************
  1289 ;; Defined at:
  1290 ;;		line 14 in file "uart.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  baudrate        4   14[COMRAM] const long 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  x               2   26[COMRAM] unsigned int 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1306 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1308 ;;Total ram usage:       14 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    1
  1311 ;; This function calls:
  1312 ;;		___aldiv
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text4
  1319  00118A                     __ptext4:
  1320                           	opt stack 0
  1321  00118A                     _uart_init:
  1322                           	opt stack 29
  1323                           
  1324                           ;uart.c: 16: unsigned int x;
  1325                           ;uart.c: 17: x = (32000000 - baudrate * 64)/(baudrate * 64);
  1326                           
  1327                           ;incstack = 0
  1328  00118A  C00F  F013         	movff	uart_init@baudrate,??_uart_init
  1329  00118E  C010  F014         	movff	uart_init@baudrate+1,??_uart_init+1
  1330  001192  C011  F015         	movff	uart_init@baudrate+2,??_uart_init+2
  1331  001196  C012  F016         	movff	uart_init@baudrate+3,??_uart_init+3
  1332  00119A  0E06               	movlw	6
  1333  00119C                     u855:
  1334  00119C  90D8               	bcf	status,0,c
  1335  00119E  3613               	rlcf	??_uart_init,f,c
  1336  0011A0  3614               	rlcf	??_uart_init+1,f,c
  1337  0011A2  3615               	rlcf	??_uart_init+2,f,c
  1338  0011A4  3616               	rlcf	??_uart_init+3,f,c
  1339  0011A6  2EE8               	decfsz	wreg,f,c
  1340  0011A8  D7F9               	goto	u855
  1341  0011AA  1E13               	comf	??_uart_init,f,c
  1342  0011AC  1E14               	comf	??_uart_init+1,f,c
  1343  0011AE  1E15               	comf	??_uart_init+2,f,c
  1344  0011B0  1E16               	comf	??_uart_init+3,f,c
  1345  0011B2  2A13               	incf	??_uart_init,f,c
  1346  0011B4  0E00               	movlw	0
  1347  0011B6  2214               	addwfc	??_uart_init+1,f,c
  1348  0011B8  2215               	addwfc	??_uart_init+2,f,c
  1349  0011BA  2216               	addwfc	??_uart_init+3,f,c
  1350  0011BC  0E00               	movlw	0
  1351  0011BE  2413               	addwf	??_uart_init,w,c
  1352  0011C0  6E01               	movwf	___aldiv@dividend,c
  1353  0011C2  0E48               	movlw	72
  1354  0011C4  2014               	addwfc	??_uart_init+1,w,c
  1355  0011C6  6E02               	movwf	___aldiv@dividend+1,c
  1356  0011C8  0EE8               	movlw	232
  1357  0011CA  2015               	addwfc	??_uart_init+2,w,c
  1358  0011CC  6E03               	movwf	___aldiv@dividend+2,c
  1359  0011CE  0E01               	movlw	1
  1360  0011D0  2016               	addwfc	??_uart_init+3,w,c
  1361  0011D2  6E04               	movwf	___aldiv@dividend+3,c
  1362  0011D4  C00F  F017         	movff	uart_init@baudrate,??_uart_init+4
  1363  0011D8  C010  F018         	movff	uart_init@baudrate+1,??_uart_init+5
  1364  0011DC  C011  F019         	movff	uart_init@baudrate+2,??_uart_init+6
  1365  0011E0  C012  F01A         	movff	uart_init@baudrate+3,??_uart_init+7
  1366  0011E4  0E06               	movlw	6
  1367  0011E6                     u865:
  1368  0011E6  90D8               	bcf	status,0,c
  1369  0011E8  3617               	rlcf	??_uart_init+4,f,c
  1370  0011EA  3618               	rlcf	??_uart_init+5,f,c
  1371  0011EC  3619               	rlcf	??_uart_init+6,f,c
  1372  0011EE  361A               	rlcf	??_uart_init+7,f,c
  1373  0011F0  2EE8               	decfsz	wreg,f,c
  1374  0011F2  D7F9               	goto	u865
  1375  0011F4  C017  F005         	movff	??_uart_init+4,___aldiv@divisor
  1376  0011F8  C018  F006         	movff	??_uart_init+5,___aldiv@divisor+1
  1377  0011FC  C019  F007         	movff	??_uart_init+6,___aldiv@divisor+2
  1378  001200  C01A  F008         	movff	??_uart_init+7,___aldiv@divisor+3
  1379  001204  EC00  F008         	call	___aldiv	;wreg free
  1380  001208  C001  F01B         	movff	?___aldiv,uart_init@x
  1381  00120C  C002  F01C         	movff	?___aldiv+1,uart_init@x+1
  1382                           
  1383                           ;uart.c: 19: SPBRG = x;
  1384  001210  C01B  FFAF         	movff	uart_init@x,4015	;volatile
  1385                           
  1386                           ;uart.c: 20: TXSTAbits.SYNC = 0;
  1387  001214  98AC               	bcf	4012,4,c	;volatile
  1388                           
  1389                           ;uart.c: 21: RCSTAbits.SPEN = 1;
  1390  001216  8EAB               	bsf	4011,7,c	;volatile
  1391                           
  1392                           ;uart.c: 22: TRISCbits.RC7 = 1;
  1393  001218  8E94               	bsf	3988,7,c	;volatile
  1394                           
  1395                           ;uart.c: 23: TRISCbits.RC6 = 0;
  1396  00121A  9C94               	bcf	3988,6,c	;volatile
  1397                           
  1398                           ;uart.c: 24: RCSTAbits.CREN = 1;
  1399  00121C  88AB               	bsf	4011,4,c	;volatile
  1400                           
  1401                           ;uart.c: 25: TXSTAbits.TXEN = 1;
  1402  00121E  8AAC               	bsf	4012,5,c	;volatile
  1403  001220  0012               	return		;funcret
  1404  001222                     __end_of_uart_init:
  1405                           	opt stack 0
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           postinc0	equ	0xFEE
  1411                           wreg	equ	0xFE8
  1412                           postdec1	equ	0xFE5
  1413                           fsr1l	equ	0xFE1
  1414                           status	equ	0xFD8
  1415                           
  1416 ;; *************** function ___aldiv *****************
  1417 ;; Defined at:
  1418 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/aldiv.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  dividend        4    0[COMRAM] long 
  1421 ;;  divisor         4    4[COMRAM] long 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  quotient        4   10[COMRAM] long 
  1424 ;;  sign            1    9[COMRAM] unsigned char 
  1425 ;;  counter         1    8[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  4    0[COMRAM] long 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1435 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1438 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;Total ram usage:       14 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_uart_init
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text5
  1449  001000                     __ptext5:
  1450                           	opt stack 0
  1451  001000                     ___aldiv:
  1452                           	opt stack 29
  1453                           
  1454                           ;incstack = 0
  1455  001000  0E00               	movlw	0
  1456  001002  6E0A               	movwf	___aldiv@sign,c
  1457  001004  AE08               	btfss	___aldiv@divisor+3,7,c
  1458  001006  D00A               	goto	l1459
  1459  001008  1E08               	comf	___aldiv@divisor+3,f,c
  1460  00100A  1E07               	comf	___aldiv@divisor+2,f,c
  1461  00100C  1E06               	comf	___aldiv@divisor+1,f,c
  1462  00100E  6C05               	negf	___aldiv@divisor,c
  1463  001010  0E00               	movlw	0
  1464  001012  2206               	addwfc	___aldiv@divisor+1,f,c
  1465  001014  2207               	addwfc	___aldiv@divisor+2,f,c
  1466  001016  2208               	addwfc	___aldiv@divisor+3,f,c
  1467  001018  0E01               	movlw	1
  1468  00101A  6E0A               	movwf	___aldiv@sign,c
  1469  00101C                     l1459:
  1470  00101C  AE04               	btfss	___aldiv@dividend+3,7,c
  1471  00101E  D00A               	goto	l1465
  1472  001020  1E04               	comf	___aldiv@dividend+3,f,c
  1473  001022  1E03               	comf	___aldiv@dividend+2,f,c
  1474  001024  1E02               	comf	___aldiv@dividend+1,f,c
  1475  001026  6C01               	negf	___aldiv@dividend,c
  1476  001028  0E00               	movlw	0
  1477  00102A  2202               	addwfc	___aldiv@dividend+1,f,c
  1478  00102C  2203               	addwfc	___aldiv@dividend+2,f,c
  1479  00102E  2204               	addwfc	___aldiv@dividend+3,f,c
  1480  001030  0E01               	movlw	1
  1481  001032  1A0A               	xorwf	___aldiv@sign,f,c
  1482  001034                     l1465:
  1483  001034  0E00               	movlw	0
  1484  001036  6E0B               	movwf	___aldiv@quotient,c
  1485  001038  0E00               	movlw	0
  1486  00103A  6E0C               	movwf	___aldiv@quotient+1,c
  1487  00103C  0E00               	movlw	0
  1488  00103E  6E0D               	movwf	___aldiv@quotient+2,c
  1489  001040  0E00               	movlw	0
  1490  001042  6E0E               	movwf	___aldiv@quotient+3,c
  1491  001044  5005               	movf	___aldiv@divisor,w,c
  1492  001046  1006               	iorwf	___aldiv@divisor+1,w,c
  1493  001048  1007               	iorwf	___aldiv@divisor+2,w,c
  1494  00104A  1008               	iorwf	___aldiv@divisor+3,w,c
  1495  00104C  B4D8               	btfsc	status,2,c
  1496  00104E  D02A               	goto	l1487
  1497  001050  0E01               	movlw	1
  1498  001052  6E09               	movwf	___aldiv@counter,c
  1499  001054  D006               	goto	l1473
  1500  001056                     l1471:
  1501  001056  90D8               	bcf	status,0,c
  1502  001058  3605               	rlcf	___aldiv@divisor,f,c
  1503  00105A  3606               	rlcf	___aldiv@divisor+1,f,c
  1504  00105C  3607               	rlcf	___aldiv@divisor+2,f,c
  1505  00105E  3608               	rlcf	___aldiv@divisor+3,f,c
  1506  001060  2A09               	incf	___aldiv@counter,f,c
  1507  001062                     l1473:
  1508  001062  AE08               	btfss	___aldiv@divisor+3,7,c
  1509  001064  D7F8               	goto	l1471
  1510  001066                     l1475:
  1511  001066  90D8               	bcf	status,0,c
  1512  001068  360B               	rlcf	___aldiv@quotient,f,c
  1513  00106A  360C               	rlcf	___aldiv@quotient+1,f,c
  1514  00106C  360D               	rlcf	___aldiv@quotient+2,f,c
  1515  00106E  360E               	rlcf	___aldiv@quotient+3,f,c
  1516  001070  5005               	movf	___aldiv@divisor,w,c
  1517  001072  5C01               	subwf	___aldiv@dividend,w,c
  1518  001074  5006               	movf	___aldiv@divisor+1,w,c
  1519  001076  5802               	subwfb	___aldiv@dividend+1,w,c
  1520  001078  5007               	movf	___aldiv@divisor+2,w,c
  1521  00107A  5803               	subwfb	___aldiv@dividend+2,w,c
  1522  00107C  5008               	movf	___aldiv@divisor+3,w,c
  1523  00107E  5804               	subwfb	___aldiv@dividend+3,w,c
  1524  001080  A0D8               	btfss	status,0,c
  1525  001082  D009               	goto	l1483
  1526  001084  5005               	movf	___aldiv@divisor,w,c
  1527  001086  5E01               	subwf	___aldiv@dividend,f,c
  1528  001088  5006               	movf	___aldiv@divisor+1,w,c
  1529  00108A  5A02               	subwfb	___aldiv@dividend+1,f,c
  1530  00108C  5007               	movf	___aldiv@divisor+2,w,c
  1531  00108E  5A03               	subwfb	___aldiv@dividend+2,f,c
  1532  001090  5008               	movf	___aldiv@divisor+3,w,c
  1533  001092  5A04               	subwfb	___aldiv@dividend+3,f,c
  1534  001094  800B               	bsf	___aldiv@quotient,0,c
  1535  001096                     l1483:
  1536  001096  90D8               	bcf	status,0,c
  1537  001098  3208               	rrcf	___aldiv@divisor+3,f,c
  1538  00109A  3207               	rrcf	___aldiv@divisor+2,f,c
  1539  00109C  3206               	rrcf	___aldiv@divisor+1,f,c
  1540  00109E  3205               	rrcf	___aldiv@divisor,f,c
  1541  0010A0  2E09               	decfsz	___aldiv@counter,f,c
  1542  0010A2  D7E1               	goto	l1475
  1543  0010A4                     l1487:
  1544  0010A4  500A               	movf	___aldiv@sign,w,c
  1545  0010A6  B4D8               	btfsc	status,2,c
  1546  0010A8  D008               	goto	l1491
  1547  0010AA  1E0E               	comf	___aldiv@quotient+3,f,c
  1548  0010AC  1E0D               	comf	___aldiv@quotient+2,f,c
  1549  0010AE  1E0C               	comf	___aldiv@quotient+1,f,c
  1550  0010B0  6C0B               	negf	___aldiv@quotient,c
  1551  0010B2  0E00               	movlw	0
  1552  0010B4  220C               	addwfc	___aldiv@quotient+1,f,c
  1553  0010B6  220D               	addwfc	___aldiv@quotient+2,f,c
  1554  0010B8  220E               	addwfc	___aldiv@quotient+3,f,c
  1555  0010BA                     l1491:
  1556  0010BA  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1557  0010BE  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1558  0010C2  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1559  0010C6  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1560  0010CA  0012               	return	
  1561  0010CC                     __end_of___aldiv:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _uart_data_ready *****************
  1574 ;; Defined at:
  1575 ;;		line 29 in file "uart.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      unsigned char 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;Total ram usage:        1 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text6
  1603  001378                     __ptext6:
  1604                           	opt stack 0
  1605  001378                     _uart_data_ready:
  1606                           	opt stack 30
  1607                           
  1608                           ;uart.c: 31: return (RCIF || PIR1bits.RCIF);
  1609                           
  1610                           ;incstack = 0
  1611  001378  0E01               	movlw	1
  1612  00137A  6E01               	movwf	_uart_data_ready$2262,c
  1613  00137C  AA9E               	btfss	3998,5,c	;volatile
  1614  00137E  BA9E               	btfsc	3998,5,c	;volatile
  1615  001380  D002               	goto	l382
  1616  001382  0E00               	movlw	0
  1617  001384  6E01               	movwf	_uart_data_ready$2262,c
  1618  001386                     l382:
  1619  001386  5001               	movf	_uart_data_ready$2262,w,c
  1620  001388  0012               	return	
  1621  00138A                     __end_of_uart_data_ready:
  1622                           	opt stack 0
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           postdec1	equ	0xFE5
  1630                           fsr1l	equ	0xFE1
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _testEveryOther *****************
  1634 ;; Defined at:
  1635 ;;		line 95 in file "movements.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		None
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text7
  1663  0012F8                     __ptext7:
  1664                           	opt stack 0
  1665  0012F8                     _testEveryOther:
  1666                           	opt stack 30
  1667                           
  1668                           ;movements.c: 97: LATCbits.LATC0 = 1;
  1669                           
  1670                           ;incstack = 0
  1671  0012F8  808B               	bsf	3979,0,c	;volatile
  1672                           
  1673                           ;movements.c: 98: LATCbits.LATC1 = 0;
  1674  0012FA  928B               	bcf	3979,1,c	;volatile
  1675                           
  1676                           ;movements.c: 99: LATCbits.LATC2 = 1;
  1677  0012FC  848B               	bsf	3979,2,c	;volatile
  1678                           
  1679                           ;movements.c: 100: LATCbits.LATC3 = 0;
  1680  0012FE  968B               	bcf	3979,3,c	;volatile
  1681                           
  1682                           ;movements.c: 101: LATDbits.LATD0 = 1;
  1683  001300  808C               	bsf	3980,0,c	;volatile
  1684                           
  1685                           ;movements.c: 102: LATDbits.LATD1 = 0;
  1686  001302  928C               	bcf	3980,1,c	;volatile
  1687                           
  1688                           ;movements.c: 103: LATDbits.LATD2 = 1;
  1689  001304  848C               	bsf	3980,2,c	;volatile
  1690                           
  1691                           ;movements.c: 104: LATDbits.LATD3 = 0;
  1692  001306  968C               	bcf	3980,3,c	;volatile
  1693                           
  1694                           ;movements.c: 105: LATCbits.LATC4 = 1;
  1695  001308  888B               	bsf	3979,4,c	;volatile
  1696                           
  1697                           ;movements.c: 106: LATCbits.LATC5 = 0;
  1698  00130A  9A8B               	bcf	3979,5,c	;volatile
  1699                           
  1700                           ;movements.c: 107: LATCbits.LATC6 = 1;
  1701  00130C  8C8B               	bsf	3979,6,c	;volatile
  1702                           
  1703                           ;movements.c: 108: LATCbits.LATC7 = 0;
  1704  00130E  9E8B               	bcf	3979,7,c	;volatile
  1705                           
  1706                           ;movements.c: 109: LATDbits.LATD4 = 1;
  1707  001310  888C               	bsf	3980,4,c	;volatile
  1708                           
  1709                           ;movements.c: 110: LATDbits.LATD5 = 0;
  1710  001312  9A8C               	bcf	3980,5,c	;volatile
  1711                           
  1712                           ;movements.c: 111: LATDbits.LATD6 = 1;
  1713  001314  8C8C               	bsf	3980,6,c	;volatile
  1714                           
  1715                           ;movements.c: 112: LATDbits.LATD7 = 0;
  1716  001316  9E8C               	bcf	3980,7,c	;volatile
  1717  001318  0012               	return		;funcret
  1718  00131A                     __end_of_testEveryOther:
  1719                           	opt stack 0
  1720                           tblptru	equ	0xFF8
  1721                           tblptrh	equ	0xFF7
  1722                           tblptrl	equ	0xFF6
  1723                           tablat	equ	0xFF5
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           postdec1	equ	0xFE5
  1727                           fsr1l	equ	0xFE1
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _testALLON *****************
  1731 ;; Defined at:
  1732 ;;		line 114 in file "movements.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		None
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text8
  1760  00131A                     __ptext8:
  1761                           	opt stack 0
  1762  00131A                     _testALLON:
  1763                           	opt stack 30
  1764                           
  1765                           ;movements.c: 116: LATCbits.LATC0 = 1;
  1766                           
  1767                           ;incstack = 0
  1768  00131A  808B               	bsf	3979,0,c	;volatile
  1769                           
  1770                           ;movements.c: 117: LATCbits.LATC1 = 1;
  1771  00131C  828B               	bsf	3979,1,c	;volatile
  1772                           
  1773                           ;movements.c: 118: LATCbits.LATC2 = 1;
  1774  00131E  848B               	bsf	3979,2,c	;volatile
  1775                           
  1776                           ;movements.c: 119: LATCbits.LATC3 = 1;
  1777  001320  868B               	bsf	3979,3,c	;volatile
  1778                           
  1779                           ;movements.c: 120: LATDbits.LATD0 = 1;
  1780  001322  808C               	bsf	3980,0,c	;volatile
  1781                           
  1782                           ;movements.c: 121: LATDbits.LATD1 = 1;
  1783  001324  828C               	bsf	3980,1,c	;volatile
  1784                           
  1785                           ;movements.c: 122: LATDbits.LATD2 = 1;
  1786  001326  848C               	bsf	3980,2,c	;volatile
  1787                           
  1788                           ;movements.c: 123: LATDbits.LATD3 = 1;
  1789  001328  868C               	bsf	3980,3,c	;volatile
  1790                           
  1791                           ;movements.c: 124: LATCbits.LATC4 = 1;
  1792  00132A  888B               	bsf	3979,4,c	;volatile
  1793                           
  1794                           ;movements.c: 125: LATCbits.LATC5 = 1;
  1795  00132C  8A8B               	bsf	3979,5,c	;volatile
  1796                           
  1797                           ;movements.c: 126: LATCbits.LATC6 = 1;
  1798  00132E  8C8B               	bsf	3979,6,c	;volatile
  1799                           
  1800                           ;movements.c: 127: LATCbits.LATC7 = 1;
  1801  001330  8E8B               	bsf	3979,7,c	;volatile
  1802                           
  1803                           ;movements.c: 128: LATDbits.LATD4 = 1;
  1804  001332  888C               	bsf	3980,4,c	;volatile
  1805                           
  1806                           ;movements.c: 129: LATDbits.LATD5 = 1;
  1807  001334  8A8C               	bsf	3980,5,c	;volatile
  1808                           
  1809                           ;movements.c: 130: LATDbits.LATD6 = 1;
  1810  001336  8C8C               	bsf	3980,6,c	;volatile
  1811                           
  1812                           ;movements.c: 131: LATDbits.LATD7 = 1;
  1813  001338  8E8C               	bsf	3980,7,c	;volatile
  1814  00133A  0012               	return		;funcret
  1815  00133C                     __end_of_testALLON:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1l	equ	0xFE1
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _testALLOFF *****************
  1828 ;; Defined at:
  1829 ;;		line 133 in file "movements.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		None
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text9
  1857  00133C                     __ptext9:
  1858                           	opt stack 0
  1859  00133C                     _testALLOFF:
  1860                           	opt stack 30
  1861                           
  1862                           ;movements.c: 135: LATCbits.LATC0 = 0;
  1863                           
  1864                           ;incstack = 0
  1865  00133C  908B               	bcf	3979,0,c	;volatile
  1866                           
  1867                           ;movements.c: 136: LATCbits.LATC1 = 0;
  1868  00133E  928B               	bcf	3979,1,c	;volatile
  1869                           
  1870                           ;movements.c: 137: LATCbits.LATC2 = 0;
  1871  001340  948B               	bcf	3979,2,c	;volatile
  1872                           
  1873                           ;movements.c: 138: LATCbits.LATC3 = 0;
  1874  001342  968B               	bcf	3979,3,c	;volatile
  1875                           
  1876                           ;movements.c: 139: LATDbits.LATD0 = 0;
  1877  001344  908C               	bcf	3980,0,c	;volatile
  1878                           
  1879                           ;movements.c: 140: LATDbits.LATD1 = 0;
  1880  001346  928C               	bcf	3980,1,c	;volatile
  1881                           
  1882                           ;movements.c: 141: LATDbits.LATD2 = 0;
  1883  001348  948C               	bcf	3980,2,c	;volatile
  1884                           
  1885                           ;movements.c: 142: LATDbits.LATD3 = 0;
  1886  00134A  968C               	bcf	3980,3,c	;volatile
  1887                           
  1888                           ;movements.c: 143: LATCbits.LATC4 = 0;
  1889  00134C  988B               	bcf	3979,4,c	;volatile
  1890                           
  1891                           ;movements.c: 144: LATCbits.LATC5 = 0;
  1892  00134E  9A8B               	bcf	3979,5,c	;volatile
  1893                           
  1894                           ;movements.c: 145: LATCbits.LATC6 = 0;
  1895  001350  9C8B               	bcf	3979,6,c	;volatile
  1896                           
  1897                           ;movements.c: 146: LATCbits.LATC7 = 0;
  1898  001352  9E8B               	bcf	3979,7,c	;volatile
  1899                           
  1900                           ;movements.c: 147: LATDbits.LATD4 = 0;
  1901  001354  988C               	bcf	3980,4,c	;volatile
  1902                           
  1903                           ;movements.c: 148: LATDbits.LATD5 = 0;
  1904  001356  9A8C               	bcf	3980,5,c	;volatile
  1905                           
  1906                           ;movements.c: 149: LATDbits.LATD6 = 0;
  1907  001358  9C8C               	bcf	3980,6,c	;volatile
  1908                           
  1909                           ;movements.c: 150: LATDbits.LATD7 = 0;
  1910  00135A  9E8C               	bcf	3980,7,c	;volatile
  1911  00135C  0012               	return		;funcret
  1912  00135E                     __end_of_testALLOFF:
  1913                           	opt stack 0
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           status	equ	0xFD8
  1923                           
  1924 ;; *************** function _setAnalogIn *****************
  1925 ;; Defined at:
  1926 ;;		line 24 in file "system.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		None
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text10
  1954  0012A6                     __ptext10:
  1955                           	opt stack 0
  1956  0012A6                     _setAnalogIn:
  1957                           	opt stack 30
  1958                           
  1959                           ;system.c: 27: ADCON1bits.PCFG = 0;
  1960                           
  1961                           ;incstack = 0
  1962  0012A6  90C1               	bcf	4033,0,c	;volatile
  1963  0012A8  92C1               	bcf	4033,1,c	;volatile
  1964  0012AA  94C1               	bcf	4033,2,c	;volatile
  1965  0012AC  96C1               	bcf	4033,3,c	;volatile
  1966                           
  1967                           ;system.c: 28: ADCON2bits.ADFM = 1;
  1968  0012AE  8EC0               	bsf	4032,7,c	;volatile
  1969                           
  1970                           ;system.c: 32: ADCON1bits.VCFG0 = 0;
  1971  0012B0  98C1               	bcf	4033,4,c	;volatile
  1972                           
  1973                           ;system.c: 33: ADCON1bits.VCFG1 = 0;
  1974  0012B2  9AC1               	bcf	4033,5,c	;volatile
  1975                           
  1976                           ;system.c: 36: ADCON2bits.ACQT2 = 0;
  1977  0012B4  9AC0               	bcf	4032,5,c	;volatile
  1978                           
  1979                           ;system.c: 37: ADCON2bits.ACQT1 = 1;
  1980  0012B6  88C0               	bsf	4032,4,c	;volatile
  1981                           
  1982                           ;system.c: 38: ADCON2bits.ACQT0 = 0;
  1983  0012B8  96C0               	bcf	4032,3,c	;volatile
  1984                           
  1985                           ;system.c: 41: ADCON2bits.ADCS2 = 0;
  1986  0012BA  94C0               	bcf	4032,2,c	;volatile
  1987                           
  1988                           ;system.c: 42: ADCON2bits.ADCS1 = 1;
  1989  0012BC  82C0               	bsf	4032,1,c	;volatile
  1990                           
  1991                           ;system.c: 43: ADCON2bits.ADCS0 = 0;
  1992  0012BE  90C0               	bcf	4032,0,c	;volatile
  1993                           
  1994                           ;system.c: 47: TRISAbits.TRISA0 = 1;
  1995  0012C0  8092               	bsf	3986,0,c	;volatile
  1996                           
  1997                           ;system.c: 48: TRISAbits.TRISA1 = 1;
  1998  0012C2  8292               	bsf	3986,1,c	;volatile
  1999                           
  2000                           ;system.c: 49: TRISAbits.TRISA2 = 1;
  2001  0012C4  8492               	bsf	3986,2,c	;volatile
  2002                           
  2003                           ;system.c: 50: TRISAbits.TRISA3 = 1;
  2004  0012C6  8692               	bsf	3986,3,c	;volatile
  2005                           
  2006                           ;system.c: 51: TRISAbits.TRISA5 = 1;
  2007  0012C8  8A92               	bsf	3986,5,c	;volatile
  2008                           
  2009                           ;system.c: 52: TRISEbits.TRISE0 = 1;
  2010  0012CA  8096               	bsf	3990,0,c	;volatile
  2011                           
  2012                           ;system.c: 53: TRISEbits.TRISE1 = 1;
  2013  0012CC  8296               	bsf	3990,1,c	;volatile
  2014                           
  2015                           ;system.c: 54: TRISEbits.TRISE2 = 1;
  2016  0012CE  8496               	bsf	3990,2,c	;volatile
  2017                           
  2018                           ;system.c: 58: ADCON0bits.ADON = 1;
  2019  0012D0  80C2               	bsf	4034,0,c	;volatile
  2020  0012D2  0012               	return		;funcret
  2021  0012D4                     __end_of_setAnalogIn:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _setActuatorCntrl *****************
  2034 ;; Defined at:
  2035 ;;		line 61 in file "system.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		None
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text11
  2063  0012D4                     __ptext11:
  2064                           	opt stack 0
  2065  0012D4                     _setActuatorCntrl:
  2066                           	opt stack 30
  2067                           
  2068                           ;system.c: 64: TRISDbits.TRISD0 = 0;
  2069                           
  2070                           ;incstack = 0
  2071  0012D4  9095               	bcf	3989,0,c	;volatile
  2072                           
  2073                           ;system.c: 65: TRISDbits.TRISD1 = 0;
  2074  0012D6  9295               	bcf	3989,1,c	;volatile
  2075                           
  2076                           ;system.c: 66: TRISDbits.TRISD2 = 0;
  2077  0012D8  9495               	bcf	3989,2,c	;volatile
  2078                           
  2079                           ;system.c: 67: TRISDbits.TRISD3 = 0;
  2080  0012DA  9695               	bcf	3989,3,c	;volatile
  2081                           
  2082                           ;system.c: 68: TRISDbits.TRISD4 = 0;
  2083  0012DC  9895               	bcf	3989,4,c	;volatile
  2084                           
  2085                           ;system.c: 69: TRISDbits.TRISD5 = 0;
  2086  0012DE  9A95               	bcf	3989,5,c	;volatile
  2087                           
  2088                           ;system.c: 70: TRISDbits.TRISD6 = 0;
  2089  0012E0  9C95               	bcf	3989,6,c	;volatile
  2090                           
  2091                           ;system.c: 71: TRISDbits.TRISD7 = 0;
  2092  0012E2  9E95               	bcf	3989,7,c	;volatile
  2093                           
  2094                           ;system.c: 73: TRISCbits.TRISC0 = 0;
  2095  0012E4  9094               	bcf	3988,0,c	;volatile
  2096                           
  2097                           ;system.c: 74: TRISCbits.TRISC1 = 0;
  2098  0012E6  9294               	bcf	3988,1,c	;volatile
  2099                           
  2100                           ;system.c: 75: TRISCbits.TRISC2 = 0;
  2101  0012E8  9494               	bcf	3988,2,c	;volatile
  2102                           
  2103                           ;system.c: 76: TRISCbits.TRISC3 = 0;
  2104  0012EA  9694               	bcf	3988,3,c	;volatile
  2105                           
  2106                           ;system.c: 77: TRISCbits.TRISC4 = 0;
  2107  0012EC  9894               	bcf	3988,4,c	;volatile
  2108                           
  2109                           ;system.c: 78: TRISCbits.TRISC5 = 0;
  2110  0012EE  9A94               	bcf	3988,5,c	;volatile
  2111                           
  2112                           ;system.c: 82: TRISBbits.TRISB0 = 0;
  2113  0012F0  9093               	bcf	3987,0,c	;volatile
  2114                           
  2115                           ;system.c: 83: TRISBbits.TRISB1 = 0;
  2116  0012F2  9293               	bcf	3987,1,c	;volatile
  2117                           
  2118                           ;system.c: 86: TRISAbits.TRISA7 = 0;
  2119  0012F4  9E92               	bcf	3986,7,c	;volatile
  2120  0012F6  0012               	return		;funcret
  2121  0012F8                     __end_of_setActuatorCntrl:
  2122                           	opt stack 0
  2123                           tblptru	equ	0xFF8
  2124                           tblptrh	equ	0xFF7
  2125                           tblptrl	equ	0xFF6
  2126                           tablat	equ	0xFF5
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           postdec1	equ	0xFE5
  2130                           fsr1l	equ	0xFE1
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _selectAN7 *****************
  2134 ;; Defined at:
  2135 ;;		line 68 in file "ADC_Config.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text12
  2163  0013B0                     __ptext12:
  2164                           	opt stack 0
  2165  0013B0                     _selectAN7:
  2166                           	opt stack 30
  2167                           
  2168                           ;ADC_Config.c: 70: ADCON0bits.CHS = 0x07;
  2169                           
  2170                           ;incstack = 0
  2171  0013B0  50C2               	movf	4034,w,c	;volatile
  2172  0013B2  0BC3               	andlw	-61
  2173  0013B4  091C               	iorlw	28
  2174  0013B6  6EC2               	movwf	4034,c	;volatile
  2175  0013B8  0012               	return		;funcret
  2176  0013BA                     __end_of_selectAN7:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           postdec1	equ	0xFE5
  2185                           fsr1l	equ	0xFE1
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _selectAN6 *****************
  2189 ;; Defined at:
  2190 ;;		line 62 in file "ADC_Config.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text13
  2218  0013BA                     __ptext13:
  2219                           	opt stack 0
  2220  0013BA                     _selectAN6:
  2221                           	opt stack 30
  2222                           
  2223                           ;ADC_Config.c: 64: ADCON0bits.CHS = 0x06;
  2224                           
  2225                           ;incstack = 0
  2226  0013BA  50C2               	movf	4034,w,c	;volatile
  2227  0013BC  0BC3               	andlw	-61
  2228  0013BE  0918               	iorlw	24
  2229  0013C0  6EC2               	movwf	4034,c	;volatile
  2230  0013C2  0012               	return		;funcret
  2231  0013C4                     __end_of_selectAN6:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1l	equ	0xFE1
  2241                           status	equ	0xFD8
  2242                           
  2243 ;; *************** function _selectAN5 *****************
  2244 ;; Defined at:
  2245 ;;		line 56 in file "ADC_Config.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text14
  2273  0013C4                     __ptext14:
  2274                           	opt stack 0
  2275  0013C4                     _selectAN5:
  2276                           	opt stack 30
  2277                           
  2278                           ;ADC_Config.c: 58: ADCON0bits.CHS = 0x05;
  2279                           
  2280                           ;incstack = 0
  2281  0013C4  50C2               	movf	4034,w,c	;volatile
  2282  0013C6  0BC3               	andlw	-61
  2283  0013C8  0914               	iorlw	20
  2284  0013CA  6EC2               	movwf	4034,c	;volatile
  2285  0013CC  0012               	return		;funcret
  2286  0013CE                     __end_of_selectAN5:
  2287                           	opt stack 0
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           postdec1	equ	0xFE5
  2295                           fsr1l	equ	0xFE1
  2296                           status	equ	0xFD8
  2297                           
  2298 ;; *************** function _selectAN4 *****************
  2299 ;; Defined at:
  2300 ;;		line 50 in file "ADC_Config.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;Total ram usage:        0 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text15
  2328  0013CE                     __ptext15:
  2329                           	opt stack 0
  2330  0013CE                     _selectAN4:
  2331                           	opt stack 30
  2332                           
  2333                           ;ADC_Config.c: 52: ADCON0bits.CHS = 0x04;
  2334                           
  2335                           ;incstack = 0
  2336  0013CE  50C2               	movf	4034,w,c	;volatile
  2337  0013D0  0BC3               	andlw	-61
  2338  0013D2  0910               	iorlw	16
  2339  0013D4  6EC2               	movwf	4034,c	;volatile
  2340  0013D6  0012               	return		;funcret
  2341  0013D8                     __end_of_selectAN4:
  2342                           	opt stack 0
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           postinc0	equ	0xFEE
  2348                           wreg	equ	0xFE8
  2349                           postdec1	equ	0xFE5
  2350                           fsr1l	equ	0xFE1
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _selectAN3 *****************
  2354 ;; Defined at:
  2355 ;;		line 44 in file "ADC_Config.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text16
  2383  0013D8                     __ptext16:
  2384                           	opt stack 0
  2385  0013D8                     _selectAN3:
  2386                           	opt stack 30
  2387                           
  2388                           ;ADC_Config.c: 46: ADCON0bits.CHS = 0x03;
  2389                           
  2390                           ;incstack = 0
  2391  0013D8  50C2               	movf	4034,w,c	;volatile
  2392  0013DA  0BC3               	andlw	-61
  2393  0013DC  090C               	iorlw	12
  2394  0013DE  6EC2               	movwf	4034,c	;volatile
  2395  0013E0  0012               	return		;funcret
  2396  0013E2                     __end_of_selectAN3:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           postdec1	equ	0xFE5
  2405                           fsr1l	equ	0xFE1
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _selectAN2 *****************
  2409 ;; Defined at:
  2410 ;;		line 38 in file "ADC_Config.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text17
  2438  0013E2                     __ptext17:
  2439                           	opt stack 0
  2440  0013E2                     _selectAN2:
  2441                           	opt stack 30
  2442                           
  2443                           ;ADC_Config.c: 40: ADCON0bits.CHS = 0x02;
  2444                           
  2445                           ;incstack = 0
  2446  0013E2  50C2               	movf	4034,w,c	;volatile
  2447  0013E4  0BC3               	andlw	-61
  2448  0013E6  0908               	iorlw	8
  2449  0013E8  6EC2               	movwf	4034,c	;volatile
  2450  0013EA  0012               	return		;funcret
  2451  0013EC                     __end_of_selectAN2:
  2452                           	opt stack 0
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1l	equ	0xFE1
  2461                           status	equ	0xFD8
  2462                           
  2463 ;; *************** function _selectAN1 *****************
  2464 ;; Defined at:
  2465 ;;		line 32 in file "ADC_Config.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text18
  2493  0013EC                     __ptext18:
  2494                           	opt stack 0
  2495  0013EC                     _selectAN1:
  2496                           	opt stack 30
  2497                           
  2498                           ;ADC_Config.c: 34: ADCON0bits.CHS = 0x01;
  2499                           
  2500                           ;incstack = 0
  2501  0013EC  50C2               	movf	4034,w,c	;volatile
  2502  0013EE  0BC3               	andlw	-61
  2503  0013F0  0904               	iorlw	4
  2504  0013F2  6EC2               	movwf	4034,c	;volatile
  2505  0013F4  0012               	return		;funcret
  2506  0013F6                     __end_of_selectAN1:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           postdec1	equ	0xFE5
  2515                           fsr1l	equ	0xFE1
  2516                           status	equ	0xFD8
  2517                           
  2518 ;; *************** function _selectAN0 *****************
  2519 ;; Defined at:
  2520 ;;		line 26 in file "ADC_Config.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		None
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2538 ;;Total ram usage:        0 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text19
  2548  0013F6                     __ptext19:
  2549                           	opt stack 0
  2550  0013F6                     _selectAN0:
  2551                           	opt stack 30
  2552                           
  2553                           ;ADC_Config.c: 28: ADCON0bits.CHS = 0x00;
  2554                           
  2555                           ;incstack = 0
  2556  0013F6  94C2               	bcf	4034,2,c	;volatile
  2557  0013F8  96C2               	bcf	4034,3,c	;volatile
  2558  0013FA  98C2               	bcf	4034,4,c	;volatile
  2559  0013FC  9AC2               	bcf	4034,5,c	;volatile
  2560  0013FE  0012               	return		;funcret
  2561  001400                     __end_of_selectAN0:
  2562                           	opt stack 0
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           postinc0	equ	0xFEE
  2568                           wreg	equ	0xFE8
  2569                           postdec1	equ	0xFE5
  2570                           fsr1l	equ	0xFE1
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _readADC *****************
  2574 ;; Defined at:
  2575 ;;		line 73 in file "ADC_Config.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  digitalVal      2    2[COMRAM] unsigned int 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2    0[COMRAM] unsigned int 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;Total ram usage:        4 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text20
  2603  00135E                     __ptext20:
  2604                           	opt stack 0
  2605  00135E                     _readADC:
  2606                           	opt stack 30
  2607                           
  2608                           ;ADC_Config.c: 75: unsigned int digitalVal;
  2609                           ;ADC_Config.c: 77: ADCON0bits.GO_NOT_DONE = 1;
  2610                           
  2611                           ;incstack = 0
  2612  00135E  82C2               	bsf	4034,1,c	;volatile
  2613  001360                     l149:
  2614  001360  B2C2               	btfsc	4034,1,c	;volatile
  2615  001362  D7FE               	goto	l149
  2616                           
  2617                           ;ADC_Config.c: 83: digitalVal = ADRESL;
  2618  001364  CFC3 F003          	movff	4035,readADC@digitalVal	;volatile
  2619  001368  6A04               	clrf	readADC@digitalVal+1,c
  2620                           
  2621                           ;ADC_Config.c: 84: digitalVal += ADRESH << 8;
  2622  00136A  50C4               	movf	4036,w,c	;volatile
  2623  00136C  2604               	addwf	readADC@digitalVal+1,f,c
  2624                           
  2625                           ;ADC_Config.c: 85: return digitalVal;
  2626  00136E  C003  F001         	movff	readADC@digitalVal,?_readADC
  2627  001372  C004  F002         	movff	readADC@digitalVal+1,?_readADC+1
  2628  001376  0012               	return	
  2629  001378                     __end_of_readADC:
  2630                           	opt stack 0
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           postinc0	equ	0xFEE
  2636                           wreg	equ	0xFE8
  2637                           postdec1	equ	0xFE5
  2638                           fsr1l	equ	0xFE1
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function _ecan_init *****************
  2642 ;; Defined at:
  2643 ;;		line 11 in file "can.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  mask0           2    4[COMRAM] short 
  2648 ;;  sid0            2    2[COMRAM] short 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;Total ram usage:        6 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text21
  2672  0010CC                     __ptext21:
  2673                           	opt stack 0
  2674  0010CC                     _ecan_init:
  2675                           	opt stack 30
  2676                           
  2677                           ;can.c: 14: TRISBbits.TRISB2 = 0;
  2678                           
  2679                           ;incstack = 0
  2680  0010CC  9493               	bcf	3987,2,c	;volatile
  2681                           
  2682                           ;can.c: 15: TRISBbits.TRISB3 = 1;
  2683  0010CE  8693               	bsf	3987,3,c	;volatile
  2684                           
  2685                           ;can.c: 18: CANCONbits.REQOP2 = 1;
  2686  0010D0  8E6F               	bsf	3951,7,c	;volatile
  2687  0010D2                     l257:
  2688  0010D2  AE6E               	btfss	3950,7,c	;volatile
  2689  0010D4  AC6E               	btfss	3950,6,c	;volatile
  2690  0010D6  D002               	goto	l261
  2691  0010D8  BA6E               	btfsc	3950,5,c	;volatile
  2692  0010DA  D7FB               	goto	l257
  2693  0010DC                     l261:
  2694                           
  2695                           ;can.c: 26: CIOCONbits.ENDRHI = 0;
  2696  0010DC  9A73               	bcf	3955,5,c	;volatile
  2697                           
  2698                           ;can.c: 29: BRGCON1bits.SJW1 = 0;
  2699  0010DE  9E70               	bcf	3952,7,c	;volatile
  2700                           
  2701                           ;can.c: 30: BRGCON1bits.SJW0 = 0;
  2702  0010E0  9C70               	bcf	3952,6,c	;volatile
  2703                           
  2704                           ;can.c: 31: BRGCON1bits.BRP5 = 0;
  2705  0010E2  9A70               	bcf	3952,5,c	;volatile
  2706                           
  2707                           ;can.c: 32: BRGCON1bits.BRP4 = 0;
  2708  0010E4  9870               	bcf	3952,4,c	;volatile
  2709                           
  2710                           ;can.c: 33: BRGCON1bits.BRP3 = 0;
  2711  0010E6  9670               	bcf	3952,3,c	;volatile
  2712                           
  2713                           ;can.c: 34: BRGCON1bits.BRP2 = 0;
  2714  0010E8  9470               	bcf	3952,2,c	;volatile
  2715                           
  2716                           ;can.c: 35: BRGCON1bits.BRP1 = 0;
  2717  0010EA  9270               	bcf	3952,1,c	;volatile
  2718                           
  2719                           ;can.c: 36: BRGCON1bits.BRP0 = 1;
  2720  0010EC  8070               	bsf	3952,0,c	;volatile
  2721                           
  2722                           ;can.c: 38: BRGCON2bits.SEG2PHTS = 1;
  2723  0010EE  8E71               	bsf	3953,7,c	;volatile
  2724                           
  2725                           ;can.c: 39: BRGCON2bits.SAM = 1;
  2726  0010F0  8C71               	bsf	3953,6,c	;volatile
  2727                           
  2728                           ;can.c: 40: BRGCON2bits.SEG1PH2 = 0;
  2729  0010F2  9A71               	bcf	3953,5,c	;volatile
  2730                           
  2731                           ;can.c: 41: BRGCON2bits.SEG1PH1 = 0;
  2732  0010F4  9871               	bcf	3953,4,c	;volatile
  2733                           
  2734                           ;can.c: 42: BRGCON2bits.SEG1PH0 = 1;
  2735  0010F6  8671               	bsf	3953,3,c	;volatile
  2736                           
  2737                           ;can.c: 43: BRGCON2bits.PRSEG2 = 0;
  2738  0010F8  9471               	bcf	3953,2,c	;volatile
  2739                           
  2740                           ;can.c: 44: BRGCON2bits.PRSEG1 = 1;
  2741  0010FA  8271               	bsf	3953,1,c	;volatile
  2742                           
  2743                           ;can.c: 45: BRGCON2bits.PRSEG0 = 0;
  2744  0010FC  9071               	bcf	3953,0,c	;volatile
  2745                           
  2746                           ;can.c: 49: BRGCON3bits.SEG2PH2 = 0;
  2747  0010FE  9472               	bcf	3954,2,c	;volatile
  2748                           
  2749                           ;can.c: 50: BRGCON3bits. SEG2PH1 = 0;
  2750  001100  9272               	bcf	3954,1,c	;volatile
  2751                           
  2752                           ;can.c: 51: BRGCON3bits. SEG2PH0 = 1;
  2753  001102  8072               	bsf	3954,0,c	;volatile
  2754                           
  2755                           ;can.c: 54: ECANCONbits.MDSEL1 = 0;
  2756  001104  9E77               	bcf	3959,7,c	;volatile
  2757                           
  2758                           ;can.c: 55: ECANCONbits.MDSEL0 = 0;
  2759  001106  9C77               	bcf	3959,6,c	;volatile
  2760                           
  2761                           ;can.c: 62: RXB0CONbits.RXM1 = 0;
  2762  001108  9C60               	bcf	3936,6,c	;volatile
  2763                           
  2764                           ;can.c: 63: RXB0CONbits.RXM0 = 1;
  2765  00110A  8A60               	bsf	3936,5,c	;volatile
  2766                           
  2767                           ;can.c: 78: short sid0 = 0x00A;
  2768  00110C  0E00               	movlw	0
  2769  00110E  6E04               	movwf	ecan_init@sid0+1,c
  2770  001110  0E0A               	movlw	10
  2771  001112  6E03               	movwf	ecan_init@sid0,c
  2772                           
  2773                           ;can.c: 79: short mask0 = 0x7FF;
  2774  001114  0E07               	movlw	7
  2775  001116  6E06               	movwf	ecan_init@mask0+1,c
  2776  001118  6805               	setf	ecan_init@mask0,c
  2777                           
  2778                           ;can.c: 81: RXF0SIDH = sid0 >> 3;
  2779  00111A  C003  F001         	movff	ecan_init@sid0,??_ecan_init
  2780  00111E  C004  F002         	movff	ecan_init@sid0+1,??_ecan_init+1
  2781  001122  3402               	rlcf	??_ecan_init+1,w,c
  2782  001124  3202               	rrcf	??_ecan_init+1,f,c
  2783  001126  3201               	rrcf	??_ecan_init,f,c
  2784  001128  3402               	rlcf	??_ecan_init+1,w,c
  2785  00112A  3202               	rrcf	??_ecan_init+1,f,c
  2786  00112C  3201               	rrcf	??_ecan_init,f,c
  2787  00112E  3402               	rlcf	??_ecan_init+1,w,c
  2788  001130  3202               	rrcf	??_ecan_init+1,f,c
  2789  001132  3201               	rrcf	??_ecan_init,f,c
  2790  001134  5001               	movf	??_ecan_init,w,c
  2791  001136  010F               	movlb	15	; () banked
  2792  001138  6F00               	movwf	0,b	;volatile
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;can.c: 82: RXF0SIDL = sid0 << 5;
  2796  00113A  3803               	swapf	ecan_init@sid0,w,c
  2797  00113C  46E8               	rlncf	wreg,f,c
  2798  00113E  0BE0               	andlw	224
  2799  001140  010F               	movlb	15	; () banked
  2800  001142  6F01               	movwf	1,b	;volatile
  2801                           
  2802                           ; BSR set to: 15
  2803                           ;can.c: 83: RXM0SIDH = mask0 >> 3;
  2804  001144  C005  F001         	movff	ecan_init@mask0,??_ecan_init
  2805  001148  C006  F002         	movff	ecan_init@mask0+1,??_ecan_init+1
  2806  00114C  3402               	rlcf	??_ecan_init+1,w,c
  2807  00114E  3202               	rrcf	??_ecan_init+1,f,c
  2808  001150  3201               	rrcf	??_ecan_init,f,c
  2809  001152  3402               	rlcf	??_ecan_init+1,w,c
  2810  001154  3202               	rrcf	??_ecan_init+1,f,c
  2811  001156  3201               	rrcf	??_ecan_init,f,c
  2812  001158  3402               	rlcf	??_ecan_init+1,w,c
  2813  00115A  3202               	rrcf	??_ecan_init+1,f,c
  2814  00115C  3201               	rrcf	??_ecan_init,f,c
  2815  00115E  5001               	movf	??_ecan_init,w,c
  2816  001160  010F               	movlb	15	; () banked
  2817  001162  6F18               	movwf	24,b	;volatile
  2818                           
  2819                           ; BSR set to: 15
  2820                           ;can.c: 84: RXM0SIDL = mask0 << 5;
  2821  001164  3805               	swapf	ecan_init@mask0,w,c
  2822  001166  46E8               	rlncf	wreg,f,c
  2823  001168  0BE0               	andlw	224
  2824  00116A  010F               	movlb	15	; () banked
  2825  00116C  6F19               	movwf	25,b	;volatile
  2826                           
  2827                           ; BSR set to: 15
  2828                           ;can.c: 85: RXF0SIDLbits.EXIDEN = 0;
  2829  00116E  010F               	movlb	15	; () banked
  2830  001170  9701               	bcf	1,3,b	;volatile
  2831                           
  2832                           ; BSR set to: 15
  2833                           ;can.c: 86: RXFCON0bits.RXF0EN = 1;
  2834  001172  010D               	movlb	13	; () banked
  2835  001174  81D4               	bsf	212,0,b	;volatile
  2836                           
  2837                           ; BSR set to: 13
  2838                           ;can.c: 104: CANCONbits.REQOP2 = 0;
  2839  001176  9E6F               	bcf	3951,7,c	;volatile
  2840                           
  2841                           ; BSR set to: 13
  2842                           ;can.c: 105: CANCONbits.REQOP1 = 0;
  2843  001178  9C6F               	bcf	3951,6,c	;volatile
  2844                           
  2845                           ; BSR set to: 13
  2846                           ;can.c: 106: CANCONbits.REQOP0 = 0;
  2847  00117A  9A6F               	bcf	3951,5,c	;volatile
  2848  00117C                     l262:
  2849  00117C  AE6E               	btfss	3950,7,c	;volatile
  2850  00117E  0012               	return	
  2851  001180  AC6E               	btfss	3950,6,c	;volatile
  2852  001182  0012               	return	
  2853  001184  AA6E               	btfss	3950,5,c	;volatile
  2854  001186  0012               	return	
  2855  001188  D7F9               	goto	l262
  2856  00118A                     __end_of_ecan_init:
  2857                           	opt stack 0
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           postdec1	equ	0xFE5
  2865                           fsr1l	equ	0xFE1
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _ConfigureOscillator *****************
  2869 ;; Defined at:
  2870 ;;		line 24 in file "config.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		None
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text22
  2898  00138A                     __ptext22:
  2899                           	opt stack 0
  2900  00138A                     _ConfigureOscillator:
  2901                           	opt stack 30
  2902                           
  2903                           ;config.c: 29: OSCCONbits.IRCF2 = 1;
  2904                           
  2905                           ;incstack = 0
  2906  00138A  8CD3               	bsf	4051,6,c	;volatile
  2907                           
  2908                           ;config.c: 30: OSCCONbits.IRCF1 = 1;
  2909  00138C  8AD3               	bsf	4051,5,c	;volatile
  2910                           
  2911                           ;config.c: 31: OSCCONbits.IRCF0 = 1;
  2912  00138E  88D3               	bsf	4051,4,c	;volatile
  2913                           
  2914                           ;config.c: 33: OSCCONbits.SCS1 = 0;
  2915  001390  92D3               	bcf	4051,1,c	;volatile
  2916                           
  2917                           ;config.c: 34: OSCCONbits.SCS0 = 0;
  2918  001392  90D3               	bcf	4051,0,c	;volatile
  2919                           
  2920                           ;config.c: 36: OSCTUNEbits.PLLEN = 1;
  2921  001394  8C9B               	bsf	3995,6,c	;volatile
  2922  001396  0012               	return		;funcret
  2923  001398                     __end_of_ConfigureOscillator:
  2924                           	opt stack 0
  2925                           tblptru	equ	0xFF8
  2926                           tblptrh	equ	0xFF7
  2927                           tblptrl	equ	0xFF6
  2928                           tablat	equ	0xFF5
  2929                           postinc0	equ	0xFEE
  2930                           wreg	equ	0xFE8
  2931                           postdec1	equ	0xFE5
  2932                           fsr1l	equ	0xFE1
  2933                           status	equ	0xFD8
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           postinc0	equ	0xFEE
  2939                           wreg	equ	0xFE8
  2940                           postdec1	equ	0xFE5
  2941                           fsr1l	equ	0xFE1
  2942                           status	equ	0xFD8
  2943                           
  2944                           	psect	rparam
  2945  0000                     tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           postinc0	equ	0xFEE
  2950                           wreg	equ	0xFE8
  2951                           postdec1	equ	0xFE5
  2952                           fsr1l	equ	0xFE1
  2953                           status	equ	0xFD8


Data Sizes:
    Strings     128
    Constant    0
    Data        4
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      73
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    uart_write_text@text	PTR unsigned char  size(2) Largest target is 33
		 -> STR_4(CODE[32]), STR_3(CODE[31]), STR_2(CODE[33]), STR_1(CODE[32]), 


Critical Paths under _main in COMRAM

    _main->_uart_init
    _uart_write_text->_uart_write
    _uart_init->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    1135
                                             28 COMRAM    21    21      0
                _ConfigureOscillator
                          _ecan_init
                            _readADC
                          _selectAN0
                          _selectAN1
                          _selectAN2
                          _selectAN3
                          _selectAN4
                          _selectAN5
                          _selectAN6
                          _selectAN7
                   _setActuatorCntrl
                        _setAnalogIn
                         _testALLOFF
                          _testALLON
                     _testEveryOther
                    _uart_data_ready
                          _uart_init
                          _uart_read
                    _uart_write_text
 ---------------------------------------------------------------------------------
 (1) _uart_write_text                                      6     4      2     361
                                              1 COMRAM     6     4      2
                         _uart_write
 ---------------------------------------------------------------------------------
 (2) _uart_write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           14    10      4     559
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _uart_data_ready                                      1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _testEveryOther                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _testALLON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _testALLOFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setAnalogIn                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setActuatorCntrl                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN7                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN6                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN5                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ecan_init                                            6     6      0      60
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _ecan_init
   _readADC
   _selectAN0
   _selectAN1
   _selectAN2
   _selectAN3
   _selectAN4
   _selectAN5
   _selectAN6
   _selectAN7
   _setActuatorCntrl
   _setAnalogIn
   _testALLOFF
   _testALLON
   _testEveryOther
   _uart_data_ready
   _uart_init
     ___aldiv
   _uart_read
   _uart_write_text
     _uart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      49       1       76.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      20        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Mar 14 03:43:31 2016

           ??_uart_data_ready 0001                uart_write@data 0001                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000  
                 __CFG_LVP$ON 000000                           l261 10DC                           l149 1360  
                         l262 117C                           l257 10D2                           l382 1386  
                         l386 13A4                           l394 139A                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           u855 119C                           u865 11E6  
                         wreg 000FE8                  __CFG_WDT$OFF 000000                          l1143 13AC  
                        l1523 122C                          l1611 0EE0                          l1621 0F10  
                        l1605 0EBC                          l1471 1056                          l1527 124C  
                        l1473 1062                          l1465 1034                          l1641 0F88  
                        l1633 0F58                          l1625 0F28                          l1617 0EF8  
                        l1491 10BA                          l1483 1096                          l1475 1066  
                        l1459 101C                          l1645 0FA0                          l1637 0F70  
                        l1629 0F40                          l1565 0DF8                          l1487 10A4  
                        l1655 0FBE                          l1665 0FDC                          l1593 0E70  
                        l1675 0FFA                          l1599 0E96                          _BACK 0042  
            ??_testEveryOther 0001                          STR_1 0D22                          STR_2 0D01  
                        STR_3 0D62                          STR_4 0D42                          _FORW 0044  
                        _RCIF 007CF5                          _TRMT 007D61                   main@message 0031  
                        _main 0D82                          fsr1l 000FE1                          start 0000  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000010  
            uart_write_text@i 0006               __end_of___aldiv 10CC                         ?_main 0001  
    __size_of_uart_write_text 004A                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _TXREG 000FAD           _ConfigureOscillator 138A                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                 __CFG_WRT5$OFF 000000  
    __end_of_setActuatorCntrl 12F8                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
              __CFG_EBTR4$OFF 000000                __CFG_EBTR5$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000               __end_of_readADC 1378  
              __CFG_EBTRB$OFF 000000                         tablat 000FF5                         status 000FD8  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 126C  
                ?_setAnalogIn 0001                  __end_of_main 1000                 main@actuator0 0021  
               main@actuator1 0023                 main@actuator2 0025                 main@actuator3 0027  
               main@actuator4 0029                 main@actuator5 002B                 main@actuator6 002D  
               main@actuator7 002F                        ??_main 001D                 __activetblptr 000001  
                      _ADRESH 000FC4                        _ADRESL 000FC3               __CFG_BBSIZ$1024 000000  
                      _EXTEND 0043                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB0D4 000F4A                        _TXB0D5 000F4B                        _TXB0D6 000F4C  
                      _TXB0D7 000F4D         ??_ConfigureOscillator 0001                __CFG_XINST$OFF 000000  
               main@extendPos 001F                     ??___aldiv 0009                __CFG_STVREN$ON 000000  
                      clear_0 1272                     ??_readADC 0003               __CFG_BOREN$BOHW 000000  
               ecan_init@sid0 0003                  __pdataCOMRAM 0046                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           ??_uart_write_text 0004               _uart_data_ready 1378                    __accesstop 0060  
     __end_of__initialization 1298                 ___rparam_used 000001                __pcstackCOMRAM 0001  
          __size_of_ecan_init 00BE            __size_of_selectAN0 000A            __size_of_selectAN1 000A  
          __size_of_selectAN2 000A            __size_of_selectAN3 000A            __size_of_selectAN4 000A  
          __size_of_selectAN5 000A            __size_of_selectAN6 000A            __size_of_selectAN7 000A  
        __size_of_setAnalogIn 002E            __size_of_testALLON 0022            __size_of_uart_init 0098  
          __size_of_uart_read 000C                       _RETRACT 0045       __end_of_uart_data_ready 138A  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55             ?_setActuatorCntrl 0001  
                     _TXB0DLC 000F45             __end_of_ecan_init 118A            ??_setActuatorCntrl 0001  
                     __Hparam 0000                       __Lparam 0000                       ___aldiv 1000  
                __psmallconst 0D00                       __pcinit 126C                       __ramtop 0D00  
                     __ptext0 0D82                       __ptext1 1222                       __ptext2 1398  
                     __ptext3 13A4                       __ptext4 118A                       __ptext5 1000  
                     __ptext6 1378                       __ptext7 12F8                       __ptext8 131A  
                     __ptext9 133C                       _readADC 135E                       _margin0 0032  
                     _margin1 0034                       _margin2 0036                       _margin3 0038  
                     _margin4 003A                       _margin5 003C                       _margin6 003E  
                     _margin7 0040              ___aldiv@dividend 0001                main@retractPos 001D  
           __end_of_selectAN0 1400             __end_of_selectAN1 13F6             __end_of_selectAN2 13EC  
           __end_of_selectAN3 13E2          end_of_initialization 1298             __end_of_selectAN4 13D8  
           __end_of_selectAN5 13CE             __end_of_selectAN6 13C4             __end_of_selectAN7 13BA  
              ecan_init@mask0 0005             __end_of_testALLON 133C                    _testALLOFF 133C  
           __end_of_uart_init 1222             __end_of_uart_read 13B0       __size_of_testEveryOther 0022  
                   _RCSTAbits 000FAB              ___aldiv@quotient 000B                       postdec1 000FE5  
                  _retractPos 0048                       postinc0 000FEE               _uart_write_text 1222  
                  _uart_write 1398                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
            ?_uart_data_ready 0001   __end_of_ConfigureOscillator 1398                     _TXSTAbits 000FAC  
           readADC@digitalVal 0003                 __pidataCOMRAM 1400                   _ECANCONbits 000F77  
         start_initialization 126C                   _CANSTATbits 000F6E              __CFG_OSC$IRCIO67 000000  
                 ?_testALLOFF 0001       __end_of_uart_write_text 126C              __CFG_LPT1OSC$OFF 000000  
                 ?_uart_write 0001                   __pbssCOMRAM 0032                   _BRGCON1bits 000F70  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72                     _ecan_init 10CC  
   __size_of_setActuatorCntrl 0024                _testEveryOther 12F8                 ??_setAnalogIn 0001  
         uart_write_text@text 0002                      ?___aldiv 0001                      ?_readADC 0001  
                 __smallconst 0D00           __size_of_testALLOFF 0022                     _extendPos 0046  
             ___aldiv@divisor 0005               ___aldiv@counter 0009                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B                      _LATDbits 000F8C  
         __size_of_uart_write 000C                    ?_ecan_init 0001                     _selectAN0 13F6  
                   _selectAN1 13EC                     _selectAN2 13E2                     _selectAN3 13D8  
                   _selectAN4 13CE                     _selectAN5 13C4                     _selectAN6 13BA  
                   _selectAN7 13B0        __end_of_testEveryOther 131A                      _PIE3bits 000FA3  
                   _testALLON 131A                      _PIR1bits 000F9E              ?_uart_write_text 0002  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61  
                    _RXB0SIDL 000F62                      _RXB1SIDH 000F51                      _RXB1SIDL 000F52  
                    _RXF0SIDH 000F00                      _RXF0SIDL 000F01                     _uart_init 118A  
                   _uart_read 13A4                      _TXB0SIDH 000F41                      _TXB0SIDL 000F42  
                  uart_init@x 001B                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
         __end_of_setAnalogIn 12D4                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0                     copy_data0 128C                    _CANCONbits 000F6F  
                  ?_selectAN0 0001                    ?_selectAN1 0001                    ?_selectAN2 0001  
                  ?_selectAN3 0001                    ?_selectAN4 0001                    ?_selectAN5 0001  
                  ?_selectAN6 0001                    ?_selectAN7 0001               ?_testEveryOther 0001  
                  ?_testALLON 0001                      __Hrparam 0000                      __Lrparam 0000  
                __Lsmallconst 0D00                    ?_uart_init 000F                    ?_uart_read 0001  
            __size_of___aldiv 00CC                    _CIOCONbits 000F73              __size_of_readADC 001A  
                _RXF0SIDLbits 000F01                      __ptext10 12A6                      __ptext11 12D4  
                    __ptext20 135E                      __ptext12 13B0                      __ptext21 10CC  
                    __ptext13 13BA                      __ptext22 138A                      __ptext14 13C4  
                    __ptext15 13CE                      __ptext16 13D8                      __ptext17 13E2  
                    __ptext18 13EC                      __ptext19 13F6                 __size_of_main 027E  
                 ??_ecan_init 0001      __size_of_uart_data_ready 0012                  ??_testALLOFF 0001  
__size_of_ConfigureOscillator 000E                  _TXB0SIDLbits 000F42              _setActuatorCntrl 12D4  
                 _setAnalogIn 12A6                  ??_uart_write 0001                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50                   _OSCTUNEbits 000F9B                    _INTCONbits 000FF2  
          __end_of_testALLOFF 135E             uart_init@baudrate 000F                   ??_selectAN0 0001  
                 ??_selectAN1 0001                   ??_selectAN2 0001                   ??_selectAN3 0001  
                 ??_selectAN4 0001                   ??_selectAN5 0001                   ??_selectAN6 0001  
                 ??_selectAN7 0001                   _TXB0CONbits 000F40            __end_of_uart_write 13A4  
                 ??_testALLON 0001                    _OSCCONbits 000FD3                   ??_uart_init 0013  
                 ??_uart_read 0001                   _RXFCON0bits 000DD4                  ___aldiv@sign 000A  
        _uart_data_ready$2262 0001  
